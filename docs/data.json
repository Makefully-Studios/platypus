{
    "project": {
        "name": "platypus",
        "version": "1.0.2",
        "description": "Platypus Docs",
        "url": "https://github.com/PBS-KIDS/Platypus",
        "logo": "assets/platypus-title.png"
    },
    "files": {
        "src\\components\\AIChaser.js": {
            "name": "src\\components\\AIChaser.js",
            "modules": {},
            "classes": {
                "platypus.components.AIChaser": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\AIPacer.js": {
            "name": "src\\components\\AIPacer.js",
            "modules": {},
            "classes": {
                "platypus.components.AIPacer": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\AudioSFX.js": {
            "name": "src\\components\\AudioSFX.js",
            "modules": {},
            "classes": {
                "platypus.components.AudioSFX": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\AudioVO.js": {
            "name": "src\\components\\AudioVO.js",
            "modules": {},
            "classes": {
                "platypus.components.AudioVO": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\Camera.js": {
            "name": "src\\components\\Camera.js",
            "modules": {},
            "classes": {
                "platypus.components.Camera": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\CameraFollowMe.js": {
            "name": "src\\components\\CameraFollowMe.js",
            "modules": {},
            "classes": {
                "platypus.components.CameraFollowMe": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\CollisionBasic.js": {
            "name": "src\\components\\CollisionBasic.js",
            "modules": {},
            "classes": {
                "platypus.components.CollisionBasic": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\CollisionFilter.js": {
            "name": "src\\components\\CollisionFilter.js",
            "modules": {},
            "classes": {
                "platypus.components.CollisionFilter": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\CollisionGroup.js": {
            "name": "src\\components\\CollisionGroup.js",
            "modules": {},
            "classes": {
                "platypus.components.CollisionGroup": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\CollisionTiles.js": {
            "name": "src\\components\\CollisionTiles.js",
            "modules": {},
            "classes": {
                "platypus.components.CollisionTiles": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\ComponentSwitcher.js": {
            "name": "src\\components\\ComponentSwitcher.js",
            "modules": {},
            "classes": {
                "platypus.components.ComponentSwitcher": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\Counter.js": {
            "name": "src\\components\\Counter.js",
            "modules": {},
            "classes": {
                "platypus.components.Counter": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\EntityContainer.js": {
            "name": "src\\components\\EntityContainer.js",
            "modules": {},
            "classes": {
                "platypus.components.EntityContainer": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\EntityController.js": {
            "name": "src\\components\\EntityController.js",
            "modules": {},
            "classes": {
                "platypus.components.EntityController": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\EventRender.js": {
            "name": "src\\components\\EventRender.js",
            "modules": {},
            "classes": {
                "platypus.components.EventRender": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\HandlerCollision.js": {
            "name": "src\\components\\HandlerCollision.js",
            "modules": {},
            "classes": {
                "platypus.components.HandlerCollision": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\HandlerController.js": {
            "name": "src\\components\\HandlerController.js",
            "modules": {},
            "classes": {
                "platypus.components.HandlerController": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\HandlerLogic.js": {
            "name": "src\\components\\HandlerLogic.js",
            "modules": {},
            "classes": {
                "platypus.components.HandlerLogic": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\HandlerRender.js": {
            "name": "src\\components\\HandlerRender.js",
            "modules": {},
            "classes": {
                "platypus.components.HandlerRender": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\Interactive.js": {
            "name": "src\\components\\Interactive.js",
            "modules": {},
            "classes": {
                "platypus.components.Interactive": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LevelBuilder.js": {
            "name": "src\\components\\LevelBuilder.js",
            "modules": {},
            "classes": {
                "platypus.components.LevelBuilder": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicAngularMovement.js": {
            "name": "src\\components\\LogicAngularMovement.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicAngularMovement": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicAttachment.js": {
            "name": "src\\components\\LogicAttachment.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicAttachment": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicButton.js": {
            "name": "src\\components\\LogicButton.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicButton": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicCarrier.js": {
            "name": "src\\components\\LogicCarrier.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicCarrier": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicDestroyMe.js": {
            "name": "src\\components\\LogicDestroyMe.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicDestroyMe": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicDirectionalMovement.js": {
            "name": "src\\components\\LogicDirectionalMovement.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicDirectionalMovement": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicDragDrop.js": {
            "name": "src\\components\\LogicDragDrop.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicDragDrop": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicImpactLaunch.js": {
            "name": "src\\components\\LogicImpactLaunch.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicPacingPlatform.js": {
            "name": "src\\components\\LogicPacingPlatform.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicPortable.js": {
            "name": "src\\components\\LogicPortable.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicPortable": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicPortal.js": {
            "name": "src\\components\\LogicPortal.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicPushable.js": {
            "name": "src\\components\\LogicPushable.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicRebounder.js": {
            "name": "src\\components\\LogicRebounder.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicRegionSpawner.js": {
            "name": "src\\components\\LogicRegionSpawner.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicRotationalMovement.js": {
            "name": "src\\components\\LogicRotationalMovement.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicRotationalMovement": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\LogicSpawner.js": {
            "name": "src\\components\\LogicSpawner.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicStateMachine.js": {
            "name": "src\\components\\LogicStateMachine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicSwitch.js": {
            "name": "src\\components\\LogicSwitch.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicTeleportee.js": {
            "name": "src\\components\\LogicTeleportee.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicTeleporter.js": {
            "name": "src\\components\\LogicTeleporter.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicTimer.js": {
            "name": "src\\components\\LogicTimer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\LogicWindUpRacer.js": {
            "name": "src\\components\\LogicWindUpRacer.js",
            "modules": {},
            "classes": {
                "platypus.components.LogicWindUpRacer": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\Motion.js": {
            "name": "src\\components\\Motion.js",
            "modules": {},
            "classes": {
                "platypus.components.Motion": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\Mover.js": {
            "name": "src\\components\\Mover.js",
            "modules": {},
            "classes": {
                "platypus.components.Mover": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\Node.js": {
            "name": "src\\components\\Node.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\NodeMap.js": {
            "name": "src\\components\\NodeMap.js",
            "modules": {},
            "classes": {
                "platypus.components.NodeMap": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\NodeResident.js": {
            "name": "src\\components\\NodeResident.js",
            "modules": {},
            "classes": {
                "platypus.components.NodeResident": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\Orientation.js": {
            "name": "src\\components\\Orientation.js",
            "modules": {},
            "classes": {
                "platypus.components.Orientation": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RandomEvents.js": {
            "name": "src\\components\\RandomEvents.js",
            "modules": {},
            "classes": {
                "platypus.components.RandomEvents": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RelativePosition.js": {
            "name": "src\\components\\RelativePosition.js",
            "modules": {},
            "classes": {
                "platypus.components.RelativePosition": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\RelayFamily.js": {
            "name": "src\\components\\RelayFamily.js",
            "modules": {},
            "classes": {
                "platypus.components.RelayFamily": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RelayGame.js": {
            "name": "src\\components\\RelayGame.js",
            "modules": {},
            "classes": {
                "platypus.components.RelayGame": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RelayLinker.js": {
            "name": "src\\components\\RelayLinker.js",
            "modules": {},
            "classes": {
                "platypus.components.RelayLinker": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RelayParent.js": {
            "name": "src\\components\\RelayParent.js",
            "modules": {},
            "classes": {
                "platypus.components.RelayParent": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RelaySelf.js": {
            "name": "src\\components\\RelaySelf.js",
            "modules": {},
            "classes": {
                "platypus.components.RelaySelf": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RenderAnimation.js": {
            "name": "src\\components\\RenderAnimation.js",
            "modules": {},
            "classes": {
                "platypus.components.RenderAnimation": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RenderContainer.js": {
            "name": "src\\components\\RenderContainer.js",
            "modules": {},
            "classes": {
                "platypus.components.RenderContainer": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RenderDebug.js": {
            "name": "src\\components\\RenderDebug.js",
            "modules": {},
            "classes": {
                "platypus.components.RenderDebug": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RenderDestroyMe.js": {
            "name": "src\\components\\RenderDestroyMe.js",
            "modules": {},
            "classes": {
                "platypus.components.RenderDestroyMe": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RenderProgress.js": {
            "name": "src\\components\\RenderProgress.js",
            "modules": {},
            "classes": {
                "platypus.components.RenderProgress": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RenderSpine.js": {
            "name": "src\\components\\RenderSpine.js",
            "modules": {},
            "classes": {
                "platypus.components.RenderSpine": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RenderSprite.js": {
            "name": "src\\components\\RenderSprite.js",
            "modules": {},
            "classes": {
                "platypus.components.RenderSprite": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RenderText.js": {
            "name": "src\\components\\RenderText.js",
            "modules": {},
            "classes": {
                "platypus.components.RenderText": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\RenderTiles.js": {
            "name": "src\\components\\RenderTiles.js",
            "modules": {},
            "classes": {
                "platypus.components.RenderTiles": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\SceneChanger.js": {
            "name": "src\\components\\SceneChanger.js",
            "modules": {},
            "classes": {
                "platypus.components.SceneChanger": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\StateRender.js": {
            "name": "src\\components\\StateRender.js",
            "modules": {},
            "classes": {
                "platypus.components.StateRender": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\TiledLoader.js": {
            "name": "src\\components\\TiledLoader.js",
            "modules": {},
            "classes": {
                "platypus.components.TiledLoader": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\Timeline.js": {
            "name": "src\\components\\Timeline.js",
            "modules": {},
            "classes": {
                "platypus.components.Timeline": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\Tutorial.js": {
            "name": "src\\components\\Tutorial.js",
            "modules": {},
            "classes": {
                "platypus.components.Tutorial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\Tween.js": {
            "name": "src\\components\\Tween.js",
            "modules": {},
            "classes": {
                "platypus.components.Tween": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\VoiceOver.js": {
            "name": "src\\components\\VoiceOver.js",
            "modules": {},
            "classes": {
                "platypus.components.VoiceOver": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\components\\XHR.js": {
            "name": "src\\components\\XHR.js",
            "modules": {},
            "classes": {
                "platypus.components.XHR": 1
            },
            "fors": {},
            "namespaces": {
                "platypus.components": 1
            }
        },
        "src\\mixins\\Array.js": {
            "name": "src\\mixins\\Array.js",
            "modules": {},
            "classes": {
                "window.Array": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src\\mixins\\PIXI.Graphics.js": {
            "name": "src\\mixins\\PIXI.Graphics.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\mixins\\String.js": {
            "name": "src\\mixins\\String.js",
            "modules": {},
            "classes": {
                "window.String": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src\\polyfills\\Map.js": {
            "name": "src\\polyfills\\Map.js",
            "modules": {},
            "classes": {
                "window.Map": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src\\AABB.js": {
            "name": "src\\AABB.js",
            "modules": {},
            "classes": {
                "platypus.AABB": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\ActionState.js": {
            "name": "src\\ActionState.js",
            "modules": {},
            "classes": {
                "platypus.ActionState": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\Async.js": {
            "name": "src\\Async.js",
            "modules": {},
            "classes": {
                "platypus.Async": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\CollisionData.js": {
            "name": "src\\CollisionData.js",
            "modules": {},
            "classes": {
                "platypus.CollisionData": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\CollisionDataContainer.js": {
            "name": "src\\CollisionDataContainer.js",
            "modules": {},
            "classes": {
                "platypus.CollisionDataContainer": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\CollisionShape.js": {
            "name": "src\\CollisionShape.js",
            "modules": {},
            "classes": {
                "platypus.CollisionShape": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\Component.js": {
            "name": "src\\Component.js",
            "modules": {},
            "classes": {
                "platypus.Component": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\Data.js": {
            "name": "src\\Data.js",
            "modules": {},
            "classes": {
                "platypus.Data": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\DataMap.js": {
            "name": "src\\DataMap.js",
            "modules": {},
            "classes": {
                "platypus.DataMap": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\Entity.js": {
            "name": "src\\Entity.js",
            "modules": {},
            "classes": {
                "platypus.Entity": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\Game.js": {
            "name": "src\\Game.js",
            "modules": {},
            "classes": {
                "platypus.Game": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\Messenger.js": {
            "name": "src\\Messenger.js",
            "modules": {},
            "classes": {
                "platypus.Messenger": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\PIXIAnimation.js": {
            "name": "src\\PIXIAnimation.js",
            "modules": {},
            "classes": {
                "platypus.PIXIAnimation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\PlatypusPlugin.js": {
            "name": "src\\PlatypusPlugin.js",
            "modules": {},
            "classes": {
                "platypus.PlatypusPlugin": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\Scene.js": {
            "name": "src\\Scene.js",
            "modules": {},
            "classes": {
                "platypus.Scene": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\StateMap.js": {
            "name": "src\\StateMap.js",
            "modules": {},
            "classes": {
                "platypus.StateMap": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\Vector.js": {
            "name": "src\\Vector.js",
            "modules": {},
            "classes": {
                "platypus.Vector": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        },
        "src\\factory.js": {
            "name": "src\\factory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\platypus.js": {
            "name": "src\\platypus.js",
            "modules": {
                "platypus": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {
                "platypus": 1
            }
        }
    },
    "modules": {
        "platypus": {
            "name": "platypus",
            "submodules": {},
            "classes": {
                "platypus.components.AIChaser": 1,
                "platypus.components.AIPacer": 1,
                "platypus.components.AudioSFX": 1,
                "platypus.components.AudioVO": 1,
                "platypus.components.Camera": 1,
                "platypus.components.CameraFollowMe": 1,
                "platypus.components.CollisionBasic": 1,
                "platypus.components.CollisionFilter": 1,
                "platypus.components.CollisionGroup": 1,
                "platypus.components.CollisionTiles": 1,
                "platypus.components.ComponentSwitcher": 1,
                "platypus.components.Counter": 1,
                "platypus.components.EntityContainer": 1,
                "platypus.components.EntityController": 1,
                "platypus.components.EventRender": 1,
                "platypus.components.HandlerCollision": 1,
                "platypus.components.HandlerController": 1,
                "platypus.components.HandlerLogic": 1,
                "platypus.components.HandlerRender": 1,
                "platypus.components.Interactive": 1,
                "platypus.components.LevelBuilder": 1,
                "platypus.components.LogicAngularMovement": 1,
                "platypus.components.LogicAttachment": 1,
                "platypus.components.LogicButton": 1,
                "platypus.components.LogicCarrier": 1,
                "platypus.components.LogicDestroyMe": 1,
                "platypus.components.LogicDirectionalMovement": 1,
                "platypus.components.LogicDragDrop": 1,
                "platypus.components.LogicPortable": 1,
                "platypus.components.LogicRotationalMovement": 1,
                "platypus.components.LogicWindUpRacer": 1,
                "platypus.components.Motion": 1,
                "platypus.components.Mover": 1,
                "platypus.components.NodeMap": 1,
                "platypus.components.NodeResident": 1,
                "platypus.components.Orientation": 1,
                "platypus.components.RandomEvents": 1,
                "platypus.components.RelativePosition": 1,
                "platypus.components.RelayFamily": 1,
                "platypus.components.RelayGame": 1,
                "platypus.components.RelayLinker": 1,
                "platypus.components.RelayParent": 1,
                "platypus.components.RelaySelf": 1,
                "platypus.components.RenderAnimation": 1,
                "platypus.components.RenderContainer": 1,
                "platypus.components.RenderDebug": 1,
                "platypus.components.RenderDestroyMe": 1,
                "platypus.components.RenderProgress": 1,
                "platypus.components.RenderSpine": 1,
                "platypus.components.RenderSprite": 1,
                "platypus.components.RenderText": 1,
                "platypus.components.RenderTiles": 1,
                "platypus.components.SceneChanger": 1,
                "platypus.components.StateRender": 1,
                "platypus.components.TiledLoader": 1,
                "platypus.components.Timeline": 1,
                "platypus.components.Tutorial": 1,
                "platypus.components.Tween": 1,
                "platypus.components.VoiceOver": 1,
                "platypus.components.XHR": 1,
                "window.Array": 1,
                "window.String": 1,
                "window.Map": 1,
                "platypus.AABB": 1,
                "platypus.ActionState": 1,
                "platypus.Async": 1,
                "platypus.CollisionData": 1,
                "platypus.CollisionDataContainer": 1,
                "platypus.CollisionShape": 1,
                "platypus.Component": 1,
                "platypus.Data": 1,
                "platypus.DataMap": 1,
                "platypus.Entity": 1,
                "platypus.Game": 1,
                "platypus.Messenger": 1,
                "platypus.PIXIAnimation": 1,
                "platypus.PlatypusPlugin": 1,
                "platypus.Scene": 1,
                "platypus.StateMap": 1,
                "platypus.Vector": 1
            },
            "fors": {},
            "namespaces": {
                "platypus": 1
            },
            "tag": "module",
            "file": "src\\Vector.js",
            "line": 1
        }
    },
    "classes": {
        "platypus.components.AIChaser": {
            "name": "platypus.components.AIChaser",
            "shortname": "platypus.components.AIChaser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\AIChaser.js",
            "line": 1,
            "description": "This component acts as a simple AI that will chase another entity.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.AIPacer": {
            "name": "platypus.components.AIPacer",
            "shortname": "platypus.components.AIPacer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\AIPacer.js",
            "line": 1,
            "description": "This component acts as a simple AI that will reverse the movement direction of an object when it collides with something.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.AudioSFX": {
            "name": "platypus.components.AudioSFX",
            "shortname": "platypus.components.AudioSFX",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\AudioSFX.js",
            "line": 1,
            "description": "This component plays audio using the SpringRoll Sound instance. Audio is played in one of two ways, by triggering specific messages defined in the audio component definition or using an audio map which plays sounds when the entity enters specified states.",
            "uses": [
                "platypus.Component"
            ],
            "since": "0.6.0"
        },
        "platypus.components.AudioVO": {
            "name": "platypus.components.AudioVO",
            "shortname": "platypus.components.AudioVO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\AudioVO.js",
            "line": 1,
            "description": "This component plays audio using the SpringRoll VOPlayer instance. Audio is played by triggering specific messages defined in the audio component definition.",
            "uses": [
                "platypus.Component"
            ],
            "since": "0.6.0"
        },
        "platypus.components.Camera": {
            "name": "platypus.components.Camera",
            "shortname": "platypus.components.Camera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\Camera.js",
            "line": 1,
            "description": "This component controls the game camera deciding where and how it should move. The camera also broadcasts messages when the window resizes or its orientation changes.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.CameraFollowMe": {
            "name": "platypus.components.CameraFollowMe",
            "shortname": "platypus.components.CameraFollowMe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\CameraFollowMe.js",
            "line": 1,
            "description": "This component can request that the camera focus on this entity.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.CollisionBasic": {
            "name": "platypus.components.CollisionBasic",
            "shortname": "platypus.components.CollisionBasic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\CollisionBasic.js",
            "line": 1,
            "description": "This component causes this entity to collide with other entities. It must be part of a collision group and will receive messages when colliding with other entities in the collision group.\n\nMultiple collision components may be added to a single entity if distinct messages should be triggered for certain collision areas on the entity or if the soft collision area is a different shape from the solid collision area. Be aware that too many additional collision areas may adversely affect performance.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.CollisionFilter": {
            "name": "platypus.components.CollisionFilter",
            "shortname": "platypus.components.CollisionFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\CollisionFilter.js",
            "line": 1,
            "description": "This component will listen for a particular collision message and, depending on a given entity.state attribute, retrigger the collision as another collision message.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.CollisionGroup": {
            "name": "platypus.components.CollisionGroup",
            "shortname": "platypus.components.CollisionGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\CollisionGroup.js",
            "line": 1,
            "description": "This component groups other entities with this entity for collision checking. This is useful for carrying and moving platforms. It uses `EntityContainer` component messages if triggered to add to its collision list and also listens for explicit add/remove messages (useful in the absence of an `EntityContainer` component).",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.CollisionTiles": {
            "name": "platypus.components.CollisionTiles",
            "shortname": "platypus.components.CollisionTiles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\CollisionTiles.js",
            "line": 1,
            "description": "This component causes the tile-map to collide with other entities. It must be part of a collision group and will cause \"hit-by-tile\" messages to fire on colliding entities.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.ComponentSwitcher": {
            "name": "platypus.components.ComponentSwitcher",
            "shortname": "platypus.components.ComponentSwitcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\ComponentSwitcher.js",
            "line": 1,
            "description": "This component listens for messages and, according to its preset settings, will remove and add components to the entity. This is useful if certain events should modify the behavior of the entity in some way: for example, acquiring a pogo-stick might add a jumping component so the hero can jump.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.Counter": {
            "name": "platypus.components.Counter",
            "shortname": "platypus.components.Counter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\Counter.js",
            "line": 1,
            "description": "A simple component that keeps count of something and sends messages each time the count changes. Can also have a total. When it does it will display 'count / total'.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.EntityContainer": {
            "name": "platypus.components.EntityContainer",
            "shortname": "platypus.components.EntityContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\EntityContainer.js",
            "line": 1,
            "description": "This component allows the entity to contain child entities. It will add several methods to the entity to manage adding and removing entities.",
            "extends": "platypus.Messenger",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.EntityController": {
            "name": "platypus.components.EntityController",
            "shortname": "platypus.components.EntityController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\EntityController.js",
            "line": 1,
            "description": "This component listens for input messages triggered on the entity and updates the state of any controller inputs it is listening for. It then broadcasts messages on the entity corresponding to the input it received.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.EventRender": {
            "name": "platypus.components.EventRender",
            "shortname": "EventRender",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\EventRender.js",
            "line": 1,
            "description": "This component is typically added to an entity automatically by a render component. It handles mapping entity events to playable animations.",
            "uses": [
                "platypus.Component"
            ],
            "since": "0.9.0"
        },
        "platypus.components.HandlerCollision": {
            "name": "platypus.components.HandlerCollision",
            "shortname": "platypus.components.HandlerCollision",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\HandlerCollision.js",
            "line": 1,
            "description": "This component checks for collisions between entities which typically have either a [CollisionTiles](platypus.components.CollisionTiles.html) component for tile maps or a [CollisionBasic](platypus.components.CollisionBasic.html) component for other entities. It uses `EntityContainer` component messages if triggered to add to its collision list and also listens for explicit add/remove messages (useful in the absence of an `EntityContainer` component).",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.HandlerController": {
            "name": "platypus.components.HandlerController",
            "shortname": "platypus.components.HandlerController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\HandlerController.js",
            "line": 1,
            "description": "This component handles capturing and relaying input information to the entities that care about it. It takes mouse, keyboard, and custom input messages. State messages are sent immediately to the entities when they are received, the 'HandlerController' message is sent to demarcate ticks.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.HandlerLogic": {
            "name": "platypus.components.HandlerLogic",
            "shortname": "platypus.components.HandlerLogic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\HandlerLogic.js",
            "line": 1,
            "description": "A component that handles updating logic components. Each tick it calls all the entities that accept 'handle-logic' messages. This component is usually used on an \"action-layer\".",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.HandlerRender": {
            "name": "platypus.components.HandlerRender",
            "shortname": "platypus.components.HandlerRender",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\HandlerRender.js",
            "line": 1,
            "description": "A component that handles updating the render components on entities that are rendering via PIXI. Calls 'handle-render on children entities every tick. Also initializes handlers for mouse events on the layer level.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.Interactive": {
            "name": "platypus.components.Interactive",
            "shortname": "Interactive",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\Interactive.js",
            "line": 1,
            "description": "This component accepts touches and clicks on the entity. It is typically automatically added by a render component that requires interactive functionality.",
            "uses": [
                "platypus.Component"
            ],
            "since": "0.9.0"
        },
        "platypus.components.LevelBuilder": {
            "name": "platypus.components.LevelBuilder",
            "shortname": "platypus.components.LevelBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LevelBuilder.js",
            "line": 1,
            "description": "This component works in tandem with 'TiledLoader by taking several Tiled maps and combining them before `TiledLoader` processes them. Tiled maps must use the same tilesets for this to function correctly.\n\nNote: Set \"manuallyLoad\" to `true` in the `TiledLoader` component JSON definition so that it will wait for this component's \"load-level\" call.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicAngularMovement": {
            "name": "platypus.components.LogicAngularMovement",
            "shortname": "platypus.components.LogicAngularMovement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 1,
            "description": "This component moves the entity in the direction of an internally stored angle value. When moving, the entity constantly accelerates the entity in a direction up to a max velocity.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicAttachment": {
            "name": "platypus.components.LogicAttachment",
            "shortname": "platypus.components.LogicAttachment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicAttachment.js",
            "line": 1,
            "description": "Creates an entity and connects it with the owner entity. This is useful for entities that have a one-to-one relationship with a given entity and must move as if connected to the host entity.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicButton": {
            "name": "platypus.components.LogicButton",
            "shortname": "platypus.components.LogicButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicButton.js",
            "line": 1,
            "description": "Provides button functionality for a RenderSprite component.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicCarrier": {
            "name": "platypus.components.LogicCarrier",
            "shortname": "platypus.components.LogicCarrier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicCarrier.js",
            "line": 1,
            "description": "This component allows this entity carry other entities with which it collides. Entities that this component should carry need to have a [[Logic-Portable]] component attached to notify this entity that they are portable.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicDestroyMe": {
            "name": "platypus.components.LogicDestroyMe",
            "shortname": "platypus.components.LogicDestroyMe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicDestroyMe.js",
            "line": 1,
            "description": "This component allows an entity to be removed from the stage when \"destroy-me\" is triggered.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicDirectionalMovement": {
            "name": "platypus.components.LogicDirectionalMovement",
            "shortname": "platypus.components.LogicDirectionalMovement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 1,
            "description": "This component changes the [Motion](platypus.components.Motion.html) of an entity according to its current speed and heading. It accepts directional messages that can stand alone, or come from a mapped controller, in which case it checks the `pressed` value of the message before changing its course.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicDragDrop": {
            "name": "platypus.components.LogicDragDrop",
            "shortname": "platypus.components.LogicDragDrop",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicDragDrop.js",
            "line": 1,
            "description": "A component that allows an object to be dragged and dropped. Can use collision to prevent dropping the objects in certain locations.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicPortable": {
            "name": "platypus.components.LogicPortable",
            "shortname": "platypus.components.LogicPortable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicPortable.js",
            "line": 1,
            "description": "This component allows this entity to be carried by other entities with which it collides. Entities that should carry this entity need to have a [[Logic-Carrier]] component attached.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicRotationalMovement": {
            "name": "platypus.components.LogicRotationalMovement",
            "shortname": "platypus.components.LogicRotationalMovement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 1,
            "description": "This component changes the (x, y) position of an object according to its current speed and heading. It maintains its own heading information independent of other components allowing it to be used simultaneously with other logic components like [[Logic-Pushable]]. It accepts directional messages that can stand alone, or come from a mapped controller, in which case it checks the `pressed` value of the message before changing its course accordingly.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.LogicWindUpRacer": {
            "name": "platypus.components.LogicWindUpRacer",
            "shortname": "platypus.components.LogicWindUpRacer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 1,
            "description": "Replicates logic for a wind-up toy: listens for a wind-up message over a series of ticks to charge, and then begins racing once the charge is complete.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.Motion": {
            "name": "platypus.components.Motion",
            "shortname": "platypus.components.Motion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\Motion.js",
            "line": 1,
            "description": "This component works in tandem with the [Mover](platypus.components.Mover.html) component by adding a vector of motion to the entity. This component is typically created by `Mover` and doesn't need to be added separately.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.Mover": {
            "name": "platypus.components.Mover",
            "shortname": "platypus.components.Mover",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\Mover.js",
            "line": 1,
            "description": "This component handles entity motion via velocity and acceleration changes. This is useful for directional movement, gravity, bounce-back collision reactions, jumping, etc.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.NodeMap": {
            "name": "platypus.components.NodeMap",
            "shortname": "platypus.components.NodeMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\NodeMap.js",
            "line": 1,
            "description": "This component sets up a NodeMap to be used by the [NodeResident](platypus.components.NodeResident.html) component on this entity's child entities.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.NodeResident": {
            "name": "platypus.components.NodeResident",
            "shortname": "platypus.components.NodeResident",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\NodeResident.js",
            "line": 57,
            "description": "This component connects an entity to its parent's [[NodeMap]]. It manages navigating the NodeMap and triggering events on the entity related to its position.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.Orientation": {
            "name": "platypus.components.Orientation",
            "shortname": "platypus.components.Orientation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\Orientation.js",
            "line": 1,
            "description": "This component handles the orientation of an entity. It maintains an `orientationMatrix` property on the owner to describe the entity's orientation using an affine transformation matrix.\n\nSeveral methods on this component accept either a 3x3 2D Array or a string to describe orientation changes. Accepted strings include:\n - \"horizontal\"       - This flips the entity around the y-axis.\n - \"vertical\"         - This flips the entity around the x-axis.\n - \"diagonal\"         - This flips the entity around the x=y axis.\n - \"diagonal-inverse\" - This flips the entity around the x=-y axis.\n - \"rotate-90\"        - This rotates the entity 90 degrees clockwise.\n - \"rotate-180\"       - This rotates the entity 180 degrees clockwise (noticeable when tweening).\n - \"rotate-270\"       - This rotates the entity 90 degrees counter-clockwise.\n\nNOTE: This component absorbs specific properties already on the entity into orientation:\n - **orientationMatrix**: 3x3 2D array describing an affine transformation.\n - If the above is not provided, these properties are used to set initial orientation. This is useful when importing Tiled maps.\n    - **scaleX**: absorb -1 if described\n    - **scaleY**: absorb -1 if described\n    - **rotation**: absorb 90 degree rotations",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RandomEvents": {
            "name": "platypus.components.RandomEvents",
            "shortname": "platypus.components.RandomEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RandomEvents.js",
            "line": 1,
            "description": "This component listens for certain messages, picks a message from a related list of events, and triggers it. This is useful for adding random behaviors to an entity, such as having an entity say one thing from a list of audio clips. For example, defining this component on an Entity may look like this:\n\n    {\n      \"type\": \"RandomEvents\",\n      \n      \"events\": {\n      // This is a key/value list of events to listen for, with each event mapping to an array of events to pick from.\n      \n        \"make-sound\": [\"scream\", \"whisper\", \"talk\"]\n        //on the component receiving the \"make-sound\" message, it will trigger one of the three possible messages listed here.\n      }\n    }",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RelativePosition": {
            "name": "platypus.components.RelativePosition",
            "shortname": "RelativePosition",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RelativePosition.js",
            "line": 1,
            "description": "This component positions an entity relative to the camera viewport, according to `left`, `top`, `right`, and `left` properties.",
            "uses": [
                "platypus.Component"
            ],
            "since": "1.0.0"
        },
        "platypus.components.RelayFamily": {
            "name": "platypus.components.RelayFamily",
            "shortname": "platypus.components.RelayFamily",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RelayFamily.js",
            "line": 1,
            "description": "This component allows an entity to communicate directly with one or more entities via the message model, by passing local messages directly to entities in the same family as new triggered events. This component is placed on a single entity and all entities created by this entity become part of its \"family\".",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RelayGame": {
            "name": "platypus.components.RelayGame",
            "shortname": "platypus.components.RelayGame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RelayGame.js",
            "line": 1,
            "description": "This component listens for specified local entity messages and re-broadcasts them at the scene level.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RelayLinker": {
            "name": "platypus.components.RelayLinker",
            "shortname": "platypus.components.RelayLinker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RelayLinker.js",
            "line": 1,
            "description": "Allows an entity to communicate directly with one or more entities via the message model by passing local events directly to the linked entities as new triggered events.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RelayParent": {
            "name": "platypus.components.RelayParent",
            "shortname": "platypus.components.RelayParent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RelayParent.js",
            "line": 1,
            "description": "This component listens for specified local entity messages and re-broadcasts them on its parent entity.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RelaySelf": {
            "name": "platypus.components.RelaySelf",
            "shortname": "platypus.components.RelaySelf",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RelaySelf.js",
            "line": 1,
            "description": "This component listens for specified local entity messages and re-broadcasts them on itself as other messages.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RenderAnimation": {
            "name": "platypus.components.RenderAnimation",
            "shortname": "platypus.components.RenderAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RenderAnimation.js",
            "line": 1,
            "description": "This component is attached to entities that will appear in the game world. It renders a static or animated image. It listens for messages triggered on the entity or changes in the logical state of the entity to play a corresponding animation.\n\nNote: This component requires assets published using [PixiAnimate](https://github.com/jiborobot/pixi-animate).",
            "uses": [
                "platypus.Component"
            ],
            "since": "0.10.0"
        },
        "platypus.components.RenderContainer": {
            "name": "platypus.components.RenderContainer",
            "shortname": "platypus.components.RenderContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RenderContainer.js",
            "line": 1,
            "description": "This component is attached to entities that will appear in the game world. It creates a PIXI Container to contain all other display objects on the entity and keeps the container updates with the entity's location and other dynamic properties.",
            "uses": [
                "platypus.Component"
            ],
            "since": "0.11.0"
        },
        "platypus.components.RenderDebug": {
            "name": "platypus.components.RenderDebug",
            "shortname": "platypus.components.RenderDebug",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RenderDebug.js",
            "line": 1,
            "description": "This component is attached to entities that will appear in the game world. It serves two purposes. First, it displays a rectangle that indicates the location of the entity. By default it uses the specified position and dimensions of the object (in grey). If the object has a collision component it will display the AABB of the collision shape (in pink). If the entity has a LogicCarrier component and is/was carrying an object, a green rectangle will be drawn showing the collision group. The RenderDebug component also allows the developer to right-click on an entity and it will print the object in the debug console.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RenderDestroyMe": {
            "name": "platypus.components.RenderDestroyMe",
            "shortname": "platypus.components.RenderDestroyMe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RenderDestroyMe.js",
            "line": 1,
            "description": "This component will destroy the entity once an animation has finished. This is useful for explosions or similar animations where the entity is no longer needed once the animation completes.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RenderProgress": {
            "name": "platypus.components.RenderProgress",
            "shortname": "platypus.components.RenderProgress",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RenderProgress.js",
            "line": 1,
            "description": "This component creates a visual progress bar that can be used for loading assets or showing other types of progress changes.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RenderSpine": {
            "name": "platypus.components.RenderSpine",
            "shortname": "platypus.components.RenderSpine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RenderSpine.js",
            "line": 1,
            "description": "This component is attached to entities that will appear in the game world. It renders a spine-based puppet. It listens for messages triggered on the entity or changes in the logical state of the entity to play a corresponding animation.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RenderSprite": {
            "name": "platypus.components.RenderSprite",
            "shortname": "platypus.components.RenderSprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RenderSprite.js",
            "line": 1,
            "description": "This component is attached to entities that will appear in the game world. It renders a static or animated image. It listens for messages triggered on the entity or changes in the logical state of the entity to play a corresponding animation.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.RenderText": {
            "name": "platypus.components.RenderText",
            "shortname": "platypus.components.RenderText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RenderText.js",
            "line": 1,
            "description": "This component is attached to entities that should display text.",
            "uses": [
                "platypus.Component"
            ],
            "since": "v0.11.9"
        },
        "platypus.components.RenderTiles": {
            "name": "platypus.components.RenderTiles",
            "shortname": "platypus.components.RenderTiles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\RenderTiles.js",
            "line": 1,
            "description": "This component handles rendering tile map backgrounds.\n\nWhen rendering the background, this component figures out what tiles are being displayed and caches them so they are rendered as one image rather than individually.\n\nAs the camera moves, the cache is updated by blitting the relevant part of the old cached image into a new cache and then rendering tiles that have shifted into the camera's view into the cache.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.SceneChanger": {
            "name": "platypus.components.SceneChanger",
            "shortname": "platypus.components.SceneChanger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\SceneChanger.js",
            "line": 1,
            "description": "This component allows the entity to initiate a change from the current scene to another scene.",
            "extends": "platypus.Component"
        },
        "platypus.components.StateRender": {
            "name": "platypus.components.StateRender",
            "shortname": "StateRender",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\StateRender.js",
            "line": 1,
            "description": "This component is typically added to an entity automatically by a render component. It handles mapping entity states to playable animations.",
            "uses": [
                "platypus.Component"
            ],
            "since": "0.9.0"
        },
        "platypus.components.TiledLoader": {
            "name": "platypus.components.TiledLoader",
            "shortname": "platypus.components.TiledLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\TiledLoader.js",
            "line": 1,
            "description": "This component is attached to a top-level entity (loaded by the [Scene](platypus.Scene.html)) and, once its peer components are loaded, ingests a JSON file exported from the [Tiled map editor](http://www.mapeditor.org/) and creates the tile maps and entities. Once it has finished loading the map, it removes itself from the list of components on the entity.\n\nThis component requires an [EntityContainer](platypus.components.EntityContainer.html) since it calls `entity.addEntity()` on the entity, provided by `EntityContainer`.\n\nThis component looks for the following entities, and if not found will load default versions:\n\n       {\n           \"render-layer\": {\n               \"id\": \"render-layer\",\n               \"components\":[{\n                   \"type\": \"RenderTiles\",\n                   \"spriteSheet\": \"import\",\n                   \"imageMap\":    \"import\",\n                   \"entityCache\": true\n               }]\n           },\n           \"collision-layer\": {\n               \"id\": \"collision-layer\",\n               \"components\":[{\n                   \"type\": \"CollisionTiles\",\n                   \"collisionMap\": \"import\"\n               }]\n           },\n           \"image-layer\": {\n               \"id\": \"image-layer\",\n               \"components\":[{\n                   \"type\": \"RenderTiles\",\n                   \"spriteSheet\": \"import\",\n                   \"imageMap\":    \"import\"\n               }]\n           }\n       }",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.Timeline": {
            "name": "platypus.components.Timeline",
            "shortname": "Timeline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\Timeline.js",
            "line": 1,
            "description": "Timeline enables the scheduling of events based on a linear timeline",
            "uses": [
                "platypus.Component"
            ],
            "since": "0.8.7"
        },
        "platypus.components.Tutorial": {
            "name": "platypus.components.Tutorial",
            "shortname": "Tutorial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\Tutorial.js",
            "line": 1,
            "description": "Tutorial provides a framework for playing tutorials. It allows the user to define things such as under what conditions tutorials will play, how often they play, and which tutorials have priority.",
            "uses": [
                "platypus.Component"
            ],
            "since": "0.8.7"
        },
        "platypus.components.Tween": {
            "name": "platypus.components.Tween",
            "shortname": "platypus.components.Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\Tween.js",
            "line": 1,
            "description": "This component takes a list of tween definitions and plays them as needed. This component requires CreateJS Tween.\n\nNOTE: This component handles ticking that's synchronized with the game's tick, NOT it's logic tick. As such, reading tweened values during the logic tick will show a changed value on the first logic tick, but all subsequent logic ticks comprising the game's full tick will show no change at all.",
            "uses": [
                "platypus.Component"
            ]
        },
        "platypus.components.VoiceOver": {
            "name": "platypus.components.VoiceOver",
            "shortname": "platypus.components.VoiceOver",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\VoiceOver.js",
            "line": 1,
            "description": "This component uses its definition to load an AudioVO component and either a RenderSprite or RenderAnimation component. These work in an interconnected way to render animations corresponding to one or more audio tracks.\n\nIn addition to its own properties, this component also accepts all properties accepted by either [RenderSprite](platypus.components.RenderSprite.html), [RenderSprite](platypus.components.RenderAnimation.html), and [AudioVO](platypus.components.AudioVO.html) and passes them along when it creates those components.",
            "uses": [
                "platypus.Component",
                "platypus.AudioVO",
                "platypus.RenderAnimation",
                "platypus.RenderSprite"
            ]
        },
        "platypus.components.XHR": {
            "name": "platypus.components.XHR",
            "shortname": "platypus.components.XHR",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus.components",
            "file": "src\\components\\XHR.js",
            "line": 1,
            "description": "This component provides component-based XHR communication with a server.",
            "uses": [
                "platypus.Component"
            ]
        },
        "window.Array": {
            "name": "window.Array",
            "shortname": "Array",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "window",
            "file": "src\\mixins\\Array.js",
            "line": 8,
            "description": "Add methods to Array"
        },
        "window.String": {
            "name": "window.String",
            "shortname": "String",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "window",
            "file": "src\\mixins\\String.js",
            "line": 6,
            "description": "Add methods to String"
        },
        "window.Map": {
            "name": "window.Map",
            "shortname": "Map",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "window",
            "file": "src\\polyfills\\Map.js",
            "line": 4,
            "description": "This class defines a limited polyfill for Map. If the browser supports Map, this class is not used.",
            "since": "0.8.0"
        },
        "platypus.AABB": {
            "name": "platypus.AABB",
            "shortname": "platypus.AABB",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\AABB.js",
            "line": 1,
            "description": "This class defines an axis-aligned bounding box (AABB) which is used during the collision process to determine if two objects are colliding. This is used in a few places including [CollisionBasic](platypus.components.CollisionBasic.html) and [[Collision-Shape]].",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x position of the AABB. The x is always located in the center of the object.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position of the AABB. The y is always located in the center of the object.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the AABB.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the AABB.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the new aabb object.",
                "type": "platypus.AABB"
            }
        },
        "platypus.ActionState": {
            "name": "platypus.ActionState",
            "shortname": "platypus.ActionState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\ActionState.js",
            "line": 1,
            "description": "This class defines an action state based on one or more inputs. This is used by [EntityController](platypus.components.EntityController.html) to produce event messages listing whether a particular action is \"triggered\", \"pressed\", and/or \"released\".",
            "is_constructor": 1,
            "params": [
                {
                    "name": "event",
                    "description": "The name of the event to trigger on the Entity.",
                    "type": "String"
                },
                {
                    "name": "states",
                    "description": "A list of key/value pairs describing what states should be `true` or `false` on the Entity for this action to be triggered.",
                    "type": "Object"
                },
                {
                    "name": "trigger",
                    "description": "The function to be called if one or more inputs are active and the current state of the Entity is valid.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new ActionState object.",
                "type": "ActionState"
            },
            "since": "0.6.8"
        },
        "platypus.Async": {
            "name": "platypus.Async",
            "shortname": "platypus.Async",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\Async.js",
            "line": 1,
            "description": "This class defines an asynchronous set up wherein multiple calls can be made and a final function will be run once the calls are completed.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "functions",
                    "description": "An array of functions where each function accepts a `callback` parameter and runs `callback()` on completion to notify the completion of the call.",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "The function to run once the list of functions has finished.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new Async object.",
                "type": "platypus.Async"
            },
            "since": "0.10.0"
        },
        "platypus.CollisionData": {
            "name": "platypus.CollisionData",
            "shortname": "platypus.CollisionData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\CollisionData.js",
            "line": 1,
            "description": "CollisionData holds collision data passed to entities during collisions with other entities. This class is primarily used by the [\"HandlerCollision\"](\"HandlerCollision\"%20Component.html) Component to trigger messages on child entities as collision occur.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "occurredOrData",
                    "description": "Whether this represents an actual collision between two shapes. If a CollisionData instance is provided, the instance's full set of values are copied.",
                    "type": "Boolean|CollisionData"
                },
                {
                    "name": "direction",
                    "description": "1 or -1 to define the direction of the collision.",
                    "type": "Number"
                },
                {
                    "name": "position",
                    "description": "A positive number describing position along the line of collision direction.",
                    "type": "Number"
                },
                {
                    "name": "deltaMovement",
                    "description": "A positive number describing the magnitude of overlap.",
                    "type": "Number"
                },
                {
                    "name": "aABB",
                    "description": "An AABB of the colliding shape.",
                    "type": "platypus.AABB"
                },
                {
                    "name": "thisShape",
                    "description": "The moving shape.",
                    "type": "platypus.Shape"
                },
                {
                    "name": "thatShape",
                    "description": "The stationary shape being collided with.",
                    "type": "platypus.Shape"
                },
                {
                    "name": "vector",
                    "description": "The vector describing the contact point.",
                    "type": "platypus.Vector"
                },
                {
                    "name": "stuck",
                    "description": "The amount of unwarranted overlap if shapes start in a collided position before moving.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the new CollisionData object.",
                "type": "platypus.CollisionData"
            }
        },
        "platypus.CollisionDataContainer": {
            "name": "platypus.CollisionDataContainer",
            "shortname": "platypus.CollisionDataContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\CollisionDataContainer.js",
            "line": 1,
            "description": "CollisionDataContainer holds lists of CollisionData passed to entities during collisions with other entities. This class is primarily used by the [\"HandlerCollision\"](\"HandlerCollision\"%20Component.html) Component to trigger messages on child entities as collisions occur.",
            "is_constructor": 1,
            "return": {
                "description": "Returns the new aabb object.",
                "type": "platypus.CollisionDataContainer"
            }
        },
        "platypus.CollisionShape": {
            "name": "platypus.CollisionShape",
            "shortname": "platypus.CollisionShape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\CollisionShape.js",
            "line": 1,
            "description": "This class defines a collision shape, which defines the 'space' an entity occupies in the collision system. Currently only rectangle and circle shapes can be created. Collision shapes include an axis-aligned bounding box (AABB) that tightly wraps the shape. The AABB is used for initial collision checks.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "owner",
                    "description": "The entity that uses this shape.",
                    "type": "platypus.Entity"
                },
                {
                    "name": "definition",
                    "description": "This is an object of key/value pairs describing the shape.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x position of the shape. The x is always located in the center of the object.",
                            "type": "Number"
                        },
                        {
                            "name": "y",
                            "description": "The y position of the shape. The y is always located in the center of the object.",
                            "type": "Number"
                        },
                        {
                            "name": "type",
                            "description": "The type of shape this is. Currently this can be either \"rectangle\" or \"circle\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"rectangle\""
                        },
                        {
                            "name": "width",
                            "description": "The width of the shape if it's a rectangle.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "height",
                            "description": "The height of the shape if it's a rectangle.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "radius",
                            "description": "The radius of the shape if it's a circle.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "The x offset of the collision shape from the owner entity's location.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetY",
                            "description": "The y offset of the collision shape from the owner entity's location.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "regX",
                            "description": "The registration x of the collision shape with the owner entity's location if offsetX is not provided.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "regY",
                            "description": "The registration y of the collision shape with the owner entity's location if offsetX is not provided.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "collisionType",
                    "description": "A string describing the collision type of this shape.",
                    "type": "String"
                }
            ]
        },
        "platypus.Component": {
            "name": "platypus.Component",
            "shortname": "platypus.Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "platypus.components.AIChaser",
                "platypus.components.AIPacer",
                "platypus.components.AudioSFX",
                "platypus.components.AudioVO",
                "platypus.components.Camera",
                "platypus.components.CameraFollowMe",
                "platypus.components.CollisionBasic",
                "platypus.components.CollisionFilter",
                "platypus.components.CollisionGroup",
                "platypus.components.CollisionTiles",
                "platypus.components.ComponentSwitcher",
                "platypus.components.Counter",
                "platypus.components.EntityContainer",
                "platypus.components.EntityController",
                "platypus.components.EventRender",
                "platypus.components.HandlerCollision",
                "platypus.components.HandlerController",
                "platypus.components.HandlerLogic",
                "platypus.components.HandlerRender",
                "platypus.components.Interactive",
                "platypus.components.LevelBuilder",
                "platypus.components.LogicAngularMovement",
                "platypus.components.LogicAttachment",
                "platypus.components.LogicButton",
                "platypus.components.LogicCarrier",
                "platypus.components.LogicDestroyMe",
                "platypus.components.LogicDirectionalMovement",
                "platypus.components.LogicDragDrop",
                "platypus.components.LogicPortable",
                "platypus.components.LogicRotationalMovement",
                "platypus.components.LogicWindUpRacer",
                "platypus.components.Motion",
                "platypus.components.Mover",
                "platypus.components.NodeMap",
                "platypus.components.NodeResident",
                "platypus.components.Orientation",
                "platypus.components.RandomEvents",
                "platypus.components.RelativePosition",
                "platypus.components.RelayFamily",
                "platypus.components.RelayGame",
                "platypus.components.RelayLinker",
                "platypus.components.RelayParent",
                "platypus.components.RelaySelf",
                "platypus.components.RenderAnimation",
                "platypus.components.RenderContainer",
                "platypus.components.RenderDebug",
                "platypus.components.RenderDestroyMe",
                "platypus.components.RenderProgress",
                "platypus.components.RenderSpine",
                "platypus.components.RenderSprite",
                "platypus.components.RenderText",
                "platypus.components.RenderTiles",
                "platypus.components.StateRender",
                "platypus.components.TiledLoader",
                "platypus.components.Timeline",
                "platypus.components.Tutorial",
                "platypus.components.Tween",
                "platypus.components.VoiceOver",
                "platypus.components.XHR"
            ],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\Component.js",
            "line": 1,
            "description": "This is the extendable Component class. Typically specific component classes should be created using `platypus.createComponentClass()`. This method accepts component definitions and creates component classes that can be used to create components by entities.  It adds properties and methods that are common to all components so that component definitions can focus on unique properties and methods.\n\nTo create an extended component class, use the following syntax:\n\n     platypus.createComponentClass(componentDefinition, prototype);\n\n * `componentDefinition` is list of key/value pairs that describe the component's behavior.\n * `prototype` is an optional prototype that this component extends.\nSee [component-template.js](\"component-template\"%20Component.html) for an example componentDefinition that can be sent into this component class factory.",
            "static": 1
        },
        "platypus.Data": {
            "name": "platypus.Data",
            "shortname": "platypus.Data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\Data.js",
            "line": 1,
            "description": "This class defines a generic data object to use for messaging. It includes recycle methods to encourage reuse.",
            "is_constructor": 1,
            "return": {
                "description": "Returns the new Data object.",
                "type": "Data"
            },
            "since": "0.7.1"
        },
        "platypus.DataMap": {
            "name": "platypus.DataMap",
            "shortname": "platypus.DataMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\DataMap.js",
            "line": 1,
            "description": "This class defines a generic iterable data object. It behaves similarly to Map but maintains a list of keys as an Array. It includes recycle methods to encourage reuse.",
            "is_constructor": 1,
            "return": {
                "description": "dataMap  Returns the new DataMap object.",
                "type": "platypus.DataMap"
            },
            "uses": [
                "Map"
            ],
            "since": "0.8.0"
        },
        "platypus.Entity": {
            "name": "platypus.Entity",
            "shortname": "platypus.Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\Entity.js",
            "line": 1,
            "description": "The Entity object acts as a container for components, facilitates communication between components and other game objects, and includes properties set by components to maintain a current state. The entity object serves as the foundation for most of the game objects in the platypus engine.\n\n## JSON Definition Example\n    {\n        \"id\": \"entity-id\",\n        // \"entity-id\" becomes `entity.type` once the entity is created.\n     \n        \"components\": [\n        // This array lists one or more component definition objects\n     \n            {\"type\": \"example-component\"}\n           // The component objects must include a \"type\" property corresponding to a component to load, but may also include additional properties to customize the component in a particular way for this entity.\n        ],\n     \n        \"properties\": {\n        // This object lists properties that will be attached directly to this entity.\n     \n            \"x\": 240\n            // For example, `x` becomes `entity.x` on the new entity.\n        }\n    }",
            "is_constructor": 1,
            "extends": "Messenger",
            "params": [
                {
                    "name": "definition",
                    "description": "Base definition for the entity.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "This declares the type of entity and will be stored on the Entity as `entity.type` after instantiation.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "components",
                            "description": "This lists the components that should be attached to this entity.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "properties]  [definition.properties",
                            "description": "This is a list of key/value pairs that are added directly to the Entity as `entity.key = value`.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "instanceDefinition",
                    "description": "Specific instance definition including properties that override the base definition properties.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "properties",
                            "description": "This is a list of key/value pairs that are added directly to the Entity as `entity.key = value`.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "A function to run once all of the components on the Entity have been loaded. The first parameter is the entity itself.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "parent",
                    "description": "Presets the parent of the entity so that the parent entity is available during component instantiation. Overrides `parent` in properties definitions.",
                    "type": "Entity",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new entity made up of the provided components.",
                "type": "Entity"
            }
        },
        "platypus.Game": {
            "name": "platypus.Game",
            "shortname": "platypus.Game",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\Game.js",
            "line": 1,
            "description": "This class is used to create the `platypus.game` object and loads the Platypus game as described by the game configuration files.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "definition",
                    "description": "Collection of configuration settings, typically from config.json.",
                    "type": "Object"
                },
                {
                    "name": "applicationInstance",
                    "description": "The Spring Roll application that the Platypus game is in.",
                    "type": "springroll.Application"
                },
                {
                    "name": "onFinishedLoading",
                    "description": "An optional function to run once the game has begun.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the instantiated game.",
                "type": "platypus.Game"
            }
        },
        "platypus.Messenger": {
            "name": "platypus.Messenger",
            "shortname": "platypus.Messenger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\Messenger.js",
            "line": 1,
            "description": "The Messenger object facilitates communication between components and other game objects. Messenger is currently used by [Entity](platypus.Entity.html) and [EntityContainer](platypus.components.EntityContainer).",
            "extends": "springroll.EventDispatcher"
        },
        "platypus.PIXIAnimation": {
            "name": "platypus.PIXIAnimation",
            "shortname": "PIXIAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\PIXIAnimation.js",
            "line": 1,
            "description": "This class plays animation sequences of frames and mimics the syntax required for creating CreateJS Sprites, allowing CreateJS Sprite Sheet definitions to be used with pixiJS.",
            "extends": "PIXI.Sprite"
        },
        "platypus.PlatypusPlugin": {
            "name": "platypus.PlatypusPlugin",
            "shortname": "platypus.PlatypusPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\PlatypusPlugin.js",
            "line": 1,
            "description": "This plugin instantiates a Platypus game using the configuration file. Configurations should be placed within the SpringRoll config with the following structure:\n\n     {\n         \"platypus\": {\n             \"entities\": {},\n             \"levels\": {},\n             \"scenes\": {},\n             \"spriteSheets\": {}\n         },\n         \"sounds\": {} // Platypus uses the SpringRoll audio system and syntax for audio assets.\n     }\n\nThe Platypus game instance is `app.platypusGame` on the SpringRoll Application and `platypus.game` within the platypus namespace."
        },
        "platypus.Scene": {
            "name": "platypus.Scene",
            "shortname": "platypus.Scene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\Scene.js",
            "line": 1,
            "description": "This class is instantiated by [Game](platypus.Game.html) and contains one or more entities as layers. Each layer [Entity](platypus.Entity.html) handles a unique aspect of the scene. For example, one layer might contain the game world, while another layer contains the game interface. Generally there is only a single scene loaded at any given moment.\n## JSON Definition\n    {\n        \"layers\":[\n        // Required array listing the entities that should be loaded as scene layers. These can be actual entity JSON definitions as shown in Entity or references to entities by using the following specification.\n\n            {\n                \"type\": \"entity-id\",\n                // This value maps to an entity definition with a matching \"id\" value as shown in Entity and will load that definition.\n\n                \"properties\": {\"x\": 400}\n                // Optional. If properties are passed in this reference, they override the entity definition's properties of the same name.\n            }\n        ],\n\n        \"assets\": []\n        // Optional list of assets this scene requires.\n    }",
            "is_constructor": 1,
            "extends": "springroll.State",
            "params": [
                {
                    "name": "Stage",
                    "description": "Object where the scene displays layers.",
                    "type": "PIXI.Container"
                },
                {
                    "name": "definition",
                    "description": "Base definition for the scene, including one or more layers with both properties and components as shown above under \"JSON Definition Example\".",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "This declares the id of the scene.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "layers",
                            "description": "This lists the layers that comprise the scene.",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "assets",
                            "description": "This lists the assets that this scene requires.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns the new scene made up of the provided layers.",
                "type": "Scene"
            }
        },
        "platypus.StateMap": {
            "name": "platypus.StateMap",
            "shortname": "platypus.StateMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\StateMap.js",
            "line": 1,
            "description": "This class defines a state object to use for entity states with helper methods. It includes recycle methods to encourage reuse.",
            "is_constructor": 1,
            "return": {
                "description": "stateMap  Returns the new StateMap object.",
                "type": "platypus.StateMap"
            },
            "extends": "platypus.DataMap",
            "since": "0.8.0"
        },
        "platypus.Vector": {
            "name": "platypus.Vector",
            "shortname": "platypus.Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "platypus",
            "namespace": "platypus",
            "file": "src\\Vector.js",
            "line": 1,
            "description": "This class defines a multi-dimensional vector object and a variety of methods for manipulating the vector.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate or an array or Vector describing the whole vector.",
                    "type": "Number|Array|Vector"
                },
                {
                    "name": "y",
                    "description": "The y coordinate.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "z",
                    "description": "The z coordinate.",
                    "type": "Number",
                    "optional": true
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src\\components\\AIChaser.js",
            "line": 19,
            "description": "Sets whether the speed property should enact acceleration upon the entity rather than velocity.",
            "itemtype": "property",
            "name": "accelerate",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIChaser.js",
            "line": 28,
            "description": "Whether the entity is in a chasing state.",
            "itemtype": "property",
            "name": "chasing",
            "type": "boolean",
            "default": "true",
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIChaser.js",
            "line": 39,
            "description": "Sets the velocity of the entity. This property is accessible on the entity as `entity.speed`.",
            "itemtype": "property",
            "name": "speed",
            "type": "number",
            "default": "0.3",
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIChaser.js",
            "line": 57,
            "description": "This component listens for this event to initialize movement.",
            "itemtype": "method",
            "name": "'load'",
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIChaser.js",
            "line": 75,
            "description": "This AI listens for a step message triggered by its entity parent in order to perform its logic on each tick.",
            "itemtype": "method",
            "name": "'handle-ai'",
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIChaser.js",
            "line": 100,
            "description": "This event is triggered whenever the entity begins chasing another entity or stops chasing another entity.",
            "itemtype": "event",
            "name": "'chase'",
            "params": [
                {
                    "name": "chasing",
                    "description": "Whether the entity is chasing another entity.",
                    "type": "Boolean"
                }
            ],
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIChaser.js",
            "line": 110,
            "description": "On receiving this message, the component will change its target and begin chasing the new entity.",
            "itemtype": "method",
            "name": "'set-target'",
            "params": [
                {
                    "name": "entity",
                    "description": "Sets this entity's target to the provided entity.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIChaser.js",
            "line": 122,
            "description": "On receiving this message, the component will change its target offset.",
            "itemtype": "method",
            "name": "'set-target-offset'",
            "params": [
                {
                    "name": "offset",
                    "description": "Sets the chased entity's offset to the provided offset.",
                    "type": "Object|Vector",
                    "props": [
                        {
                            "name": "x",
                            "description": "The offset along the x-axis.",
                            "type": "Number"
                        },
                        {
                            "name": "y",
                            "description": "The offset along the y-axis.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIChaser.js",
            "line": 135,
            "description": "On receiving this message, the component will begin chasing the entity.",
            "itemtype": "method",
            "name": "'start-chasing'",
            "params": [
                {
                    "name": "entity",
                    "description": "Sets the entity if it's provided.",
                    "type": "platypus.Entity",
                    "optional": true
                }
            ],
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIChaser.js",
            "line": 148,
            "description": "On receiving this message, the component will cease chasing the entity.",
            "itemtype": "method",
            "name": "'stop-chasing'",
            "class": "platypus.components.AIChaser",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIPacer.js",
            "line": 16,
            "description": "This determines the direction of movement. Can be \"horizontal\", \"vertical\", or \"both\".",
            "itemtype": "property",
            "name": "movement",
            "type": "String",
            "default": "\"both\"",
            "class": "platypus.components.AIPacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIPacer.js",
            "line": 25,
            "description": "This sets the initial direction of movement. Defaults to \"up\", or \"left\" if movement is horizontal.",
            "itemtype": "property",
            "name": "direction",
            "type": "String",
            "default": "\"up\"",
            "class": "platypus.components.AIPacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIPacer.js",
            "line": 41,
            "description": "This AI listens for a step message triggered by its entity parent in order to perform its logic on each tick.",
            "itemtype": "method",
            "name": "'handle-ai'",
            "class": "platypus.components.AIPacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIPacer.js",
            "line": 50,
            "description": "Triggers this event prior to changing direction.",
            "itemtype": "event",
            "name": "'stop'",
            "class": "platypus.components.AIPacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIPacer.js",
            "line": 57,
            "description": "Triggers this event when the entity is moving right and collides with something.",
            "itemtype": "event",
            "name": "'go-left'",
            "class": "platypus.components.AIPacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIPacer.js",
            "line": 62,
            "description": "Triggers this event when the entity is moving left and collides with something.",
            "itemtype": "event",
            "name": "'go-right'",
            "class": "platypus.components.AIPacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIPacer.js",
            "line": 67,
            "description": "Triggers this event when the entity is moving up and collides with something.",
            "itemtype": "event",
            "name": "'go-down'",
            "class": "platypus.components.AIPacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIPacer.js",
            "line": 72,
            "description": "Triggers this event when the entity is moving down and collides with something.",
            "itemtype": "event",
            "name": "'go-up'",
            "class": "platypus.components.AIPacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AIPacer.js",
            "line": 81,
            "description": "On receiving this message, the component will check the collision side and re-orient itself accordingly.",
            "itemtype": "method",
            "name": "'turn-around'",
            "params": [
                {
                    "name": "collisionInfo",
                    "description": "Uses direction of collision to determine whether to turn around.",
                    "type": "platypus.CollisionData"
                }
            ],
            "class": "platypus.components.AIPacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 33,
            "description": "When a sound effect is finished playing, this event is triggered.",
            "itemtype": "event",
            "name": "clip-complete",
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 103,
            "description": "Use the audioMap property object to map messages triggered with audio clips to play. At least one audio mapping should be included for audio to play. Here is an example audioMap object:\n\n      {\n          \"message-triggered\": \"audio-id\",\n          // This simple form is useful to listen for \"message-triggered\" and play \"audio-id\" using default audio properties.\n\n          \"another-message\": {\n          // To specify audio properties, instead of mapping the message to an audio id string, map it to an object with one or more of the properties shown below. Many of these properties directly correspond to SoundJS play parameters.\n\n              \"sound\": \"another-audio-id\",\n              // Required. This is the audio clip to play when \"another-message\" is triggered.\n\n              \"interrupt\": \"none\",\n              // Optional. Can be \"any\", \"early\", \"late\", or \"none\". Determines how to handle the audio when it's already playing but a new play request is received. Default is \"any\".\n\n              \"delay\": 500,\n              // Optional. Time in milliseconds to wait before playing audio once the message is received. Default is 0.\n\n              \"offset\": 1500,\n              // Optional. Time in milliseconds determining where in the audio clip to begin playback. Default is 0.\n\n              \"length\": 2500,\n              // Optional. Time in milliseconds to play audio before stopping it. If 0 or not specified, play continues to the end of the audio clip.\n\n              \"loop\": 4,\n              // Optional. Determines how many more times to play the audio clip once it finishes. Set to -1 for an infinite loop. Default is 0.\n\n              \"volume\": 0.75,\n              // Optional. Used to specify how loud to play audio on a range from 0 (mute) to 1 (full volume). Default is 1.\n\n              \"pan\": -0.25\n              // Optional. Used to specify the pan of audio on a range of -1 (left) to 1 (right). Default is 0.\n          }\n      }",
            "itemtype": "property",
            "name": "audioMap",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 145,
            "description": "Determines whether a sound that's started should play through completely regardless of entity state changes.",
            "itemtype": "property",
            "name": "forcePlayThrough",
            "type": "boolean",
            "default": "true",
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 154,
            "description": "Optional. Specifies whether this component should listen to events matching the animationMap to animate. Set this to true if the component should animate for on events.",
            "itemtype": "property",
            "name": "eventBased",
            "type": "Boolean",
            "default": "true",
            "since": "0.7.5",
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 164,
            "description": "Optional. Specifies whether this component should listen to changes in the entity's state that match the animationMap to animate. Set this to true if the component should animate based on this.owner.state.",
            "itemtype": "property",
            "name": "stateBased",
            "type": "Boolean",
            "default": "false",
            "since": "0.7.5 - Defaults to `true` prior to version 0.9.0",
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 199,
            "description": "Listens for messages specified by the `audioMap` and on receiving them, begins playing corresponding audio clips. Audio play message can optionally include several parameters, many of which correspond with SoundJS play parameters.",
            "itemtype": "method",
            "name": "'*'",
            "params": [
                {
                    "name": "message.interrupt",
                    "description": "(string) - Optional. Can be \"any\", \"early\", \"late\", or \"none\". Determines how to handle the audio when it's already playing but a new play request is received. Default is \"any\"."
                },
                {
                    "name": "message.delay",
                    "description": "(integer) - Optional. Time in milliseconds to wait before playing audio once the message is received. Default is 0."
                },
                {
                    "name": "message.offset",
                    "description": "(integer) - Optional. Time in milliseconds determining where in the audio clip to begin playback. Default is 0."
                },
                {
                    "name": "message.length",
                    "description": "(integer) - Optional. Time in milliseconds to play audio before stopping it. If 0 or not specified, play continues to the end of the audio clip."
                },
                {
                    "name": "message.loop",
                    "description": "(integer) - Optional. Determines how many more times to play the audio clip once it finishes. Set to -1 for an infinite loop. Default is 0."
                },
                {
                    "name": "message.volume",
                    "description": "(float) - Optional. Used to specify how loud to play audio on a range from 0 (mute) to 1 (full volume). Default is 1."
                },
                {
                    "name": "message.pan",
                    "description": "(float) - Optional. Used to specify the pan of audio on a range of -1 (left) to 1 (right). Default is 0."
                },
                {
                    "name": "message.next",
                    "description": "(string) - Optional. Used to specify the next audio clip to play once this one is complete."
                }
            ],
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 226,
            "description": "On each `handle-render` message, this component checks its list of playing audio clips and stops any clips whose play length has been reached.",
            "itemtype": "method",
            "name": "'handle-render'",
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 250,
            "description": "This component listens for changes to the entity state and tests the current state of the entity against the audio map. If a match is found, the matching audio clip is played.",
            "itemtype": "method",
            "name": "'state-changed'",
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 259,
            "description": "On receiving this message, the audio will mute if unmuted, and unmute if muted.",
            "itemtype": "method",
            "name": "'toggle-mute'",
            "params": [
                {
                    "name": "audioId",
                    "description": "If an audioId is provided, that particular sound instance is toggled. Otherwise all audio is toggled from mute to unmute or vice versa.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 279,
            "description": "On receiving this message, audio will stop playing.",
            "itemtype": "method",
            "name": "'stop-audio'",
            "params": [
                {
                    "name": "audioId",
                    "description": "If an audioId is provided, that particular sound instance is stopped. Otherwise all audio is stopped.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 295,
            "description": "On receiving this message all audio will mute, or a particular sound instance will mute if an id is specified.",
            "itemtype": "method",
            "name": "'mute-audio'",
            "params": [
                {
                    "name": "audioId",
                    "description": "If an audioId is provided, that particular sound instance will mute. Otherwise all audio is muted.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 310,
            "description": "On receiving this message all audio will unmute, or a particular sound instance will unmute if an id is specified.",
            "itemtype": "method",
            "name": "'unmute-audio'",
            "params": [
                {
                    "name": "audioId",
                    "description": "If an audioId is provided, that particular sound instance will unmute. Otherwise all audio is unmuted.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 325,
            "description": "On receiving this message all audio will pause, or a particular sound instance will pause if an id is specified.",
            "itemtype": "method",
            "name": "'pause-audio'",
            "params": [
                {
                    "name": "audioId",
                    "description": "If an audioId is provided, that particular sound instance will pause. Otherwise all audio is paused.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 339,
            "description": "On receiving this message all audio will unpause, or a particular sound instance will unpause if an id is specified.",
            "itemtype": "method",
            "name": "'unpause-audio'",
            "params": [
                {
                    "name": "audioId",
                    "description": "If an audioId is provided, that particular sound instance will unpause. Otherwise all audio is unpaused.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 353,
            "description": "This message sets the volume of playing audio.",
            "itemtype": "method",
            "name": "'set-pan'",
            "params": [
                {
                    "name": "pan",
                    "description": "A number from -1 to 1 that sets the pan.",
                    "type": "Number"
                },
                {
                    "name": "soundId",
                    "description": "If an soundId is provided, that particular sound instance's pan is set.",
                    "type": "String",
                    "optional": true
                }
            ],
            "since": "0.11.3",
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioSFX.js",
            "line": 376,
            "description": "This message sets the volume of playing audio.",
            "itemtype": "method",
            "name": "'set-volume'",
            "params": [
                {
                    "name": "volume",
                    "description": "A number from 0 to 1 that sets the volume.",
                    "type": "Number"
                },
                {
                    "name": "soundId",
                    "description": "If an soundId is provided, that particular sound instance's volume is set. Otherwise all audio volume is changed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "platypus.components.AudioSFX",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioVO.js",
            "line": 73,
            "description": "When an audio sequence is finished playing, this event is triggered.",
            "itemtype": "event",
            "name": "sequence-complete",
            "class": "platypus.components.AudioVO",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioVO.js",
            "line": 118,
            "description": "Use the audioMap property object to map messages triggered with audio clips to play. At least one audio mapping should be included for audio to play. Here is an example audioMap object:\n\n      {\n          \"message-triggered\": \"audio-id\",\n          // This simple form is useful to listen for \"message-triggered\" and play \"audio-id\" using default audio properties.\n\n          \"another-message\": {\n          // To specify audio properties, instead of mapping the message to an audio id string, map it to an object with one or more of the properties shown below. Many of these properties directly correspond to SoundJS play parameters.\n\n              \"sound\": \"another-audio-id\",\n              // Required. This is the audio clip to play when \"another-message\" is triggered.\n\n              \"events\": [{\n                  \"event\": \"walk-to-the-left\",\n                  \"time\": 1500\n              }]\n              // Optional. Used to specify a list of events to play once the VO begins.\n          }\n      }",
            "itemtype": "property",
            "name": "audioMap",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.AudioVO",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioVO.js",
            "line": 159,
            "description": "Listens for messages specified by the `audioMap` and on receiving them, begins playing corresponding audio clips.",
            "itemtype": "method",
            "name": "'*'",
            "params": [
                {
                    "name": "message.events",
                    "description": "Used to specify the list of events to trigger while playing this audio sequence.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "platypus.components.AudioVO",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioVO.js",
            "line": 174,
            "description": "On each `handle-render` message, this component checks its list of playing audio clips and stops any clips whose play length has been reached.",
            "itemtype": "method",
            "name": "'handle-render'",
            "class": "platypus.components.AudioVO",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\AudioVO.js",
            "line": 185,
            "description": "On receiving this message, audio will stop playing.",
            "itemtype": "method",
            "name": "'stop-audio'",
            "class": "platypus.components.AudioVO",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 64,
            "description": "Number specifying width of viewport in world coordinates.",
            "itemtype": "property",
            "name": "width",
            "type": "number",
            "default": "0",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 73,
            "description": "Number specifying height of viewport in world coordinates.",
            "itemtype": "property",
            "name": "height",
            "type": "number",
            "default": "0",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 82,
            "description": "Specifies whether the camera should be draggable via the mouse by setting to 'pan'.",
            "itemtype": "property",
            "name": "mode",
            "type": "String",
            "default": "'static'",
            "since": "0.9.0",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 92,
            "description": "Whether camera overflows to cover the whole canvas or remains contained within its aspect ratio's boundary.",
            "itemtype": "property",
            "name": "overflow",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 101,
            "description": "Boolean value that determines whether the camera should stretch the world viewport when window is resized. Defaults to false which maintains the proper aspect ratio.",
            "itemtype": "property",
            "name": "stretch",
            "type": "boolean",
            "default": ": false",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 110,
            "description": "Sets how many units the followed entity can move before the camera will re-center. This should be lowered for small-value coordinate systems such as Box2D.",
            "itemtype": "property",
            "name": "threshold",
            "type": "number",
            "default": "1",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 119,
            "description": "Whether, when following an entity, the camera should rotate to match the entity's orientation.",
            "itemtype": "property",
            "name": "rotate",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 128,
            "description": "Number specifying the horizontal center of viewport in world coordinates.",
            "itemtype": "property",
            "name": "x",
            "type": "number",
            "default": "0",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 137,
            "description": "Number specifying the vertical center of viewport in world coordinates.",
            "itemtype": "property",
            "name": "y",
            "type": "number",
            "default": "0",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 147,
            "description": "The entity's canvas element is used to determine the window size of the camera.",
            "itemtype": "property",
            "name": "canvas",
            "type": "DOMElement Canvas",
            "default": "null",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 156,
            "description": "Sets how quickly the camera should pan to a new position in the horizontal direction.",
            "itemtype": "property",
            "name": "transitionX",
            "type": "number",
            "default": "400",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 165,
            "description": "Sets how quickly the camera should pan to a new position in the vertical direction.",
            "itemtype": "property",
            "name": "transitionY",
            "type": "number",
            "default": "600",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 174,
            "description": "Sets how quickly the camera should rotate to a new orientation.",
            "itemtype": "property",
            "name": "transitionAngle",
            "type": "number",
            "default": ": 600",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 282,
            "description": "Sets up the camera window size on load.",
            "itemtype": "method",
            "name": "'load'",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 291,
            "description": "On receiving this message, the camera begins viewing the world.",
            "itemtype": "method",
            "name": "'render-world'",
            "params": [
                {
                    "name": "data",
                    "description": "Information about the world.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "world",
                            "description": "The container containing world entities.",
                            "type": "PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 303,
            "description": "The viewport is flagged to update when children are added.",
            "itemtype": "method",
            "name": "'child-entity-added'",
            "params": [
                {
                    "name": "entity",
                    "description": "Expects an entity as the message object.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 313,
            "description": "On receiving a \"world-loaded\" message, the camera broadcasts the world size to all children in the world.",
            "itemtype": "event",
            "name": "'camera-loaded'",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "props": [
                        {
                            "name": "world",
                            "description": "The dimensions of the world map.",
                            "type": "platypus.AABB"
                        }
                    ]
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 324,
            "description": "Triggers \"camera-update\" on newly changed entities.",
            "itemtype": "method",
            "name": "'child-entity-updated'",
            "params": [
                {
                    "name": "entity",
                    "description": "Expects an entity as the message object to determine whether to trigger `camera-update` on it.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "0.6.8",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 339,
            "description": "On receiving this message, the camera updates its world location and size as necessary. An example of this message is triggered by the [TiledLoader](platypus.components.TiledLoader.html) component.",
            "itemtype": "method",
            "name": "'world-loaded'",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "width",
                            "description": "The width of the loaded world.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "height",
                            "description": "The height of the loaded world.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "An entity that the camera should follow in the loaded world.",
                            "type": "platypus.Entity",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 364,
            "description": "If mouse dragging should cause the camera to move, this listens for the beginning of the drag motion.",
            "itemtype": "method",
            "name": "'pointerdown'",
            "params": [
                {
                    "name": "event",
                    "description": "The pointer event.",
                    "type": "Object"
                }
            ],
            "since": "0.9.0",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 388,
            "description": "If mouse dragging should cause the camera to move, this listens the drag motion.",
            "itemtype": "method",
            "name": "'pressmove'",
            "params": [
                {
                    "name": "event",
                    "description": "The pointer event.",
                    "type": "Object"
                }
            ],
            "since": "0.9.0",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 405,
            "description": "If mouse dragging should cause the camera to move, this listens for the end of the drag motion.",
            "itemtype": "method",
            "name": "'pressup'",
            "params": [
                {
                    "name": "event",
                    "description": "The pointer event.",
                    "type": "Object"
                }
            ],
            "since": "0.9.0",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 422,
            "description": "On a \"tick\" step event, the camera updates its location according to its current state.",
            "itemtype": "method",
            "name": "'tick'",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "If necessary, the current camera update function may require the length of the tick to adjust movement rate.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 482,
            "description": "This component fires \"camera-update\" when the position of the camera in the world has changed. This event is triggered on both the entity (typically a layer) as well as children of the entity.",
            "itemtype": "event",
            "name": "'camera-update'",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "world",
                            "description": "The dimensions of the world map.",
                            "type": "platypus.AABB"
                        },
                        {
                            "name": "orientation",
                            "description": "Number describing the orientation of the camera.",
                            "type": "Number"
                        },
                        {
                            "name": "scaleX",
                            "description": "Number of window pixels that comprise a single world coordinate on the x-axis.",
                            "type": "Number"
                        },
                        {
                            "name": "scaleY",
                            "description": "Number of window pixels that comprise a single world coordinate on the y-axis.",
                            "type": "Number"
                        },
                        {
                            "name": "viewport",
                            "description": "An AABB describing the world viewport area.",
                            "type": "platypus.AABB"
                        },
                        {
                            "name": "stationary",
                            "description": "Whether the camera is moving.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 515,
            "description": "The camera listens for this event to change its world viewport size.",
            "itemtype": "method",
            "name": "'resize-camera'",
            "params": [
                {
                    "name": "dimensions",
                    "description": "List of key/value pairs describing new viewport size",
                    "type": "Object",
                    "props": [
                        {
                            "name": "width",
                            "description": "Width of the camera viewport",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "Height of the camera viewport",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 529,
            "description": "The camera listens for this event to change its position in the world.",
            "itemtype": "method",
            "name": "'relocate'",
            "params": [
                {
                    "name": "location",
                    "description": "List of key/value pairs describing new location",
                    "type": "Vector|Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "New position along the x-axis.",
                            "type": "Number"
                        },
                        {
                            "name": "y",
                            "description": "New position along the y-axis.",
                            "type": "Number"
                        },
                        {
                            "name": "time",
                            "description": "The time to transition to the new location.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "ease",
                            "description": "The ease function to use. Defaults to a linear transition.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 562,
            "description": "On receiving this message, the camera begins following the requested object.",
            "itemtype": "method",
            "name": "'follow'",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "mode",
                            "description": "Can be \"locked\", \"forward\", \"bounding\", \"anchor-bound\", or \"static\". \"static\" suspends following, but the other three settings require that the entity parameter be defined. Also set the bounding area parameters if sending \"bounding\" as the following method and the movement parameters if sending \"forward\" as the following method.",
                            "type": "String"
                        },
                        {
                            "name": "entity",
                            "description": "The entity that the camera should commence following.",
                            "type": "platypus.Entity",
                            "optional": true
                        },
                        {
                            "name": "top",
                            "description": "The top of a bounding box following an entity.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "left",
                            "description": "The left of a bounding box following an entity.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "width",
                            "description": "The width of a bounding box following an entity.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "height",
                            "description": "The height of a bounding box following an entity.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "movementX",
                            "description": "Movement multiplier for focusing the camera ahead of a moving entity in the horizontal direction.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "movementY",
                            "description": "Movement multiplier for focusing the camera ahead of a moving entity in the vertical direction.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "How far to offset the camera from the entity horizontally.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetY",
                            "description": "How far to offset the camera from the entity vertically.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "time",
                            "description": "How many milliseconds to follow the entity.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 583,
            "description": "On receiving this message, the camera will shake around its target location.",
            "itemtype": "method",
            "name": "'shake'",
            "params": [
                {
                    "name": "shake",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "xMagnitude",
                            "description": "How much to move along the x axis.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "yMagnitude",
                            "description": "How much to move along the y axis.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "xFrequency",
                            "description": "How quickly to shake along the x axis.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "yFrequency",
                            "description": "How quickly to shake along the y axis.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "time",
                            "description": "How long the camera should shake.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 1019,
            "description": "Returns whether a particular display object intersects the camera's viewport on the canvas.",
            "itemtype": "method",
            "name": "isOnCanvas",
            "params": [
                {
                    "name": "bounds",
                    "description": "The bounds of the display object.",
                    "type": "PIXI.Rectangle|Object",
                    "props": [
                        {
                            "name": "height",
                            "description": "The height of the display object.",
                            "type": "Number"
                        },
                        {
                            "name": "width",
                            "description": "The width of the display object.",
                            "type": "Number"
                        },
                        {
                            "name": "x",
                            "description": "The left edge of the display object.",
                            "type": "Number"
                        },
                        {
                            "name": "y",
                            "description": "The top edge of the display object.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Whether the display object intersects the camera's bounds.",
                "type": "Boolean"
            },
            "since": "0.10.0",
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 1037,
            "description": "Returns a world coordinate corresponding to a provided window coordinate.",
            "itemtype": "method",
            "name": "windowToWorld",
            "params": [
                {
                    "name": "windowVector",
                    "description": "A vector describing a window position.",
                    "type": "platypus.Vector"
                },
                {
                    "name": "withOffset",
                    "description": "Whether to provide a world position relative to the camera's location.",
                    "type": "Boolean"
                },
                {
                    "name": "vector",
                    "description": "If provided, this is used as the return vector.",
                    "type": "platypus.Vector"
                }
            ],
            "return": {
                "description": "A vector describing a world position.",
                "type": "platypus.Vector"
            },
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Camera.js",
            "line": 1060,
            "description": "Returns a window coordinate corresponding to a provided world coordinate.",
            "itemtype": "method",
            "name": "worldToWindow",
            "params": [
                {
                    "name": "worldVector",
                    "description": "A vector describing a world position.",
                    "type": "platypus.Vector"
                },
                {
                    "name": "withOffset",
                    "description": "Whether to provide a window position relative to the camera's location.",
                    "type": "Boolean"
                },
                {
                    "name": "vector",
                    "description": "If provided, this is used as the return vector.",
                    "type": "platypus.Vector"
                }
            ],
            "return": {
                "description": "A vector describing a window position.",
                "type": "platypus.Vector"
            },
            "class": "platypus.components.Camera",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CameraFollowMe.js",
            "line": 18,
            "description": "Sets initial camera settings when the entity is being followed. This can be over-written by the \"follow-me\" call itself. If any of these attributes are not provided, the following are used by default:\n\n                 {\n                     \"time\": 500,\n                     // Optional. Time in milliseconds that the camera should focus before returning to the original focus.\n                     \n                     \"mode\": \"forward\",\n                     // Optional. Camera mode that the camera should use.\n                     \n                     \"top\": 100,\n                     // Optional number specifying top of viewport in world coordinates\n                     \n                     \"left\": 100,\n                     // Optional number specifying left of viewport in world coordinates\n                     \n                     \"width\": 100,\n                     // Optional number specifying width of viewport in world coordinates\n                     \n                     \"height\": 100,\n                     // Optional number specifying height of viewport in world coordinates\n                     \n                     \"offsetX\": 20,\n                     // Optional number setting how far to offset the camera from the entity horizontally.\n                     \n                     \"offsetY\": 40\n                     // Optional number setting how far to offset the camera from the entity vertically.\n                 }",
            "itemtype": "property",
            "name": "camera",
            "type": "Object",
            "default": "{}",
            "class": "platypus.components.CameraFollowMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CameraFollowMe.js",
            "line": 53,
            "description": "Camera mode that the camera should use.",
            "itemtype": "property",
            "name": "mode",
            "type": "String",
            "default": "\"forward\"",
            "class": "platypus.components.CameraFollowMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CameraFollowMe.js",
            "line": 62,
            "description": "Whether to pause the game while the camera is focused.",
            "itemtype": "property",
            "name": "pause",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.CameraFollowMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CameraFollowMe.js",
            "line": 91,
            "description": "On receiving this message, the component will trigger a message requesting that the parent camera begin following this entity.",
            "itemtype": "method",
            "name": "'follow-me'",
            "params": [
                {
                    "name": "options",
                    "description": "A list of key/value paris describing camera options to set.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "mode",
                            "description": "Camera following mode.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "top",
                            "description": "The top of a bounding box.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "left",
                            "description": "The left of a bounding box.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "width",
                            "description": "The width of a bounding box.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "height",
                            "description": "The height of a bounding box.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "How far to offset the camera from the entity horizontally.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetY",
                            "description": "How far to offset the camera from the entity vertically.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "time",
                            "description": "How many milliseconds to follow the entity.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "platypus.components.CameraFollowMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CameraFollowMe.js",
            "line": 126,
            "description": "This component fires this message on the parent entity to pause logic if required.",
            "itemtype": "event",
            "name": "'pause-logic'",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "time",
                            "description": "The amount of time to pause before re-enabling logic.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.components.CameraFollowMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CameraFollowMe.js",
            "line": 135,
            "description": "This component fires this message on the parent entity to pause rendering if required.",
            "itemtype": "event",
            "name": "'pause-render'",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "time",
                            "description": "The amount of time to pause before re-enabling render updates.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.components.CameraFollowMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CameraFollowMe.js",
            "line": 145,
            "description": "This component fires this message on this entity's parent so the camera will begin following this entity.",
            "itemtype": "event",
            "name": "'follow'",
            "params": [
                {
                    "name": "options",
                    "description": "A list of key/value pairs describing camera options to set.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "entity",
                            "description": "Sends this entity for the camera to follow.",
                            "type": "platypus.Entity"
                        },
                        {
                            "name": "mode",
                            "description": "Camera following mode.",
                            "type": "String"
                        },
                        {
                            "name": "top",
                            "description": "The top of a bounding box.",
                            "type": "Number"
                        },
                        {
                            "name": "left",
                            "description": "The left of a bounding box.",
                            "type": "Number"
                        },
                        {
                            "name": "width",
                            "description": "The width of a bounding box.",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "The height of a bounding box.",
                            "type": "Number"
                        },
                        {
                            "name": "offsetX",
                            "description": "How far to offset the camera from the entity horizontally.",
                            "type": "Number"
                        },
                        {
                            "name": "offsetY",
                            "description": "How far to offset the camera from the entity vertically.",
                            "type": "Number"
                        },
                        {
                            "name": "time",
                            "description": "How many milliseconds to follow the entity.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.components.CameraFollowMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 20,
            "description": "On receiving a 'hit-by' message, custom messages are triggered on the entity corresponding with the component's `solidCollisions` and `softCollisions` key/value mappings.",
            "itemtype": "event",
            "name": "*",
            "params": [
                {
                    "name": "collision",
                    "description": "A list of key/value pairs describing the collision.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 262,
            "description": "Defines how this entity should be recognized by other colliding entities.",
            "itemtype": "property",
            "name": "collisionType",
            "type": "String",
            "default": "\"none\"",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 271,
            "description": "Defines the type of colliding shape.",
            "itemtype": "property",
            "name": "shapeType",
            "type": "String",
            "default": "\"rectangle\"",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 280,
            "description": "Determines whether the collision area should transform on orientation changes.",
            "itemtype": "property",
            "name": "ignoreOrientation",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 289,
            "description": "Determines the x-axis center of the collision shape.",
            "itemtype": "property",
            "name": "regX",
            "type": "number",
            "default": "width / 2",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 298,
            "description": "Determines the y-axis center of the collision shape.",
            "itemtype": "property",
            "name": "regY",
            "type": "number",
            "default": "height / 2",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 307,
            "description": "Sets the width of the collision area in world coordinates.",
            "itemtype": "property",
            "name": "width",
            "type": "number",
            "default": "0",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 316,
            "description": "Sets the height of the collision area in world coordinates.",
            "itemtype": "property",
            "name": "height",
            "type": "number",
            "default": "0",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 325,
            "description": "Sets the radius of a circle collision area in world coordinates.",
            "itemtype": "property",
            "name": "radius",
            "type": "number",
            "default": "0",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 334,
            "description": "Determines which collision types this entity should consider soft, meaning this entity may pass through them, but triggers collision messages on doing so. Example:\n\n    {\n        \"water\": \"soaked\",       // This triggers a \"soaked\" message on the entity when it passes over a \"water\" collision-type entity.\n        \"lava\": [\"burn\", \"ouch\"] // This triggers both messages on the entity when it passes over a \"lava\" collision-type entity.\n    }",
            "itemtype": "property",
            "name": "softCollisions",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 348,
            "description": "Determines which collision types this entity should consider solid, meaning this entity should not pass through them. Example:\n\n    {\n        \"boulder\": \"\",                       // This specifies that this entity should not pass through other \"boulder\" collision-type entities.\n        \"diamond\": \"crack-up\",               // This specifies that this entity should not pass through \"diamond\" collision-type entities, but if it touches one, it triggers a \"crack-up\" message on the entity.\n        \"marble\": [\"flip\", \"dance\", \"crawl\"] // This specifies that this entity should not pass through \"marble\" collision-type entities, but if it touches one, it triggers all three specified messages on the entity.\n    }",
            "itemtype": "property",
            "name": "solidCollisions",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 363,
            "description": "This is the margin around the entity's width and height. This is an alternative method for specifying the collision shape in terms of the size of the entity. Can also pass in an object specifying the following parameters if the margins vary per side: top, bottom, left, and right.",
            "itemtype": "property",
            "name": "margin",
            "type": "number|Object",
            "default": "0",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 372,
            "description": "Defines one or more shapes to create the collision area. Defaults to a single shape with the width, height, regX, and regY properties of the entity if not specified. See [CollisionShape](CollisionShape.html) for the full list of properties.",
            "itemtype": "property",
            "name": "shapes",
            "type": "Array",
            "default": "null",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 383,
            "description": "This property should be set to true if entity doesn't move for better optimization. This causes other entities to check against this entity, but this entity performs no checks of its own. Available on the entity as `entity.immobile`.",
            "itemtype": "property",
            "name": "immobile",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 392,
            "description": "Whether this entity should be tested across its entire movement path. This is necessary for fast-moving entities, but shouldn't be used for others due to the processing overhead. Available on the entity as `entity.bullet`.",
            "itemtype": "property",
            "name": "bullet",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 401,
            "description": "Whether the entity is only solid when being collided with from the top.",
            "itemtype": "property",
            "name": "jumpThrough",
            "type": "boolean",
            "default": ": false",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 523,
            "description": "On receiving this message, the component triggers `add-collision-entity` on the parent.",
            "itemtype": "method",
            "name": "'collide-on'",
            "params": [
                {
                    "name": "type",
                    "description": "If specified, only collision components of this type are added to the collision list.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 534,
            "description": "On receiving 'collide-on', this message is triggered on the parent to turn on collision.",
            "itemtype": "event",
            "name": "'add-collision-entity'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity this component is attached to.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 549,
            "description": "On receiving this message, the component triggers `remove-collision-entity` on the parent.",
            "itemtype": "method",
            "name": "'collide-off'",
            "params": [
                {
                    "name": "type",
                    "description": "If specified, only collision components of this type are removed from the collision list.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 562,
            "description": "On receiving 'collide-off', this message is triggered on the parent to turn off collision.",
            "itemtype": "event",
            "name": "'remove-collision-entity'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity this component is attached to.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 582,
            "description": "This message causes the entity's x,y coordinates to update.",
            "itemtype": "method",
            "name": "'relocate-entity'",
            "params": [
                {
                    "name": "position",
                    "description": "The new coordinates.",
                    "type": "platypus.Vector",
                    "props": [
                        {
                            "name": "relative",
                            "description": "Determines whether the provided x,y coordinates are relative to the entity's current position.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 644,
            "description": "If the entity is stuck to another entity, this component tries to unstick the entity on each logic step.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionBasic.js",
            "line": 655,
            "description": "Collision shapes are updated to reflect the new orientation when this message occurs.",
            "itemtype": "method",
            "name": "'orientation-updated'",
            "params": [
                {
                    "name": "matrix",
                    "description": "A 2D matrix describing the new orientation.",
                    "type": "Array"
                }
            ],
            "class": "platypus.components.CollisionBasic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionFilter.js",
            "line": 27,
            "description": "One or more collision events for which to listen. For example, if the state property is set to \"allergic\":\n\n                  {\n                      \"hitting-flowers\": \"sneeze\",\n                      // Listen for \"hitting-flowers\", and if the entity is \"allergic\", trigger a \"sneeze\" event.\n                   \n                      \"in-the-weeds\": \"cough\"\n                      // Another collision event that triggers \"cough\" if the entity is \"allergic\".\n                  }",
            "itemtype": "property",
            "name": "collisions",
            "type": "Object",
            "default": "{}",
            "class": "platypus.components.CollisionFilter",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionFilter.js",
            "line": 44,
            "description": "The entity state that should cause the following list of collisions to trigger events. If this state is not true, no events are triggered. To trigger events on the inverse of a state, place \"!\" before the state such as \"!allergic\".",
            "itemtype": "property",
            "name": "state",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.CollisionFilter",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionFilter.js",
            "line": 60,
            "description": "Events defined by the `collisions` property trigger whenever collisions happen while in the defined state.",
            "itemtype": "event",
            "name": "*",
            "params": [
                {
                    "name": "collisionData",
                    "description": "Information regarding the collision that occurred.",
                    "type": "CollisionData"
                }
            ],
            "class": "platypus.components.CollisionFilter",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionGroup.js",
            "line": 92,
            "description": "On receiving this message, the component checks the entity to determine whether it listens for collision messages. If so, the entity is added to the collision group.",
            "itemtype": "method",
            "name": "'child-entity-added'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to be added.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.CollisionGroup",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionGroup.js",
            "line": 102,
            "description": "On receiving this message, the component checks the entity to determine whether it listens for collision messages. If so, the entity is added to the collision group.",
            "itemtype": "method",
            "name": "'add-collision-entity'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to be added.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.CollisionGroup",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionGroup.js",
            "line": 112,
            "description": "On receiving this message, the component looks for the entity in its collision group and removes it.",
            "itemtype": "method",
            "name": "'child-entity-removed'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to be removed.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.CollisionGroup",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionGroup.js",
            "line": 122,
            "description": "On receiving this message, the component looks for the entity in its collision group and removes it.",
            "itemtype": "method",
            "name": "'remove-collision-entity'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to be removed.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.CollisionGroup",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionGroup.js",
            "line": 132,
            "description": "When this message is triggered, the collision group updates its record of the owner's last (x, y) coordinate.",
            "itemtype": "method",
            "name": "'relocate-entity'",
            "class": "platypus.components.CollisionGroup",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionGroup.js",
            "line": 441,
            "description": "Gets the bounding box of the group of entities.",
            "itemtype": "method",
            "name": "getCollisionGroupAABB",
            "return": {
                "description": "platypus.AABB"
            },
            "class": "platypus.components.CollisionGroup",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionGroup.js",
            "line": 451,
            "description": "Gets a list of all the entities in the world.",
            "itemtype": "method",
            "name": "getWorldEntities",
            "return": {
                "description": "Array"
            },
            "class": "platypus.components.CollisionGroup",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionGroup.js",
            "line": 461,
            "description": "Gets the collision entity representing the world's terrain.",
            "itemtype": "method",
            "name": "getWorldTerrain",
            "return": {
                "description": "platypus.Entity"
            },
            "class": "platypus.components.CollisionGroup",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 235,
            "description": "Maps tile indexes to particular collision types. This defaults to a \"tiles\" collision type for all non-zero values if a particular collision map is not provided.",
            "itemtype": "property",
            "name": "collisionTypeMap",
            "type": "Object",
            "default": "null",
            "since": "0.8.3",
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 245,
            "description": "Sets the default collision type for non-zero map tiles.",
            "itemtype": "property",
            "name": "collisionType",
            "type": "String",
            "default": "\"tiles\"",
            "since": "0.8.3",
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 255,
            "description": "The map's top offset.",
            "itemtype": "property",
            "name": "top",
            "type": "Number",
            "default": "0",
            "since": "0.7.5",
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 265,
            "description": "The map's left offset.",
            "itemtype": "property",
            "name": "left",
            "type": "Number",
            "default": "0",
            "since": "0.7.5",
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 277,
            "description": "A 2D array describing the tile-map with off (0) and on (!0) states. The indexes match Tiled map data indexes with an additional bit setting (0x2000000) for jumpthrough tiles. Example: `[[0, 0, 0], [1, 0, 0], [1, 1, 1]]`. Available on the entity as `entity.collisionMap`.",
            "itemtype": "property",
            "name": "collisionMap",
            "type": "Array",
            "default": "[]",
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 286,
            "description": "The width of tiles in world coordinates. Available on the entity as `entity.tileWidth`.",
            "itemtype": "property",
            "name": "tileWidth",
            "type": "number",
            "default": "10",
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 295,
            "description": "The height of tiles in world coordinates. Available on the entity as `entity.tileHeight`.",
            "itemtype": "property",
            "name": "tileWidth",
            "type": "number",
            "default": "10",
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 334,
            "description": "Performs a transform of a subset of the collision tile grid.",
            "itemtype": "method",
            "name": "'transform'",
            "params": [
                {
                    "name": "transform",
                    "description": "A list of key/value pairs describing the transform.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of transform; one of the following: \"horizontal\", \"vertical\", \"diagonal\", \"diagonal-inverse\", \"rotate-90\", \"rotate-180\", \"rotate-270\". Height and width should match for diagonal flips and 90 degree rotations.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"horizontal\""
                        },
                        {
                            "name": "left",
                            "description": "Grid coordinate for the left side of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "top",
                            "description": "Grid coordinate for the top of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "width",
                            "description": "Cell width of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "grid.width"
                        },
                        {
                            "name": "height",
                            "description": "Cell height of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "grid.height"
                        }
                    ]
                }
            ],
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 349,
            "description": "Performs a translation of a subset of the collision tile grid.",
            "itemtype": "method",
            "name": "'translate'",
            "params": [
                {
                    "name": "translate",
                    "description": "A list of key/value pairs describing the translation.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "dx",
                            "description": "Movement in columns.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "dy",
                            "description": "Movement in rows.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "left",
                            "description": "Grid coordinate for the left side of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "top",
                            "description": "Grid coordinate for the top of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "width",
                            "description": "Cell width of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "grid.width"
                        },
                        {
                            "name": "height",
                            "description": "Cell height of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "grid.height"
                        }
                    ]
                }
            ],
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 446,
            "description": "Returns the axis-aligned bounding box of the entire map.",
            "itemtype": "method",
            "name": "getAABB",
            "return": {
                "description": "aabb  The returned object provides the top, left, width, and height of the collision map.",
                "type": "platypus.AABB"
            },
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 456,
            "description": "Confirms whether a particular map grid coordinate contains a tile.",
            "itemtype": "method",
            "name": "isTile",
            "params": [
                {
                    "name": "x",
                    "description": "Integer specifying the column of tiles in the collision map to check.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Integer specifying the row of tiles in the collision map to check.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns `true` if the coordinate contains a collision tile, `false` if it does not.",
                "type": "Boolean"
            },
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 468,
            "description": "Returns all the collision tiles within the provided axis-aligned bounding box as an array of shapes.",
            "itemtype": "method",
            "name": "getTileShapes",
            "params": [
                {
                    "name": "aabb",
                    "description": "The axis-aligned bounding box for which tiles should be returned.",
                    "type": "platypus.AABB"
                },
                {
                    "name": "prevAABB",
                    "description": "The axis-aligned bounding box for a previous location to test for jump-through tiles.",
                    "type": "platypus.AABB"
                },
                {
                    "name": "collisionType",
                    "description": "The type of collision to check for. If not specified, \"tiles\" is used. (Since 0.8.3)",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Each returned object provides the [CollisionShape](CollisionShape.html) of a tile.",
                "type": "Array"
            },
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 503,
            "description": "Performs a transform of a subset of the collision tile grid.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "transform",
                    "description": "A list of key/value pairs describing the transform.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of transform; one of the following: \"horizontal\", \"vertical\", \"diagonal\", \"diagonal-inverse\", \"rotate-90\", \"rotate-180\", \"rotate-270\". Height and width should match for diagonal flips and 90 degree rotations.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"horizontal\""
                        },
                        {
                            "name": "left",
                            "description": "Grid coordinate for the left side of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "top",
                            "description": "Grid coordinate for the top of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "width",
                            "description": "Cell width of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "grid.width"
                        },
                        {
                            "name": "height",
                            "description": "Cell height of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "grid.height"
                        }
                    ]
                }
            ],
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 529,
            "description": "Performs a translation of a subset of the collision tile grid.",
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "translate",
                    "description": "A list of key/value pairs describing the translation.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "dx",
                            "description": "Movement in columns.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "dy",
                            "description": "Movement in rows.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "left",
                            "description": "Grid coordinate for the left side of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "top",
                            "description": "Grid coordinate for the top of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "width",
                            "description": "Cell width of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "grid.width"
                        },
                        {
                            "name": "height",
                            "description": "Cell height of the bounding box.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "grid.height"
                        }
                    ]
                }
            ],
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 553,
            "description": "Gets a subset of the collision tile grid as a 2D array.",
            "itemtype": "method",
            "name": "getCollisionMatrix",
            "params": [
                {
                    "name": "originX",
                    "description": "Grid coordinate for the left side of the bounding box.",
                    "type": "Number"
                },
                {
                    "name": "originY",
                    "description": "Grid coordinate for the top of the bounding box.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "Cell width of the bounding box.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Cell height of the bounding box.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\CollisionTiles.js",
            "line": 567,
            "description": "Sets a subset of the collision tile grid.",
            "itemtype": "method",
            "name": "setCollisionMatrix",
            "params": [
                {
                    "name": "sourceArray",
                    "description": "A 2D array describing the collision tiles to insert into the collision tile grid.",
                    "type": "Array"
                },
                {
                    "name": "originX",
                    "description": "Grid coordinate for the left side of the bounding box.",
                    "type": "Number"
                },
                {
                    "name": "originY",
                    "description": "Grid coordinate for the top of the bounding box.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "Cell width of the bounding box.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Cell height of the bounding box.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.CollisionTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\ComponentSwitcher.js",
            "line": 21,
            "description": "This is the list of messages to listen for (as the keys) with the settings as two arrays of components to add and components to remove.\n\n               {\n                   \"found-pogostick\":{\n                     \"add\":[\n                     // This is a list of components to add when \"found-pogostick\" is triggered on the entity. If it's adding a single component, \"add\" can be a reference to the component definition itself rather than an array of one object.\n                       {\"type\": \"Mover\"},\n                       {\"type\": \"HeadGear\"}\n                     ]\n                     \n                     \"remove\": [\"CarSeat\"]\n                     // This is a string list of component ids to remove when \"found-pogostick\" is triggered on the entity. It will ignore listed components that are not connected to the entity.\n                   },\n                   \n                   // Multiple events can cause unique components to be added or removed\n                   \"walking-indoors\":{\n                     \"remove\": [\"HeadGear\"]\n                   },\n                   \n                   \"contemplate\":{\n                     \"add\": {\"type\": \"AIPacer\"}\n                   }\n                 }\n               }",
            "itemtype": "property",
            "name": "componentMap",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.ComponentSwitcher",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\ComponentSwitcher.js",
            "line": 62,
            "description": "Message(s) listed by `componentMap` will add or remove components.",
            "itemtype": "method",
            "name": "'*'",
            "class": "platypus.components.ComponentSwitcher",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\ComponentSwitcher.js",
            "line": 74,
            "description": "This component handles component-switching on this call so that it doesn't interfere with the \"handle-logic\" loop.",
            "itemtype": "method",
            "name": "'prepare-logic'",
            "class": "platypus.components.ComponentSwitcher",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\ComponentSwitcher.js",
            "line": 128,
            "description": "This message is triggered on the parent when the entity's components change.",
            "itemtype": "event",
            "name": "'child-entity-updated'",
            "params": [
                {
                    "name": "entity",
                    "description": "This is the entity itself.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.ComponentSwitcher",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\ComponentSwitcher.js",
            "line": 136,
            "description": "This message is triggered on the entity itself when its components change.",
            "itemtype": "event",
            "name": "'add-remove-component-complete'",
            "class": "platypus.components.ComponentSwitcher",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Counter.js",
            "line": 19,
            "description": "A total the counter is incrementing toward.",
            "itemtype": "property",
            "name": "total",
            "type": "number",
            "default": "0",
            "class": "platypus.components.Counter",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Counter.js",
            "line": 39,
            "description": "Each step, this component detects whether the count has changed and triggers an 'update-content' event if so.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "class": "platypus.components.Counter",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Counter.js",
            "line": 65,
            "description": "A call used to notify other components that the count or total has changed.",
            "itemtype": "event",
            "name": "'update-content'",
            "params": [
                {
                    "name": "update.text",
                    "description": "String describing the current count.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.Counter",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Counter.js",
            "line": 75,
            "description": "Changes the total to the given value.",
            "itemtype": "method",
            "name": "'change-total'",
            "params": [
                {
                    "name": "data.total",
                    "description": "The new total value.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.Counter",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Counter.js",
            "line": 85,
            "description": "Changes the count to the given value.",
            "itemtype": "method",
            "name": "'change-count'",
            "params": [
                {
                    "name": "data.count",
                    "description": "The new count value.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.Counter",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Counter.js",
            "line": 95,
            "description": "Increments the count by 1.",
            "itemtype": "method",
            "name": "'increment-count'",
            "class": "platypus.components.Counter",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityContainer.js",
            "line": 9,
            "description": "### Local Broadcasts:\n- **child-entity-added** - This message is triggered when a new entity has been added to the list of children entities.\n  - @param message ([[Entity]] object) - The entity that was just added.\n- **child-entity-removed** - This message is triggered when an entity has been removed from the list of children entities.\n  - @param message ([[Entity]] object) - The entity that was just removed.\n\n### Child Broadcasts:\n- **peer-entity-added** - This message is triggered when a new entity has been added to the parent's list of children entities.\n  - @param message ([[Entity]] object) - The entity that was just added.\n- **peer-entity-removed** - This message is triggered when an entity has been removed from the parent's list of children entities.\n  - @param message ([[Entity]] object) - The entity that was just removed.\n- **[Messages specified in definition]** - Listens for specified messages and on receiving them, re-triggers them on child entities.\n  - @param message (object) - sends the message object received by the original message.\n\n## Entity Methods:\n- **addEntity** -  This method will add the provided entity to this component's list of entities.\n  - @param entity ([[Entity]] object) - Required. This is the entity to be added as a child.\n  - @return entity ([[Entity]] object) - Returns the entity that was just added.\n- **removeEntity** - This method will remove the provided entity from the list of child entities.\n  - @param message ([[Entity]] object) - Required. The entity to remove.\n  - @return entity ([[Entity]] object | false) - Returns the entity that was just removed. If the entity was not foudn as a child, `false` is returned, indicated that the provided entity was not a child of this entity.\n- **getEntitiesByType** - This method will return all child entities (including grandchildren) that match the provided type.\n  - @param type (string) - Required. The entity type to find.\n  - @return entities (Array of [[Entity]] objects) - Returns the entities that match the specified entity type.\n- **getEntityById** - This method will return the first child entity it finds with a matching id (including grandchildren).\n  - @param id (string) - Required. The entity id to find.\n  - @return entity ([[Entity]] object) - Returns the entity that matches the specified entity id.\n- **triggerOnChildren** - This method is used by both internal components and external entities to trigger messages on the child entities.\n  - @param event (variant) - This is the message(s) to process. This can be a string, an object containing an \"event\" property (and optionally a \"message\" property, overriding the value below), or an array of the same.\n  - @param value (variant) - This is a message object or other value to pass along to component functions.\n  - @param debug (boolean) - This flags whether to output message contents and subscriber information to the console during game development. A \"value\" object parameter (above) will also set this flag if value.debug is set to true.\n  - @return integer - The number of handlers for the triggered message: this is useful for determining how many child entities care about a given message.\n- **triggerEvent** - This method is used by both internal components and external entities to trigger messages on the child entities.\n  - @param event (string) - This is the message to process.\n  - @param value (variant) - This is a message object or other value to pass along to component functions.\n  - @param debug (boolean) - This flags whether to output message contents and subscriber information to the console during game development. A \"value\" object parameter (above) will also set this flag if value.debug is set to true.\n  - @return integer - The number of handlers for the triggered message: this is useful for determining how many child entities care about a given message.",
            "class": "platypus.components.EntityContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityContainer.js",
            "line": 64,
            "description": "An Array listing messages that are triggered on the entity and should be triggered on the children as well.",
            "itemtype": "property",
            "name": "childEvents",
            "type": "Array",
            "default": "[]",
            "class": "platypus.components.EntityContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityContainer.js",
            "line": 121,
            "description": "This message will added the given entity to this component's list of entities.",
            "itemtype": "method",
            "name": "'add-entity'",
            "params": [
                {
                    "name": "entity",
                    "description": "This is the entity to be added as a child.",
                    "type": "platypus.Entity"
                },
                {
                    "name": "callback",
                    "description": "A function to run once all of the components on the Entity have been loaded.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "platypus.components.EntityContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityContainer.js",
            "line": 132,
            "description": "On receiving this message, the provided entity will be removed from the list of child entities.",
            "itemtype": "method",
            "name": "'remove-entity'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to remove.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.EntityContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityContainer.js",
            "line": 142,
            "description": "On receiving this message, the provided entity will be updated in the list of child entities to reflect changes in its listeners.",
            "itemtype": "method",
            "name": "'child-entity-updated'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to remove.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.EntityContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityContainer.js",
            "line": 152,
            "description": "On receiving this message, this component checks to see if any entities being added are ready. If so, they are added to the world. This is so ready entities don't have to wait until the end of a complete tick, but can be inserted between logic ticks.",
            "itemtype": "method",
            "name": "'logic-tick'",
            "since": "v0.12.0",
            "class": "platypus.components.EntityContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityContainer.js",
            "line": 198,
            "description": "Listens for specified messages and on receiving them, re-triggers them on child entities.",
            "itemtype": "method",
            "name": "'*'",
            "params": [
                {
                    "name": "message",
                    "description": "Accepts a message object that it will include in the new message to be triggered.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.EntityContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityContainer.js",
            "line": 348,
            "description": "This method adds an entity to the owner's group. If an entity definition or a reference to an entity definition is provided, the entity is created and then added to the owner's group.",
            "itemtype": "method",
            "name": "addEntity",
            "params": [
                {
                    "name": "newEntity",
                    "description": "Specifies the entity to add. If an object with a \"type\" property is provided or a String is provided, this component looks up the entity definition to create the entity.",
                    "type": "platypus.Entity|Object|String",
                    "props": [
                        {
                            "name": "type",
                            "description": "If an object with a \"type\" property is provided, this component looks up the entity definition to create the entity.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "properties",
                            "description": "A list of key/value pairs that sets the initial properties on the new entity.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "A function to run once all of the components on the Entity have been loaded.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "The entity that was just added.",
                "type": "platypus.Entity"
            },
            "class": "platypus.components.EntityContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 59,
            "description": "Use the controlMap property object to map inputs to messages that should be triggered. At least one control mapping should be included. The following are a few examples:\n\n      {\n          \"key:x\": \"run-left\",\n          // This causes an \"x\" keypress to fire \"run-left\" on the entity. For a full listing of key names, check out the `HandlerController` component.\n\n          \"button-pressed\": \"throw-block\",\n          // custom input messages can be fired on this entity from other entities, allowing for on-screen input buttons to run through the same controller channel as other inputs.\n\n          \"mouse:left-button\"\n          // The controller can also handle mouse events on the entity if the entity's render component triggers mouse events on the entity (for example, the `RenderSprite` component).\n      }",
            "itemtype": "property",
            "name": "controlMap",
            "type": "Object",
            "default": "{}",
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 79,
            "description": "Determines whether this entity should listen for mouse events to trigger directional events. Can be set simply to \"true\" to accept all joystick defaults.\n\n      \"joystick\": {\n          \"directions\": 8, // Optional: 4, 8, or 16. Determines how many directions to broadcast. Default is 4 (\"north\", \"east\", \"south\", and \"west\").\n          \"innerRadius\": 30, // Optional. Number determining how far the mouse must be from the entity's position before joystick events should be triggered. Default is 0.\n          \"outerRadius\": 60 // Optional. Number determining how far the mouse can move away from the entity's position before the joystick stops triggering events. Default is Infinity.\n      }",
            "itemtype": "property",
            "name": "joystick",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 94,
            "description": "The stateMaps property can hold multiple control maps. Use this if certain controls should only be available for certain states. The controller finds the first valid state and falls back to the base `controlMap` as default if no matches are found.",
            "itemtype": "property",
            "name": "stateMaps",
            "type": "Object",
            "default": "{}",
            "since": "0.6.7",
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 106,
            "description": "Whether input controls should be deactivated.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 145,
            "description": "On each `handle-controller` message, this component checks its list of actions and if any of their states are currently true or were true on the last call, that action message is triggered.",
            "itemtype": "method",
            "name": "'handle-controller'",
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 173,
            "description": "This message triggers a new message on the entity that includes what button on the mouse was pressed: \"mouse:left-button:down\", \"mouse:middle-button:down\", or \"mouse:right-button:down\".",
            "itemtype": "method",
            "name": "'pointerdown'",
            "params": [
                {
                    "name": "value.event",
                    "description": "This event object is passed along with the new message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 181,
            "description": "This component triggers the state of mouse inputs on the entity if a render component of the entity accepts mouse input.",
            "itemtype": "event",
            "name": "'mouse:mouse-left:down'",
            "params": [
                {
                    "name": "message",
                    "description": "The original mouse event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 187,
            "description": "This component triggers the state of mouse inputs on the entity if a render component of the entity accepts mouse input (for example [[Render-Animation]]).",
            "itemtype": "event",
            "name": "'mouse:mouse-middle:down'",
            "params": [
                {
                    "name": "message",
                    "description": "The original mouse event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 193,
            "description": "This component triggers the state of mouse inputs on the entity if a render component of the entity accepts mouse input (for example [[Render-Animation]]).",
            "itemtype": "event",
            "name": "'mouse:mouse-right:down'",
            "params": [
                {
                    "name": "message",
                    "description": "The original mouse event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 203,
            "description": "This event is triggered when there is an active touch in the joystick area.",
            "itemtype": "event",
            "name": "'joystick:down'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 214,
            "description": "This message triggers a new message on the entity that includes what button on the mouse was released: \"mouse:left-button:up\", \"mouse:middle-button:up\", or \"mouse:right-button:up\".",
            "itemtype": "method",
            "name": "'pressup'",
            "params": [
                {
                    "name": "value.event",
                    "description": "This event object is passed along with the new message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 224,
            "description": "This component triggers the state of mouse inputs on the entity if a render component of the entity accepts mouse input (for example [[Render-Animation]]).",
            "itemtype": "event",
            "name": "'mouse:mouse-left:up'",
            "params": [
                {
                    "name": "message",
                    "description": "The original mouse event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 230,
            "description": "This component triggers the state of mouse inputs on the entity if a render component of the entity accepts mouse input (for example [[Render-Animation]]).",
            "itemtype": "event",
            "name": "'mouse:mouse-middle:up'",
            "params": [
                {
                    "name": "message",
                    "description": "The original mouse event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 236,
            "description": "This component triggers the state of mouse inputs on the entity if a render component of the entity accepts mouse input (for example [[Render-Animation]]).",
            "itemtype": "event",
            "name": "'mouse:mouse-right:up'",
            "params": [
                {
                    "name": "message",
                    "description": "The original mouse event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 246,
            "description": "This event is triggered when there is an active touch is released from the joystick area.",
            "itemtype": "event",
            "name": "'joystick:up'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 253,
            "description": "This event is triggered to stop movement once the joystick is released.",
            "itemtype": "event",
            "name": "'stop'",
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 262,
            "description": "Updates joystick input if joystick is enabled.",
            "itemtype": "method",
            "name": "'pressmove'",
            "params": [
                {
                    "name": "value",
                    "description": "This event object is passed along with the joystick messages.",
                    "type": "platypus.Data"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 274,
            "description": "This message will stop the controller from triggering messages until \"unpause-controls\" is triggered on the entity.",
            "itemtype": "method",
            "name": "'pause-controls'",
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 283,
            "description": "This message will allow the controller to trigger messages until \"pause-controls\" is triggered on the entity.",
            "itemtype": "method",
            "name": "'unpause-controls'",
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 320,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due north.",
            "itemtype": "event",
            "name": "'north'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 326,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due north-northeast.",
            "itemtype": "event",
            "name": "'north-northeast'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 332,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due northeast.",
            "itemtype": "event",
            "name": "'northeast'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 338,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due east-northeast.",
            "itemtype": "event",
            "name": "'east-northeast'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 344,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due east.",
            "itemtype": "event",
            "name": "'east'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 350,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due east-southeast.",
            "itemtype": "event",
            "name": "'east-southeast'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 356,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due southeast.",
            "itemtype": "event",
            "name": "'southeast'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 362,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due south-southeast.",
            "itemtype": "event",
            "name": "'south-southeast'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 368,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due south.",
            "itemtype": "event",
            "name": "'south'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 374,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due south-southwest.",
            "itemtype": "event",
            "name": "'south-southwest'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 380,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due southwest.",
            "itemtype": "event",
            "name": "'southwest'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 386,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due west-southwest.",
            "itemtype": "event",
            "name": "'west-southwest'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 392,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due west.",
            "itemtype": "event",
            "name": "'west'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 398,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due west-northwest.",
            "itemtype": "event",
            "name": "'west-northwest'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 404,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due northwest.",
            "itemtype": "event",
            "name": "'northwest'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 410,
            "description": "If the soft joystick is enabled on this component, it will broadcast this directional message if the joystick is dragged due north-northwest.",
            "itemtype": "event",
            "name": "'north-northwest'",
            "params": [
                {
                    "name": "message",
                    "description": "The original pointer event object is passed along with the control message.",
                    "type": "DOM Event object"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 418,
            "description": "If the soft joystick is enabled on this component, this message will trigger to provide the current orientation of the joystick.",
            "itemtype": "event",
            "name": "'joystick-orientation'",
            "params": [
                {
                    "name": "orientation",
                    "description": "(number) - A number in radians representing the orientation of the joystick."
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EntityController.js",
            "line": 444,
            "description": "Broadcasts active states using the JSON-defined message on each `handle-controller` message. Active states include `pressed` being true or `released` being true. If both of these states are false, the message is not broadcasted.",
            "itemtype": "event",
            "name": "'*'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "Whether the current input is active.",
                    "type": "Boolean"
                },
                {
                    "name": "message.released",
                    "description": "Whether the current input was active last tick but is no longer active.",
                    "type": "Boolean"
                },
                {
                    "name": "message.triggered",
                    "description": "Whether the current input is active but was not active last tick.",
                    "type": "Boolean"
                },
                {
                    "name": "message.over",
                    "description": "Whether the mouse was over the entity when pressed, released, or triggered. This value is always false for non-mouse input messages.",
                    "type": "Boolean"
                }
            ],
            "class": "platypus.components.EntityController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EventRender.js",
            "line": 16,
            "description": "An object containg key-value pairs that define a mapping from triggered events to the animation that should play.\n\n    \"animationMap\":{\n        \"move\": \"walk-animation\",\n        \"jump\": \"jumping-animation\"\n    }\n\nThe above will create two event listeners on the entity, \"move\" and \"jump\", that will play their corresponding animations when the events are triggered.",
            "itemtype": "property",
            "name": "animationMap",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.EventRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EventRender.js",
            "line": 32,
            "description": "Sets a component that this component should be connected to.",
            "itemtype": "property",
            "name": "component",
            "type": "Component",
            "default": "null",
            "since": "0.9.2",
            "class": "platypus.components.EventRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EventRender.js",
            "line": 42,
            "description": "Whether to restart a playing animation on event.",
            "itemtype": "property",
            "name": "restart",
            "type": "Boolean",
            "default": "true",
            "since": "0.9.2",
            "class": "platypus.components.EventRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\EventRender.js",
            "line": 56,
            "description": "On receiving an animation-mapped event, this component triggers this event to play an animation.",
            "itemtype": "event",
            "name": "'play-animation'",
            "params": [
                {
                    "name": "animation",
                    "description": "Describes the animation to play.",
                    "type": "String"
                },
                {
                    "name": "restart",
                    "description": "Whether to restart a playing animation.",
                    "type": "Boolean"
                }
            ],
            "class": "platypus.components.EventRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 14,
            "description": "When an entity collides with an entity of a listed collision-type, this message is triggered on the entity. * is the other entity's collision-type.",
            "itemtype": "event",
            "name": "'hit-by-*'",
            "params": [
                {
                    "name": "collision",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "entity",
                            "description": "The entity with which the collision occurred.",
                            "type": "Entity"
                        },
                        {
                            "name": "target",
                            "description": "The entity that's receiving the collision event.",
                            "type": "Entity"
                        },
                        {
                            "name": "type",
                            "description": "The collision type of the other entity.",
                            "type": "String"
                        },
                        {
                            "name": "shape",
                            "description": "This is the shape of the other entity that caused the collision.",
                            "type": "CollisionShape"
                        },
                        {
                            "name": "x",
                            "description": "Returns -1, 0, or 1 indicating on which side of this entity the collision occurred: left, neither, or right respectively.",
                            "type": "Number"
                        },
                        {
                            "name": "y",
                            "description": "Returns -1, 0, or 1 indicating on which side of this entity the collision occurred: top, neither, or bottom respectively.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 56,
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 82,
            "description": "On receiving this message, the component checks the entity to determine whether it listens for collision messages. If so, the entity is added to the collision group.",
            "itemtype": "method",
            "name": "'child-entity-added'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to be added.",
                    "type": "Entity"
                }
            ],
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 94,
            "description": "On receiving this message, the component checks the entity to determine whether it listens for collision messages. If so, the entity is added to the collision group.",
            "itemtype": "method",
            "name": "'add-collision-entity'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to be added.",
                    "type": "Entity"
                }
            ],
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 104,
            "description": "On receiving this message, the component looks for the entity in its collision group and removes it.",
            "itemtype": "method",
            "name": "'child-entity-removed'",
            "params": [
                {
                    "name": "message",
                    "description": "The entity to be removed.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 114,
            "description": "On receiving this message, the component looks for the entity in its collision group and removes it.",
            "itemtype": "method",
            "name": "'remove-collision-entity'",
            "params": [
                {
                    "name": "message",
                    "description": "The entity to be removed.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 124,
            "description": "On receiving this message, the component looks for the entity in its collision group and updates it.",
            "itemtype": "method",
            "name": "'child-entity-updated'",
            "params": [
                {
                    "name": "message",
                    "description": "The entity to be updated.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 135,
            "description": "This message causes the component to go through the entities and check for collisions.",
            "itemtype": "method",
            "name": "'check-collision-group'",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "camera",
                            "description": "Specifies a region in which to check for collisions. Expects the camera object to contain the following properties: top, left, width, height, and buffer.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 385,
            "description": "This message is triggered on an entity that has been repositioned due to a solid collision.",
            "itemtype": "event",
            "name": "'relocate-entity'",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "position",
                            "description": "The relocated position of the entity.",
                            "type": "Vector"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 773,
            "description": "Find the earliest point at which this shape collides with one of the potential colliding shapes along this axis.\nFor example, cycles through shapes a, b, and c to find the earliest position:\n\n   O---->   [b]  [a]     [c]\n\n   Returns collision location for:\n\n           O[b]",
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 1198,
            "description": "This method returns an object containing world entities.",
            "itemtype": "method",
            "name": "getWorldEntities",
            "return": {
                "description": "A list of all world collision entities.",
                "type": "Array"
            },
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 1208,
            "description": "This method returns an entity representing the collision map of the world.",
            "itemtype": "method",
            "name": "getWorldTerrain",
            "return": {
                "description": "- An entity describing the collision map of the world. This entity typically includes a `CollisionTiles` component.",
                "type": "Entity"
            },
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 1218,
            "description": "This method returns a list of collision objects describing soft collisions between an entity and a list of other entities.",
            "itemtype": "method",
            "name": "getEntityCollisions",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to test against the world.",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "collisions  This is a list of collision objects describing the soft collisions.",
                "type": "Array"
            },
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 1235,
            "description": "This method returns a list of collision objects describing collisions between a shape and a list of other entities.",
            "itemtype": "method",
            "name": "getShapeCollisions",
            "params": [
                {
                    "name": "shape",
                    "description": "The shape to check for collisions.",
                    "type": "CollisionShape"
                },
                {
                    "name": "collisionTypes",
                    "description": "The collision types to check against.",
                    "type": "Array of strings"
                }
            ],
            "return": {
                "description": "collisions  This is a list of collision objects describing the soft collisions.",
                "type": "Array"
            },
            "since": "0.11.2",
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerCollision.js",
            "line": 1254,
            "description": "This method returns a list of collision objects describing collisions between a point and a list of other entities.",
            "itemtype": "method",
            "name": "getPointCollisions",
            "params": [
                {
                    "name": "x",
                    "description": "The x-axis value.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y-axis value.",
                    "type": "Number"
                },
                {
                    "name": "collisionTypes",
                    "description": "The collision types to check against.",
                    "type": "Array of strings"
                }
            ],
            "return": {
                "description": "collisions  This is a list of collision objects describing the soft collisions.",
                "type": "Array"
            },
            "since": "0.11.0",
            "class": "platypus.components.HandlerCollision",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerController.js",
            "line": 144,
            "description": "Sends a 'handle-controller' message to all the entities the component is handling. If an entity does not handle the message, it's removed it from the entity list.",
            "itemtype": "method",
            "name": "'tick'",
            "params": [
                {
                    "name": "tick",
                    "description": "An object containing tick data.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.HandlerController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerController.js",
            "line": 152,
            "description": "Sent to entities on each tick to handle whatever they need to regarding controls.",
            "itemtype": "event",
            "name": "'handle-controller'",
            "params": [
                {
                    "name": "tick",
                    "description": "An object containing tick data.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.HandlerController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerController.js",
            "line": 166,
            "description": "Message sent to an entity when a key goes from up to down.",
            "itemtype": "event",
            "name": "'key:[keyId]:down'",
            "params": [
                {
                    "name": "event",
                    "description": "The DOM event that triggered the keydown event.",
                    "type": "DOMEvent"
                }
            ],
            "class": "platypus.components.HandlerController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerController.js",
            "line": 178,
            "description": "Message sent to child entities when a key goes from down to up.",
            "itemtype": "event",
            "name": "'key:[keyId]:up'",
            "params": [
                {
                    "name": "event",
                    "description": "The DOM event that triggered the keyup event.",
                    "type": "DOMEvent"
                }
            ],
            "class": "platypus.components.HandlerController",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 43,
            "description": "Whether logic should always run on all entities or only run on entities within the visible camera area (plus the buffer amount specified by the `buffer` property).",
            "itemtype": "property",
            "name": "alwaysOn",
            "type": "Boolean",
            "default": "false",
            "since": "0.7.1",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 54,
            "description": "The buffer area around the camera in which entity logic is active. This property is available on the Entity as `entity.buffer`.",
            "itemtype": "property",
            "name": "buffer",
            "type": "number",
            "default": "camera width / 10",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 63,
            "description": "The length in milliseconds of a single logic step. If the framerate drops too low, logic is run for each step of this many milliseconds. This property is available on the Entity as `entity.stepLength`.",
            "itemtype": "property",
            "name": "stepLength",
            "type": "number",
            "default": "5",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 72,
            "description": "The maximum number of steps to take for a given tick, to prevent lag overflow.",
            "itemtype": "property",
            "name": "maxStepsPerTick",
            "type": "number",
            "default": "100",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 81,
            "description": "Whether logic should occur at an alternate speed. This is useful for simulations where the game should speed up or slow down.",
            "itemtype": "property",
            "name": "timeMultiplier",
            "type": "number",
            "default": "1",
            "since": "0.7.1",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 117,
            "description": "Called when an entity has been updated and should be considered for adding to or removing from the handler.",
            "itemtype": "method",
            "name": "'child-entity-updated'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity that is being considered.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "v0.12.0",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 143,
            "description": "Called when a new entity has been added and should be considered for addition to the handler. If the entity has a 'handle-logic' message id it's added to the list of entities.",
            "itemtype": "method",
            "name": "'child-entity-added'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity that is being considered for addition to the handler.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 160,
            "description": "Called when an entity should be removed from the list of logically updated entities.",
            "itemtype": "method",
            "name": "'child-entity-removed'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to be removed from the handler.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 177,
            "description": "When this event is triggered, `handle-logic` messages cease to be triggered on each tick.",
            "itemtype": "method",
            "name": "'pause-logic'",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "time",
                            "description": "If set, this will pause the logic for this number of milliseconds. If not set, logic is paused until an `unpause-logic` message is triggered.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 191,
            "description": "Notifies children entities that logic has been paused.",
            "itemtype": "event",
            "name": "'logic-paused'",
            "since": "0.8.4",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 201,
            "description": "When this event is triggered, `handle-logic` messages begin firing each tick.",
            "itemtype": "method",
            "name": "'unpause-logic'",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 209,
            "description": "Notifies children entities that logic has been unpaused.",
            "itemtype": "event",
            "name": "'logic-unpaused'",
            "since": "0.8.4",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 219,
            "description": "Changes the active logic area when the camera location changes.",
            "itemtype": "method",
            "name": "'camera-update'",
            "params": [
                {
                    "name": "camera",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "viewport",
                            "description": "The AABB describing the camera viewport in world units.",
                            "type": "platypus.AABB"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 241,
            "description": "Sends a 'handle-logic' message to all the entities the component is handling. If an entity does not handle the message, it's removed it from the entity list.",
            "itemtype": "method",
            "name": "'tick'",
            "params": [
                {
                    "name": "tick",
                    "description": "Tick information that is passed on to children entities via \"handle-logic\" events.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The time passed since the last tick.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 292,
            "description": "This event is triggered on the top-level layer to signify a \"handle-logic\" event is about to be triggered on children. This is unique from the layer's \"tick\" event in that it occurs the same number of times as the \"handle-logic\" event and will not occur if HandlerLogic is paused.",
            "itemtype": "event",
            "name": "'logic-tick'",
            "params": [
                {
                    "name": "tick.delta",
                    "description": "The time that has passed since the last tick.",
                    "type": "Number"
                },
                {
                    "name": "tick.camera",
                    "description": "The range of the logic camera area. This is typically larger than the visible camera. This value is `null` if `alwaysOn` is set to `true` on this component.",
                    "type": "null|platypus.AABB"
                },
                {
                    "name": "tick.entities",
                    "description": "This is a list of all the logically active entities.",
                    "type": "Array"
                }
            ],
            "since": "0.8.1",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 311,
            "description": "This event is triggered on children entities to run anything that should occur before \"handle-logic\". For example, removing or adding components should happen here and not in \"handle-logic\".",
            "itemtype": "event",
            "name": "'prepare-logic'",
            "params": [
                {
                    "name": "tick",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The time that has passed since the last tick.",
                            "type": "Number"
                        },
                        {
                            "name": "camera",
                            "description": "The range of the logic camera area. This is typically larger than the visible camera. This value is `null` if `alwaysOn` is set to `true` on this component.",
                            "type": "null|platypus.AABB"
                        },
                        {
                            "name": "entities",
                            "description": "This is a list of all the logically active entities.",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "since": "0.6.8",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 323,
            "description": "This event is triggered on children entities to run their logic.",
            "itemtype": "event",
            "name": "'handle-logic'",
            "params": [
                {
                    "name": "tick",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The time that has passed since the last tick.",
                            "type": "Number"
                        },
                        {
                            "name": "camera",
                            "description": "The range of the logic camera area. This is typically larger than the visible camera. This value is `null` if `alwaysOn` is set to `true` on this component.",
                            "type": "null|platypus.AABB"
                        },
                        {
                            "name": "entities",
                            "description": "This is a list of all the logically active entities.",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 334,
            "description": "This event is triggered on children entities to move. This happens immediately after logic so entity logic can determine movement.",
            "itemtype": "event",
            "name": "'handle-movement'",
            "params": [
                {
                    "name": "tick",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The time that has passed since the last tick.",
                            "type": "Number"
                        },
                        {
                            "name": "camera",
                            "description": "The range of the logic camera area. This is typically larger than the visible camera. This value is `null` if `alwaysOn` is set to `true` on this component.",
                            "type": "null|platypus.AABB"
                        },
                        {
                            "name": "entities",
                            "description": "This is a list of all the logically active entities.",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "since": "0.6.8",
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 361,
            "description": "This event is triggered on the entity (layer) to test collisions once logic has been completed.",
            "itemtype": "event",
            "name": "'check-collision-group'",
            "params": [
                {
                    "name": "tick",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The time that has passed since the last tick.",
                            "type": "Number"
                        },
                        {
                            "name": "camera",
                            "description": "The range of the logic camera area. This is typically larger than the visible camera. This value is `null` if `alwaysOn` is set to `true` on this component.",
                            "type": "null|platypus.AABB"
                        },
                        {
                            "name": "entities",
                            "description": "This is a list of all the logically active entities.",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 371,
            "description": "This event is triggered on entities to run logic that may depend upon collision responses.",
            "itemtype": "event",
            "name": "'handle-post-collision-logic'",
            "params": [
                {
                    "name": "tick",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The time that has passed since the last tick.",
                            "type": "Number"
                        },
                        {
                            "name": "camera",
                            "description": "The range of the logic camera area. This is typically larger than the visible camera. This value is `null` if `alwaysOn` is set to `true` on this component.",
                            "type": "null|platypus.AABB"
                        },
                        {
                            "name": "entities",
                            "description": "This is a list of all the logically active entities.",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerLogic.js",
            "line": 381,
            "description": "Triggered on entities when the entity's state has been changed.",
            "itemtype": "event",
            "name": "'state-changed'",
            "params": [
                {
                    "name": "state",
                    "description": "A list of key/value pairs representing the owner's state (this value equals `entity.state`).",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.HandlerLogic",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 21,
            "description": "Defines whether the entity will respond to touch and click events. Setting this value will create an Interactive component on this entity with these properties. For example:\n\n \"interactive\": {\n     \"hover\": false,\n     \"hitArea\": {\n         \"x\": 10,\n         \"y\": 10,\n         \"width\": 40,\n         \"height\": 40\n     }\n }",
            "itemtype": "property",
            "name": "interactive",
            "type": "Boolean|Object",
            "default": "false",
            "since": "0.9.1",
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 43,
            "description": "This is the container holding all children's disply objects for this layer. It's an available property on the layer entity.",
            "itemtype": "property",
            "name": "worldContainer",
            "type": "PIXI.Container",
            "default": "null",
            "since": "0.11.0",
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 53,
            "description": "This is a read-only list of the world container and subcontainers for entities that should be rendered together.",
            "itemtype": "property",
            "name": "renderGroups",
            "type": "Array",
            "default": "null",
            "since": "0.11.10",
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 90,
            "description": "Once the entity is loaded, this component triggers \"render-world\" to notify other components about the entities' display container.",
            "itemtype": "method",
            "name": "'load'",
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 96,
            "description": "Once the entity is loaded, this component triggers \"render-world\" to notify other components about the entities' display container.",
            "itemtype": "event",
            "name": "'render-world'",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "world",
                            "description": "Contains entities to be rendered.",
                            "type": "PIXI.Container"
                        },
                        {
                            "name": "renderGroups",
                            "description": "Containers to categorize display of groups of entities.",
                            "type": "Array of PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 109,
            "description": "This event is triggered once HandlerRender is ready to handle interactivity.",
            "itemtype": "event",
            "name": "'input-on'",
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 117,
            "description": "Called when a new entity has been added to the parent and should be considered for addition to the handler. Entities are sent a reference the Container that we're rendering to, so they can add their display objects to it and the delta from the lastest tick.",
            "itemtype": "method",
            "name": "'child-entity-added'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity added to the parent.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 124,
            "description": "Triggered on an entity added to the parent.",
            "itemtype": "event",
            "name": "'handle-render-load'",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The delta time for this tick.",
                            "type": "Number"
                        },
                        {
                            "name": "container",
                            "description": "The display Container the entities display objects should be added to.",
                            "type": "PIXI.Container"
                        },
                        {
                            "name": "renderGroups",
                            "description": "Containers to categorize display of groups of entities.",
                            "type": "Array of PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 136,
            "description": "Pauses the children of this render Container. If a pause time is not provided. It remains paused until 'unpause-render' is called.",
            "itemtype": "method",
            "name": "'pause-render'",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "time",
                            "description": "How long to pause.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 150,
            "description": "Notifies children entities that rendering updates have been paused.",
            "itemtype": "event",
            "name": "'render-paused'",
            "since": "0.8.4",
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 160,
            "description": "Unpauses the children of this render Container.",
            "itemtype": "method",
            "name": "'unpause-render'",
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 168,
            "description": "Notifies children entities that rendering updates have been unpaused.",
            "itemtype": "event",
            "name": "'render-unpaused'",
            "since": "0.8.4",
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 178,
            "description": "Sends a 'handle-render' message to all the children in the Container. The children in the Container are also paused/unpaused if needed and sorted according to their z value.",
            "itemtype": "method",
            "name": "'tick'",
            "params": [
                {
                    "name": "tick",
                    "description": "An object containing tick data.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\HandlerRender.js",
            "line": 205,
            "description": "Triggered every tick on the children entities.",
            "itemtype": "event",
            "name": "'handle-render'",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The delta time for this tick.",
                            "type": "Number"
                        },
                        {
                            "name": "container",
                            "description": "The display Container the entities display objects should be added to.",
                            "type": "PIXI.Container"
                        },
                        {
                            "name": "renderGroups",
                            "description": "Containers to categorize display of groups of entities.",
                            "type": "Array of PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.HandlerRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 23,
            "description": "Sets the container that represents the interactive area.",
            "itemtype": "property",
            "name": "container",
            "type": "PIXI.Container",
            "default": "null",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 32,
            "description": "Sets the hit area for interactive responses by describing the dimensions of a clickable rectangle:\n\n    \"hitArea\": {\n        \"x\": 10,\n        \"y\": 10,\n        \"width\": 40,\n        \"height\": 40\n    }\n\nOr a circle:\n\n    \"hitArea\": {\n        \"x\": 10,\n        \"y\": 10,\n        \"radius\": 40\n    }\n\nOr use an array of numbers to define a polygon: [x1, y1, x2, y2, ...]\n\n    \"hitArea\": [-10, -10, 30, -10, 30, 30, -5, 30]\n\nDefaults to the container if not specified.",
            "itemtype": "property",
            "name": "hitArea",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 62,
            "description": "Sets whether the entity should respond to mouse hovering.",
            "itemtype": "property",
            "name": "hover",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 71,
            "description": "Used when returning world coordinates. Typically coordinates are relative to the parent, but when this component is added to the layer level, coordinates must be relative to self.",
            "itemtype": "property",
            "name": "relativeToSelf",
            "type": "String",
            "default": "false",
            "since": "0.9.3",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 83,
            "description": "Determines whether hovering over the sprite should alter the cursor.",
            "itemtype": "property",
            "name": "buttonMode",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 102,
            "description": "Listens for this event to determine whether this sprite is visible.",
            "itemtype": "method",
            "name": "'camera-update'",
            "params": [
                {
                    "name": "camera.viewport",
                    "description": "Camera position and size.",
                    "type": "platypus.AABB"
                }
            ],
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 112,
            "description": "Listens to this event to update whether the interactive element should be in button mode.",
            "itemtype": "method",
            "name": "'handle-render'",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 123,
            "description": "This event dispatches a PIXI.Event on this component's PIXI.Sprite. Useful for rerouting mouse/keyboard events.",
            "itemtype": "method",
            "name": "'dispatch-event'",
            "params": [
                {
                    "name": "event",
                    "description": "The event to dispatch.",
                    "type": "Object | PIXI.Event"
                }
            ],
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 133,
            "description": "Adds input event listeners to the sprite, enabling input.",
            "itemtype": "method",
            "name": "'input-on'",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 144,
            "description": "Removes the input event listeners on the sprite, disabling input.",
            "itemtype": "method",
            "name": "'input-off'",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 197,
            "description": "This event is triggered on pointer down.",
            "itemtype": "event",
            "name": "'pointerdown'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "v0.10.6",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 217,
            "description": "This event is triggered on pointer move.",
            "itemtype": "event",
            "name": "'pointermove'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "v0.10.6",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 230,
            "description": "This event is triggered on press move (drag).",
            "itemtype": "event",
            "name": "'pressmove'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 246,
            "description": "This event is triggered on pointer tap.",
            "itemtype": "event",
            "name": "'pointertap'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "v0.10.6",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 261,
            "description": "This event is triggered on pointer out.",
            "itemtype": "event",
            "name": "'pointerout'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "v0.10.6",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 275,
            "description": "This event is triggered on pointer over.",
            "itemtype": "event",
            "name": "'pointerover'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "v0.10.6",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 294,
            "description": "This event is triggered on press up.",
            "itemtype": "event",
            "name": "'pressup'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 307,
            "description": "This event is triggered on pointer up.",
            "itemtype": "event",
            "name": "'pointerup'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "v0.10.6",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 335,
            "description": "This event is triggered on pointer up outside.",
            "itemtype": "event",
            "name": "'pointerupoutside'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "v0.10.6",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Interactive.js",
            "line": 363,
            "description": "This event is triggered on pointer cancel.",
            "itemtype": "event",
            "name": "'pointercancel'",
            "params": [
                {
                    "name": "event",
                    "description": "The original DOM pointer event.",
                    "type": "DOMEvent"
                },
                {
                    "name": "pixiEvent",
                    "description": "The Pixi pointer event.",
                    "type": "PIXI.interaction.InteractionEvent"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in world units.",
                    "type": "Number"
                },
                {
                    "name": "entity",
                    "description": "The entity receiving this event.",
                    "type": "platypus.Entity"
                }
            ],
            "since": "v0.11.10",
            "class": "platypus.components.Interactive",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LevelBuilder.js",
            "line": 173,
            "description": "If true, no single map piece is used twice in the creation of the combined map.",
            "itemtype": "property",
            "name": "useUniques",
            "type": "Boolean",
            "default": "true",
            "class": "platypus.components.LevelBuilder",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LevelBuilder.js",
            "line": 181,
            "description": "A 1D or 2D array of level piece ids. The template defines how the pieces will be arranged and which pieces can be used where. The template must be rectangular in dimensions.\n\n     \"levelTemplate\": [ [\"start\", \"forest\"], [\"forest\", \"end\"] ]",
            "itemtype": "property",
            "name": "levelTemplate",
            "type": "Array",
            "default": "null",
            "class": "platypus.components.LevelBuilder",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LevelBuilder.js",
            "line": 191,
            "description": "This is an object of key/value pairs listing the pieces that map to an id in the level template. The value can be specified as a string or array. A piece will be randomly chosen from an array when that idea is used. If levelPieces is not defined, ids in the template map directly to level names.\n\n     \"levelPieces\": {\n         \"start\"  : \"start-map\",\n         \"end\"      : \"end-map\",\n         \"forest\" : [\"forest-1\", \"forest-2\", \"forest-3\"]\n     }",
            "itemtype": "property",
            "name": "levelPieces",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.LevelBuilder",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LevelBuilder.js",
            "line": 216,
            "description": "When the scene has loaded, LevelBuilder compiles the level based on the template and pieces and sends it to the TiledLoader.",
            "itemtype": "method",
            "name": "'scene-loaded'",
            "params": [
                {
                    "name": "persistentData",
                    "description": "The persistent data from the previous scene.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.LevelBuilder",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LevelBuilder.js",
            "line": 278,
            "description": "Dispatched when the scene has loaded and the level has been composited so TileLoader can begin loading the level.",
            "itemtype": "event",
            "name": "'load-level'",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "level",
                            "description": "An object describing the level dimensions, tiles, and entities.",
                            "type": "Object"
                        },
                        {
                            "name": "persistentData",
                            "description": "The persistent data passed from the last scene. We add levelBuilder data to it to pass on.",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "levelTemplate",
                                    "description": "A 1D or 2D array of level piece ids. The template defines how the pieces will be arranged and which pieces can be used where. The template must be rectangular in dimensions.",
                                    "type": "Object"
                                },
                                {
                                    "name": "levelPieces",
                                    "description": "An object of key/value pairs listing the pieces that map to an id in the level template.",
                                    "type": "Object"
                                },
                                {
                                    "name": "useUniques",
                                    "description": "If true, no single map piece is used twice in the creation of the combined map.",
                                    "type": "Boolean"
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "platypus.components.LevelBuilder",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 18,
            "description": "The max velocity.",
            "itemtype": "property",
            "name": "maxVelocity",
            "type": "Number",
            "default": "3",
            "class": "platypus.components.LogicAngularMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 27,
            "description": "The rate of acceleration.",
            "itemtype": "property",
            "name": "acceleration",
            "type": "Number",
            "default": "0.01",
            "class": "platypus.components.LogicAngularMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 36,
            "description": "The offset between the rotation value of the entity and the rotation of the art.",
            "itemtype": "property",
            "name": "visualOffset",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.LogicAngularMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 45,
            "description": "The starting heading at which the entity will accelerate. In radians.",
            "itemtype": "property",
            "name": "startAngle",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.LogicAngularMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 69,
            "description": "Updates the position, velocity, and rotation of the entity",
            "itemtype": "method",
            "name": "'handle-logic'",
            "params": [
                {
                    "name": "tick",
                    "description": "The tick data.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.LogicAngularMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 118,
            "description": "Sets the internal heading angle in the component.",
            "itemtype": "method",
            "name": "'set-angle'",
            "params": [
                {
                    "name": "angle",
                    "description": "The value you want to set the angle to.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicAngularMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 127,
            "description": "Start the entity accelerating toward the heading angle.",
            "itemtype": "method",
            "name": "'move'",
            "class": "platypus.components.LogicAngularMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 135,
            "description": "Stops the movement toward the heading angle.",
            "itemtype": "method",
            "name": "'stop'",
            "class": "platypus.components.LogicAngularMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAngularMovement.js",
            "line": 145,
            "description": "Set the max velocity.",
            "itemtype": "method",
            "name": "'set-max-velocity'",
            "params": [
                {
                    "name": "newMaxV",
                    "description": "The max velocity value.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicAngularMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 26,
            "description": "An owner state, set to true when the attachment is attached. Meant to be read by other components or used in rendering.",
            "itemtype": "property",
            "name": "attachState",
            "type": "String",
            "default": "'attached'",
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 35,
            "description": "The type of the entity to be attached.",
            "itemtype": "property",
            "name": "attachment",
            "type": "String",
            "default": "''",
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 44,
            "description": "This is an object of key/value pairs. The keys are events this component is listening for locally, the value is the new event to be broadcast on the attached entity. The value can also be an array of events to be fired.\n\n     \"events\": {\n         \"sleeping\": \"good-night\",\n         \"awake\": [\"alarm\", \"get-up\"]\n     }",
            "itemtype": "property",
            "name": "events",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 58,
            "description": "Whether the attachment starts out attached.",
            "itemtype": "property",
            "name": "startAttached",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 67,
            "description": "The offset of the attached entity in x from the attachee.",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 76,
            "description": "The offset of the attached entity in y from the attachee.",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 85,
            "description": "The offset of the attached entity in z from the attachee.",
            "itemtype": "property",
            "name": "offsetZ",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 129,
            "description": "On receiving this message, updates the attached entity's position.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 182,
            "description": "Creates and attaches the entity. The input value makes it possible to attach the entity on user input.",
            "itemtype": "method",
            "name": "'attach'",
            "params": [
                {
                    "name": "input",
                    "description": "An input object.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "pressed",
                            "description": "If set to true, the entity is created and attached.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 192,
            "description": "Detaches and removes the entity.",
            "itemtype": "method",
            "name": "'detach'",
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicAttachment.js",
            "line": 200,
            "description": "Changes the x, y, and z offset of the attachment.",
            "itemtype": "method",
            "name": "'change-attachment-offset'",
            "params": [
                {
                    "name": "offset",
                    "description": "An object containing the offset values.",
                    "type": "Object"
                },
                {
                    "name": "input.x",
                    "description": "The new X offset.",
                    "type": "Number"
                },
                {
                    "name": "input.y",
                    "description": "The new Y offset.",
                    "type": "Number"
                },
                {
                    "name": "input.y",
                    "description": "The new Z offset.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicAttachment",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 20,
            "description": "The event to trigger when pressed.",
            "itemtype": "property",
            "name": "onPress",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 29,
            "description": "The event to trigger when released.",
            "itemtype": "property",
            "name": "onRelease",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 38,
            "description": "The event to trigger when cancelled.",
            "itemtype": "property",
            "name": "onCancel",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 47,
            "description": "The event to trigger when the user mouses over the button",
            "itemtype": "property",
            "name": "hoverAudio",
            "type": "String or an Array of Strings and Message Objects",
            "default": "\"\"",
            "since": "0.9.0",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 57,
            "description": "Whether this button's actions should be limited to the initial press/release.",
            "itemtype": "property",
            "name": "useOnce",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 66,
            "description": "Whether this button should start disabled.",
            "itemtype": "property",
            "name": "disabled",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 75,
            "description": "Determines whether this button should behave as a toggle.",
            "itemtype": "property",
            "name": "toggle",
            "type": "Boolean",
            "default": "false",
            "since": "0.9.1",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 85,
            "description": "Specifies whether the button starts off 'pressed'; typically only useful for toggle buttons.",
            "itemtype": "property",
            "name": "pressed",
            "type": "Boolean",
            "default": "false",
            "since": "0.9.1",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 97,
            "description": "This sets the distance in world units from the bottom of the camera's world viewport. If set, it will override the entity's y coordinate. This property is accessible on the entity as `entity.bottom`.",
            "itemtype": "property",
            "name": "bottom",
            "type": "Number",
            "default": "null",
            "since": "0.9.0",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 107,
            "description": "This sets the distance in world units from the left of the camera's world viewport. If set, it will override the entity's x coordinate. This property is accessible on the entity as `entity.left`.",
            "itemtype": "property",
            "name": "left",
            "type": "Number",
            "default": "null",
            "since": "0.9.0",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 117,
            "description": "This sets the distance in world units from the right of the camera's world viewport. If set, it will override the entity's x coordinate. This property is accessible on the entity as `entity.right`.",
            "itemtype": "property",
            "name": "right",
            "type": "Number",
            "default": "null",
            "since": "0.9.0",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 127,
            "description": "This sets the distance in world units from the top of the camera's world viewport. If set, it will override the entity's y coordinate. This property is accessible on the entity as `entity.top`.",
            "itemtype": "property",
            "name": "top",
            "type": "Number",
            "default": "null",
            "since": "0.9.0",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 159,
            "description": "This component uses location updates to reposition the entity if its bottom, left, right, or top properties have been set.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "since": "0.11.5",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 180,
            "description": "This component listens for camera updates to reposition the entity if its bottom, left, right, or top properties have been set.",
            "itemtype": "method",
            "name": "'camera-update'",
            "params": [
                {
                    "name": "camera",
                    "description": "Camera update information",
                    "type": "platypus.Data",
                    "props": [
                        {
                            "name": "viewport",
                            "description": "The bounding box describing the camera viewport location in the world.",
                            "type": "platypus.AABB"
                        }
                    ]
                }
            ],
            "since": "0.9.0",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 193,
            "description": "Triggers events per the component's definition when a press is made.",
            "itemtype": "method",
            "name": "'pointerdown'",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 207,
            "description": "This event is triggered when the button is pressed to mimic keypress events. If the button is a toggle button, this only occurs on up-to-down.",
            "itemtype": "event",
            "name": "'pressed'",
            "params": [
                {
                    "name": "buttonState",
                    "description": "The state of the button",
                    "type": "platypus.Data",
                    "props": [
                        {
                            "name": "pressed",
                            "description": "This is `true` for the 'pressed' event.",
                            "type": "Boolean"
                        },
                        {
                            "name": "released",
                            "description": "This is `false` for the 'pressed' event.",
                            "type": "Boolean"
                        },
                        {
                            "name": "triggered",
                            "description": "This is `true` for the 'pressed' event.",
                            "type": "Boolean"
                        },
                        {
                            "name": "entity",
                            "description": "The entity for which the original event occurred.",
                            "type": "platypus.Entity"
                        }
                    ]
                }
            ],
            "since": "0.9.1",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 231,
            "description": "Triggers events per the component's definition when a press is released.",
            "itemtype": "method",
            "name": "'pressup'",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 245,
            "description": "This event is triggered when the button is pressed and the mouse/touch is dragged off-target before release.",
            "itemtype": "event",
            "name": "'cancelled'",
            "params": [
                {
                    "name": "buttonState",
                    "description": "The state of the button",
                    "type": "platypus.Data",
                    "props": [
                        {
                            "name": "pressed",
                            "description": "This is `false` for the 'cancelled' event.",
                            "type": "Boolean"
                        },
                        {
                            "name": "released",
                            "description": "This is `true` for the 'cancelled' event.",
                            "type": "Boolean"
                        },
                        {
                            "name": "triggered",
                            "description": "This is `false` for the 'cancelled' event.",
                            "type": "Boolean"
                        },
                        {
                            "name": "entity",
                            "description": "The entity for which the original event occurred.",
                            "type": "platypus.Entity"
                        }
                    ]
                }
            ],
            "since": "0.9.1",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 270,
            "description": "This event is triggered when the button is released, or on the down-to-up change for toggle buttons.",
            "itemtype": "event",
            "name": "'released'",
            "params": [
                {
                    "name": "buttonState",
                    "description": "The state of the button",
                    "type": "platypus.Data",
                    "props": [
                        {
                            "name": "pressed",
                            "description": "This is `false` for the 'released' event.",
                            "type": "Boolean"
                        },
                        {
                            "name": "released",
                            "description": "This is `true` for the 'released' event.",
                            "type": "Boolean"
                        },
                        {
                            "name": "triggered",
                            "description": "This is `false` for the 'released' event.",
                            "type": "Boolean"
                        },
                        {
                            "name": "entity",
                            "description": "The entity for which the original event occurred.",
                            "type": "platypus.Entity"
                        }
                    ]
                }
            ],
            "since": "0.9.1",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 299,
            "description": "If a press moves over the button, it's not cancelled.",
            "itemtype": "method",
            "name": "'pointerover'",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 313,
            "description": "If a press moves off of the button, it's cancelled.",
            "itemtype": "method",
            "name": "'pointerout'",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 324,
            "description": "Disables the entity.",
            "itemtype": "method",
            "name": "'disable'",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 334,
            "description": "Enables the entity.",
            "itemtype": "method",
            "name": "'enable'",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 344,
            "description": "Toggles whether the entity is disabled.",
            "itemtype": "method",
            "name": "'toggle-disabled'",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 356,
            "description": "Sets the entity's highlighted state to `true`.",
            "itemtype": "method",
            "name": "'highlight'",
            "since": "0.8.6",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 366,
            "description": "Sets the entity's highlighted state to `false`.",
            "itemtype": "method",
            "name": "'unhighlight'",
            "since": "0.8.6",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicButton.js",
            "line": 376,
            "description": "Toggles the entity's highlighted state.",
            "itemtype": "method",
            "name": "'toggle-highlight'",
            "since": "0.8.6",
            "class": "platypus.components.LogicButton",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicCarrier.js",
            "line": 16,
            "description": "On receiving this message, the component ensures that it has a peer collision group component, and adds one if not.",
            "itemtype": "method",
            "name": "'load'",
            "class": "platypus.components.LogicCarrier",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicCarrier.js",
            "line": 22,
            "description": "On receiving a `carry-me` message, this component triggers this message to add the portable peer to the collision group.",
            "itemtype": "event",
            "name": "'add-collision-entity'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity being added to the collision group.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.LogicCarrier",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicCarrier.js",
            "line": 35,
            "description": "On receiving this message, the component triggers `add-collision-entity` on the entity to add the peer entity to its collision group.",
            "itemtype": "method",
            "name": "'carry-me'",
            "params": [
                {
                    "name": "message.entity",
                    "description": "The peer entity requesting to be carried.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.LogicCarrier",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicCarrier.js",
            "line": 45,
            "description": "On receiving this message, the component triggers `remove-collision-entity` on the entity to remove the peer entity from its collision group.",
            "itemtype": "method",
            "name": "'carry-me'",
            "params": [
                {
                    "name": "message.entity",
                    "description": "The peer entity requesting to be released.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.LogicCarrier",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicCarrier.js",
            "line": 52,
            "description": "On receiving a `release-me` message, this component triggers this message to remove the portable peer to the collision group.",
            "itemtype": "event",
            "name": "'remove-collision-entity'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity being removed from the collision group.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.LogicCarrier",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDestroyMe.js",
            "line": 16,
            "description": "Time in milliseconds after the \"destroy-me\" message is heard before entity should be removed.",
            "itemtype": "property",
            "name": "delay",
            "type": "number",
            "default": "0",
            "class": "platypus.components.LogicDestroyMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDestroyMe.js",
            "line": 25,
            "description": "Whether this entity has been destroyed. Typically `false` until a \"destroy-me\" event has been triggered.",
            "itemtype": "property",
            "name": "destroyed",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.LogicDestroyMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDestroyMe.js",
            "line": 37,
            "description": "On a `tick` logic message, the component checks whether it should be removed or not.",
            "itemtype": "method",
            "name": "'prepare-logic'",
            "params": [
                {
                    "name": "message.delta",
                    "description": "To measure the delay before removal, the component keeps a running count of step lengths.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicDestroyMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDestroyMe.js",
            "line": 54,
            "description": "This component will set the entity up for removal on receiving this message.",
            "itemtype": "method",
            "name": "'destroy-me'",
            "class": "platypus.components.LogicDestroyMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 44,
            "description": "Defines the axis around which the entity should be transformed. Defaults to \"y\" for platforming behavior. Use \"z\" for top-down behavior.",
            "itemtype": "property",
            "name": "axis",
            "type": "String",
            "default": "\"y\"",
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 53,
            "description": "Defines the distance in world units that the entity should be moved per millisecond.",
            "itemtype": "property",
            "name": "speed",
            "type": "Number",
            "default": "0.3",
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 90,
            "description": "This method checks to make sure there is a `Mover` component attached and sets up initial heading.",
            "itemtype": "method",
            "name": "'component-added'",
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 122,
            "description": "On receiving this message, the component updates its direction of motion according to its current state.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 219,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-down'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 227,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-south'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 235,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-down-left'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 243,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-southwest'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 251,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-left'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 259,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-west'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 267,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-up-left'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 275,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-northwest'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 283,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-up'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 291,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-north'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 299,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-up-right'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 307,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-northeast'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 315,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-right'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 323,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-east'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 331,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-down-right'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 339,
            "description": "On receiving this message, this component updates its heading accordingly.",
            "itemtype": "method",
            "name": "'go-southeast'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new heading. This allows triggering `up` and `left` in sequence to cause `up-left` movement on the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 347,
            "description": "Stops motion in all directions until movement messages are again received.",
            "itemtype": "method",
            "name": "'stop'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "(boolean) - Optional. If `message` is included, the component checks the value of `pressed`: a value of false will not stop the entity."
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 366,
            "description": "Set the direction the entity should face while stopped.",
            "itemtype": "method",
            "name": "'face'",
            "params": [
                {
                    "name": "direction",
                    "description": "A value such as \"north\" or \"left\" to point the entity in a particular direction.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDirectionalMovement.js",
            "line": 397,
            "description": "Changes the velocity of the Entity when in motion.",
            "itemtype": "method",
            "name": "'accelerate'",
            "params": [
                {
                    "name": "velocity",
                    "description": "The magnitude or Vector to multiply the current velocity by.",
                    "type": "Number|platypus.Vector"
                }
            ],
            "class": "platypus.components.LogicDirectionalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 16,
            "description": "Sets the z-order of the item while being dragged.",
            "itemtype": "property",
            "name": "dragZ",
            "type": "Number",
            "default": "10000",
            "since": "0.8.3",
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 26,
            "description": "Sets whether a click-move should start the dragging behavior in addition to click-drag. This value is ignored for mobile devices.",
            "itemtype": "property",
            "name": "stickyClick",
            "type": "Boolean",
            "default": "false",
            "since": "0.8.3",
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 56,
            "description": "This component listens for added components to determine whether it should check for collision.",
            "itemtype": "method",
            "name": "'component-added'",
            "params": [
                {
                    "name": "component",
                    "description": "Component added to entity.",
                    "type": "platypus.Component",
                    "props": [
                        {
                            "name": "type",
                            "description": "Type of component to detect whether it's a collision component.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 69,
            "description": "Updates the object's location on the handle-logic tick.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 84,
            "description": "Resolves whether the object state after we check if there are any collisions. If the object was dropped and can be dropped, it is.",
            "itemtype": "method",
            "name": "'handle-post-collision-logic'",
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 108,
            "description": "The pointerdown event fires when we're grabbing the object. Starts the drag.",
            "itemtype": "method",
            "name": "'pointerdown'",
            "params": [
                {
                    "name": "eventData",
                    "description": "The event data.",
                    "type": "platypus.Data"
                }
            ],
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 133,
            "description": "The pressup event fires when we're trying to drop the object.",
            "itemtype": "method",
            "name": "'pressup'",
            "params": [
                {
                    "name": "eventData",
                    "description": "The event data.",
                    "type": "platypus.Data"
                }
            ],
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 147,
            "description": "The pointermove event tells us when we're dragging a \"stickyClick\" object.",
            "itemtype": "method",
            "name": "'pointermove'",
            "params": [
                {
                    "name": "eventData",
                    "description": "The event data.",
                    "type": "platypus.Data"
                }
            ],
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 163,
            "description": "The pressmove event tells us when we're dragging the object.",
            "itemtype": "method",
            "name": "'pressmove'",
            "params": [
                {
                    "name": "eventData",
                    "description": "The event data.",
                    "type": "platypus.Data"
                }
            ],
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicDragDrop.js",
            "line": 180,
            "description": "This message comes from the collision system letting us know the object is currently in a location that it cannot be dropped.",
            "itemtype": "method",
            "name": "'no-drop'",
            "class": "platypus.components.LogicDragDrop",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicImpactLaunch.js",
            "line": 1,
            "description": "# COMPONENT **LogicImpactLaunch**\nThis component will cause the entity to move in a certain direction on colliding with another entity.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component updates its location according to its current state.\n- **impact-launch** - On receiving this message, the component causes the entity's position to change according to the preset behavior.\n  - @param collisionInfo.x (number) - Either 1,0, or -1. 1 if we're colliding with an object on our right. -1 if on our left. 0 if not at all.\n  - @param collisionInfo.y (number) - Either 1,0, or -1. 1 if we're colliding with an object on our bottom. -1 if on our top. 0 if not at all.\n- **hit-solid** - On receiving this message, the component discontinues its impact-launch behavior.\n  - @param collisionInfo.y (number) - Either 1,0, or -1. If colliding below, impact-launch behavior ceases.\n\n## JSON Definition:\n    {\n      \"type\": \"LogicImpactLaunch\",\n      \n      \"state\": \"launching\",\n      // Optional: This sets the state of the entity while it's being launched. Defaults to \"stunned\".\n      \n      \"accelerationX\": 5,\n      \"accelerationY\": 5,\n      // Optional: acceleration entity should have in world units while being launched. Defaults to -0.2 for x and -0.6 for y.\n      \n      \"flipX\": true,\n      \"flipY\": true\n      // Optional: whether the directions of acceleration should flip according to the direction of the collision. Defaults to false for y and true for x.\n    }",
            "class": "platypus.components.LogicPortable",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicPacingPlatform.js",
            "line": 1,
            "description": "# COMPONENT **LogicPacingPlatform**\nThis component changes the (x, y) position of an object according to its speed and heading and alternates back and forth. This is useful for in-place moving platforms.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component updates its location according to its current state.\n  - @param message.delta - To determine how far to move the entity, the component checks the length of the tick.\n\n## JSON Definition:\n    {\n      \"type\": \"LogicDirectionalMovement\",\n      \n      \"angle\": 3.14,\n      // Optional. Defines the angle of movement in radians. Defaults to 0 (horizontal, starts moving right).\n      \n      \"distance\": 440,\n      // Optional. Declares distance in world units that the entity should move back and forth across. Defaults to 128.\n      \n      \"period\": 6000,\n      // Optional. Sets the time in milliseconds that the entity should take to make a complete movement cycle. Defaults to 4 seconds (4000).\n      \n      \"startPos\": 0\n      // Optional. Position in the cycle that the movement should begin. Defaults in the middle at 0; PI/2 and -PI/2 will put you at the extremes.\n    }",
            "class": "platypus.components.LogicPortable",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicPortable.js",
            "line": 15,
            "description": "This is an object specifying the directions that this portable entity can be carried on. Default is {down:true}, but \"up\", \"down\", \"left\", and/or \"right\" can be specified as object properties set to `true`.",
            "itemtype": "property",
            "name": "portableDirections",
            "type": "Object",
            "default": "{\"down\": true}",
            "class": "platypus.components.LogicPortable",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicPortable.js",
            "line": 33,
            "description": "On receiving this message, this component triggers 'carry-me' or 'release-me' if its connection to a carrying entity has changed.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "class": "platypus.components.LogicPortable",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicPortable.js",
            "line": 47,
            "description": "This message is triggered on a potential carrying peer, notifying the peer that this entity is portable.",
            "itemtype": "event",
            "name": "'carry-me'",
            "params": [
                {
                    "name": "message.entity",
                    "description": "This entity, requesting to be carried.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.LogicPortable",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicPortable.js",
            "line": 59,
            "description": "This message is triggered on the current carrier, notifying them to release this entity.",
            "itemtype": "event",
            "name": "'release-me'",
            "params": [
                {
                    "name": "message.entity",
                    "description": "This entity, requesting to be released.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.LogicPortable",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicPortable.js",
            "line": 71,
            "description": "On receiving this message, this component determines whether it is hitting its carrier or another entity. If it is hitting a new carrier, it will broadcast 'carry-me' on the next game step.",
            "itemtype": "method",
            "name": "'hit-solid'",
            "params": [
                {
                    "name": "collisionInfo.entity",
                    "description": "The entity with which the collision occurred.",
                    "type": "platypus.Entity"
                },
                {
                    "name": "collisionInfo.x",
                    "description": "-1, 0, or 1 indicating on which side of this entity the collision occurred: left, neither, or right respectively.",
                    "type": "Number"
                },
                {
                    "name": "collisionInfo.y",
                    "description": "-1, 0, or 1 indicating on which side of this entity the collision occurred: top, neither, or bottom respectively.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicPortable",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicPortable.js",
            "line": 91,
            "description": "On receiving this message, this component immediately triggers 'release-me' on its owner's carrier.",
            "itemtype": "method",
            "name": "'force-release'",
            "since": "0.11.2",
            "class": "platypus.components.LogicPortable",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicPortal.js",
            "line": 1,
            "description": "# COMPONENT **LogicPortal**\nA component which changes the scene when activated. When the portal receives an occupied message it sends the entity in that message notifying it. This message is meant to give the entity a chance to activate the portal in the manner it wants. The portal can also be activated by simply telling it to activate.\n\n## Dependencies\n- [[HandlerLogic]] (on entity's parent) - This component listens for a \"handle-logic\" message it then checks to see if it should change the scene if the portal is activated.\n- [[SceneChanger]] (on entity) - This component listens for the \"new-scene\" message that the LogicPortal sends and actually handles the scene changing.\n- [[CollisionBasic]] (on entity) - Not required, but if we want the 'occupied-portal' call to fire on collision you'll need to have a CollisionBasic component on the portal.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - Checks to see if we should change scene if the portal is activated.\n- **occupied-portal** - This message takes an entity and then sends the entity a 'portal-waiting' message. The idea behind this was that you could use it with collision. When an entity gets in front of the portal the collision sends this message, we then tell the entity that collided to do whatever it needs and then it calls back to activate the portal.\n  - @param message.entity (entity Object) - The entity that will receive the 'portal-waiting' message.\n- **activate-portal** - This message turns the portal on. The next 'handle-logic' call will cause a change of scene.\n\n### Local Broadcasts:\n- **new-scene** - Calls the 'SceneChanger' component to tell it to change scenes.\n  - @param object.destination (string) - The id of the scene that we want to go to.\n\n### Peer Broadcasts:\n- **portal-waiting** - Informs another object that the portal is waiting on it to send the activate message.\n  - @param entity - This is the portal entity. To be used so that the object can communicate with it directly.\n\n## JSON Definition\n    {\n      \"type\": \"name-of-component\",\n      \"destination\" : \"level-2\"\n      //Required - The destination scene to which the portal will take us. In most cases this will come into the portal from Tiled where you'll set a property on the portal you place.\n    }",
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicPushable.js",
            "line": 1,
            "description": "# COMPONENT **LogicPushable**\nA component that enables an entity to be pushed.\n\n## Dependencies\n- [[HandlerLogic]] (on entity's parent) - This component listens for a \"handle-logic\" message. It then moves the entity if it's being pushed.\n- [[CollisionBasic]] (on entity) - This component listens for messages from the CollisionBasic component. In particular 'hit-solid' and 'push-entity' are coming from collision.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - Checks to see if we're being pushed. If so, we get pushed. Then resets values.\n  - @param resp.delta (number) - The time since the last tick.\n- **push-entity** - Received when we collide with an object that can push us. We resolve which side we're colliding on and set up the currentPushX and currentPushY values so we'll move on the handle-logic call.\n  - @param collisionInfo.x (number) - Either 1,0, or -1. 1 if we're colliding with an object on our right. -1 if on our left. 0 if not at all.\n  - @param collisionInfo.y (number) - Either 1,0, or -1. 1 if we're colliding with an object on our bottom. -1 if on our top. 0 if not at all.\n- **hit-solid** - Called when the entity collides with a solid object. Stops the object from being pushed further in that direction.\n  - @param collisionInfo.x (number) - Either 1,0, or -1. 1 if we're colliding with an object on our right. -1 if on our left. 0 if not at all.\n  - @param collisionInfo.y (number) - Either 1,0, or -1. 1 if we're colliding with an object on our bottom. -1 if on our top. 0 if not at all.\n\n## JSON Definition\n    {\n      \"type\": \"LogicPushable\",\n       \"xPush\" : .01,\n      //Optional - The distance per millisecond this object can be pushed in x. Defaults to .01.\n      \"yPush\" : .01,\n      //Optional - The distance per millisecond this object can be pushed in y. Defaults to .01.\n      \"push\" : .01\n      //Optional - The distance per millisecond this object can be pushed in x and y. Overwritten by the more specific values xPush and yPush. Defaults to .01.\n    }",
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRebounder.js",
            "line": 1,
            "description": "# COMPONENT **LogicRebounder**\nThis component works with `CollisionBasic` to cause entities to bounce away on solid collisions.\n\n## Dependencies\n- [[CollisionBasic]] - Relies on collision messages to perform rebounding movement.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On receiving this message, `LogicRebounder` clears its stored collision information.\n- **hit-static** - On receiving this message, `LogicRebounder` rebounds.\n  - @param message.direction (2d vector) - This is the direction in which the collision occurred, tangental to the impact interface.\n- **hit-non-static** - On receiving this message, `LogicRebounder` rebounds.\n  - @param message.direction (2d vector) - This is the direction in which the collision occurred, tangental to the impact interface.\n  - @param message.entity ([[entity]]) - This is the entity with which this entity is colliding.\n- **share-velocity** - On receiving this message, `LogicRebounder` stores collision information.\n  - @param entity ([[entity]]) - This is the entity with which this entity is colliding.\n\n### Peer Broadcasts:\n- **share-velocity** - This component triggers this message to prevent double collision calls.\n  - @param entity ([[entity]]) - This entity.\n\n## JSON Definition\n    {\n      \"type\": \"LogicRebounder\",\n      \n      \"mass\": 12,\n      // Optional. Relative size of the entity. Defaults to 1.\n      \n      \"elasticity\": 0.4\n      // Optional. Bounciness of the entity. Defaults to 0.8.\n    }\n\nRequires: [\"../Vector.js\"]",
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRegionSpawner.js",
            "line": 1,
            "description": "# COMPONENT **LogicRegionSpawner**\nThis component spawns new entities within a given area at set intervals.\n\n## Dependencies\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to determine whether to spawn another entity.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component determines whether to spawn another entity.\n  - @param message.delta - To determine whether to spawn, the component keeps a running count of tick lengths.\n\n## JSON Definition\n    {\n      \"type\": \"LogicRegionSpawner\",\n      // List all additional parameters and their possible values here.\n      \n      \"spawn\": \"teddy-bear\",\n      // Required. String identifying the type of entity to spawn.\n      \n      \"interval\": 30000,\n      // Optional. Time in milliseconds between spawning an entity. Defaults to 1000.\n      \n      \"regions\": {\n      // If spawning entity covers a large area, the spawned entities can be randomly spawned over a regional grid, so that the whole area gets a somewhat uniform coverage of spawned entities\n\n        \"width\": 4000,\n        \"height\": 5000,\n        // Optional. Dimensions of a spawning region in world units. Defaults to entity's dimensions. The entity's dimensions are sliced into chunks of this size for spawn distribution.\n      }\n    }",
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 25,
            "description": "Defines the distance in world units that the entity should be moved per millisecond.",
            "itemtype": "property",
            "name": "speed",
            "type": "Number",
            "default": "0.3",
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 34,
            "description": "Radian orientation that entity should begin in. Defaults to 0 (facing right).",
            "itemtype": "property",
            "name": "angle",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 43,
            "description": "Unit in radians that the angle should change per millisecond.",
            "itemtype": "property",
            "name": "degree",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 70,
            "description": "On receiving this event, the component updates its location according to its current state.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "params": [
                {
                    "name": "tick.delta",
                    "description": "To determine how far to move the entity, the component checks the length of the tick.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 102,
            "description": "This rotates the entity by a delta in radians.",
            "itemtype": "method",
            "name": "'rotate'",
            "params": [
                {
                    "name": "angleDelta",
                    "description": "The change in angle.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 112,
            "description": "On receiving this event, the entity turns right.",
            "itemtype": "method",
            "name": "'turn-right'",
            "params": [
                {
                    "name": "state.pressed",
                    "description": "If `state` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new orientation.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 126,
            "description": "On receiving this event, the entity turns left.",
            "itemtype": "method",
            "name": "'turn-left'",
            "params": [
                {
                    "name": "state.pressed",
                    "description": "If `state` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new orientation.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 140,
            "description": "On receiving this event, the entity goes forward.",
            "itemtype": "method",
            "name": "'go-forward'",
            "params": [
                {
                    "name": "state.pressed",
                    "description": "If `state` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new orientation.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 155,
            "description": "On receiving this event, the entity goes backward.",
            "itemtype": "method",
            "name": "'go-backward'",
            "params": [
                {
                    "name": "state.pressed",
                    "description": "If `state` is included, the component checks the value of `pressed`: true causes movement in the triggered direction, false turns off movement in that direction. Note that if no message is included, the only way to stop movement in a particular direction is to trigger `stop` on the entity before progressing in a new orientation.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 170,
            "description": "Stops rotational and linear motion until movement messages are again received.",
            "itemtype": "method",
            "name": "'stop'",
            "params": [
                {
                    "name": "state.pressed",
                    "description": "If `state` is included, the component checks the value of `pressed`: a value of false will not stop the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 184,
            "description": "Stops linear motion until movement messages are again received.",
            "itemtype": "method",
            "name": "'stop-moving'",
            "params": [
                {
                    "name": "state.pressed",
                    "description": "If `state` is included, the component checks the value of `pressed`: a value of false will not stop the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicRotationalMovement.js",
            "line": 196,
            "description": "Stops rotational motion until movement messages are again received.",
            "itemtype": "method",
            "name": "'stop-turning'",
            "params": [
                {
                    "name": "state.pressed",
                    "description": "If `state` is included, the component checks the value of `pressed`: a value of false will not stop the entity.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "platypus.components.LogicRotationalMovement",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicSpawner.js",
            "line": 1,
            "description": "# COMPONENT **LogicSpawner**\nThis component creates an entity and propels it away. This is useful for casting, firing, tossing, and related behaviors.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to determine whether it should be spawning or not.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component checks its current state to decide whether to spawn entities.\n- **spawn** - creates an entity on the following tick message.\n  - @param message.pressed (boolean) - Optional. If `message` is included, the component checks the value of `pressed`: false results in no entities being created. Is this primarily for controller input.\n\n## JSON Definition\n    {\n      \"type\": \"LogicSpawner\"\n      // List all additional parameters and their possible values here.\n\n      \"spawneeClass\": \"wet-noodle\",\n      // Required: string identifying the type of entity to create.\n      \n      \"state\": \"tossing\",\n      // Optional. The entity state that should be true while entities are being created. Defaults to \"firing\".\n      \n      \"speed\": 4,\n      // Optional. The velocity with which the entity should start. Initial direction is determined by this entity's facing states (\"top\", \"right\", etc).\n      \n      \"offsetX\": 45,\n      \"offsetY\": -20,\n      // Optional. Location relative to the entity where the should be located once created. Defaults to (0, 0).\n    }",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicStateMachine.js",
            "line": 1,
            "description": "# COMPONENT **LogicStateMachine**\nThis component is a general purpose state-machine for an entity, taking in various message inputs to determine the entity's state and triggering messages as necessary when a certain state occurs or several state combinations are in place.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component checks sustained inputs for changes in state.\n- **update-state** - Updates the entity's state according to this message's state information.\n  - @param message (object) - This is an object of key/value pairs where keys are states and the values are booleans to turn on and off states.\n- **state-changed** - Updates the entity's state according to this message's state information, and broadcasts any applicable messages.\n  - @param message (object) - This is an object of key/value pairs where keys are states and the values are booleans to turn on and off states.\n- **[input messages]** - This component listens for messages as determined by the JSON settings.\n\n### Local Broadcasts:\n- **[output messages]** - This component triggers output messages as determined by the JSON settings.\n\n## JSON Definition\n    {\n      \"type\": \"LogicStateMachine\",\n      \n      \"inputs\":{\n      // This is a list of messages that this component should listen for to change states.\n      \n        \"smell-toast\":{\n        // If the entity triggers \"smell-toast\", this component will change the state of the entity as follows:\n        \n          \"smelling-food\": true,\n          \"smelling-nothing\": false\n        },\n        \n        \"go-to-store\":{\n          \"at-store\": true\n        }\n      },\n      \n      \"sustained-inputs\":{\n      // These are messages that must be triggered every tick for the state to remain true: if not, they become false.\n        \"near-grover\": \"smelling-trash\"\n      }\n    }",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicStateMachine.js",
            "line": 161,
            "description": "This is the list of events containing key/value pairs that describe state changes to make for the given event.\n\n    {\n        \"smell-toast\": {\n            \"smelling-food\": true,\n            \"smelling-nothing\": false\n        },\n        \"go-to-store\": {\n            \"at-store\": true\n        }\n    }",
            "itemtype": "property",
            "name": "inputs",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicStateMachine.js",
            "line": 180,
            "description": "These are messages that should be triggered when certain conditions are met. The messages are only triggered the instant the condition is met, until the conditions are no longer met and then once again met. Example:\n\n    {\n        \"smelling-food\": { // Keys map to states, and if true, the value of the key is processed. In this case, the value of the \"smelling-food\" key is another object of key/value pairs, giving us another layer of checks.\n            \"!smelling-trash\": \"time-to-eat\", // This key is an inverse check, meaning that the \"smelling-trash\" state of the entity must be false to continue along this path. This time the value is a string, so the string \"time-to-eat\" is treated as a message to be broadcast if the entity is both \"smelling-food\" and not \"smelling-trash\".\n            \"true\": \"belly-rumble\" // In some cases, a message should be triggered for a set of states, while still doing deeper state checks like above. \"true\" will always handle the next layer of values if the parent key was true.\n        },\n        \"smelling-trash\": \"feeling-sick\" // Multiple states can be handled to multiple depths, like a list of if () statements\n        \"!smelling-nothing\": {\n            \"!smelling-trash\":{\n                \"!at-store\": \"go-to-store\", // Note that the \"go-to-store\" message will change this entity's state to \"at-store\" according to \"inputs\" above, but LogicStateMachine uses a cache of states when broadcasting output messages, so the next section will not be processed until the next state check.\n                \"at-store\":{\n                    \"have-money\": \"buy-more-food\",\n                    \"!have-money\": \"buy-less-food\"\n                }\n            }\n        }\n    }",
            "itemtype": "property",
            "name": "outputs",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicSwitch.js",
            "line": 1,
            "description": "# COMPONENT **LogicSwitch**\nThis component serves as a switch in the game world, typically tied to collision events such that this entity changes state when another entity collides or passed over.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its state.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component determines its state and triggers messages accordingly.\n- **switch-pressed** - Causes the switch to be in a pressed state.\n\n### Local Broadcasts:\n- **switch-on** - This message is triggered when the switch has just been pressed.\n- **switch-off** - This message is triggered when the switch has just been released.\n- **initial-press** - This message is triggered the first time the switch is pressed. This occurs before the \"switch-on\" message is triggered.\n\n## JSON Definition:\n    {\n      \"type\": \"LogicSwitch\",\n      \n      \"sticky\": true\n      // Optional. Whether a pressed switch should stay pressed once collision messages cease. Defaults to `false`.\n    }",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicTeleportee.js",
            "line": 1,
            "description": "# COMPONENT **LogicTeleportee**\nThis component causes an entity to teleport when receiving a teleport message.\n\n## Dependencies:\n- [[CollisionBasic]] (on entity) - This component triggers \"relocate-entity\" to perform teleport, for which \"CollisionBasic\" listens.\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component updates its location according to its current state.\n- **teleport** - Teleports the entity to its set destination.\n- **set-destination** - Sets the destination to teleport to in world coordinates.\n  - @param message.x, message.y (number) - The position in world coordinates to set the teleport destination to.\n- **hit-telepoint** - Sets the destination to the colliding entity's coordinates: useful for checkpoint behavior.\n  - @param message ([[Entity]]) - The entity whose coordinates will be the teleport destination.\n\n### Local Broadcasts:\n- **relocate-entity** - Broadcasts the new location for the entity.\n  - @param message.x, message.y (number) - The position in world coordinates to set the teleport destination to.\n- **teleport-complete** - Triggered once the entity has been moved to the new location.\n\n## JSON Definition\n    {\n      \"type\": \"LogicTeleportee\"\n    }",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicTeleporter.js",
            "line": 1,
            "description": "# COMPONENT **LogicTeleporter**\nThis component listens for redirected collision messages and fires a message on the colliding entity to specify where the colliding entity should relocate itself.\n\n## Dependencies:\n- [[Collision-Basic]] (on entity) - This component listens for collision messages on the entity.\n- [[Entity-Container]] (on entity's parent) - This component listens for new peer entities being added on its parent to find its teleport destination.\n\n## Messages\n\n### Listens for:\n- **peer-entity-added** - This teleporter listens as other entities are added so it can recognize the entity it should teleport colliding objects to.\n  - @param message (object) - expects an entity as the message object in order to determine whether it is the requested teleportation destination.\n- **teleport-entity** - On receiving this message, the component will fire `teleport` on the colliding entity, sending this.destination. The colliding entity must handle the `teleport` message and relocate itself.\n  - @param message.x (integer) - uses `x` to determine if collision occurred on the left (-1) or right (1) of this entity.\n  - @param message.y (integer) - uses `y` to determine if collision occurred on the top (-1) or bottom (1) of this entity.\n  - @param message.entity (object) - triggers a `teleport` message on `entity`.\n\n### Peer Broadcasts:\n- **teleport** - On receiving a `teleport-entity` message, if the colliding entity is colliding on the teleporter's facing side, this message is triggered on the colliding entity.\n  - @param message (object) - sends the destination entity as the message object, the x and y coordinates being the most important information for the listening entity.\n\n## JSON Definition:\n    {\n      \"type\": \"LogicTeleporter\",\n      \n      \"facing\": \"up\",\n      // Optional: \"up\", \"down\", \"left\", or \"right\". Will only trigger \"teleport\" if colliding entity collides on the facing side of this entity. If nothing is specified, all collisions fire a \"teleport\" message on the colliding entity.\n      \n      \"teleportId\": \"Destination entity's linkId property\"\n      // Required: String that matches the \"linkId\" property of the destination entity. This destination entity is passed on a \"teleport\" message so teleporting entity knows where to relocate.\n    }",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicTimer.js",
            "line": 1,
            "description": "# COMPONENT **LogicTimer**\nA timer that can used to trigger events. The timer can increment and decrement. It can be an interval timer, going off over and over. Has a max time which it will not exceed by default this is 1 hour.\n\n## Dependencies\n- [[Handler-Logic]] (on entity's parent) - This component listens for a \"handle-logic\" message to update the timer.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - Handles the update for the timer. Increments or decrements the current time. If it's hit the max it stops the timer at the max. If it hits the alarm it sets it off. Sends an update message indicating the timer's current time for other components to use.\n  - @param data.delta (number) - The time passed since the last tick.\n- **set** - Set the time.\n  - @param data.time (number) - The new value for the time.\n- **start** - Start the timer counting.\n- **stop** - Stop the timer counting.\n\n### Local Broadcasts:\n- **[alarm message from definition]** - The definition.alarm value from the JSON definition is used as the message id. It's sent when the alarm goes off.\n- **[update message from definition]** - The definition.update value from the JSON definition is used as the message id. It's sent every 'handle-logic' tick.\n  - @param message.time (number) - The current time value for the timer.\n\n## JSON Definition\n    {\n      \"type\": \"LogicTimer\",\n      \"time\" : 0,\n      //Optional - The starting time for the timer. Defaults to 0.\n      \"alarmTime\" : 10000,\n      //Optional - The time when the alarm will trigger the alarm message. Defaults to undefined, which never triggers the alarm.\n      \"isInterval\" : false,\n      //Optional - Whether or not the alarm fires at intervals of the alarmTime. Defaults to false.\n      \"alarmMessage\" : \"ding\",\n      //Optional - The message sent when the alarm goes off. Defaults to an empty string.\n      \"updateMessage\" : \"\",\n      //Optional - The message sent when the timer updates. Defaults to an empty string.\n      \"on\" : true,\n      //Optional - Whether the alarm starts on. Defaults to true.\n      \"isIncrementing\" : true,\n      //Optional - Whether the timer is incrementing or decrementing. If the value is false it is decrementing. Defaults to true.\n      \"maxTime\" : 3600000\n      //Optional - The max value, positive or negative, that the timer will count to. At which it stops counting. Default to 3600000 which equals an hour.\n    }",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 17,
            "description": "Velocity at which the entity should travel while racing.",
            "itemtype": "property",
            "name": "speed",
            "type": "Number",
            "default": "0.3",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 26,
            "description": "Time in milliseconds that entity will race before coming to a stop.",
            "itemtype": "property",
            "name": "raceTime",
            "type": "Number",
            "default": "5000",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 35,
            "description": "Time in milliseconds that entity needs to receive wind-up calls before racing can begin.",
            "itemtype": "property",
            "name": "windTime",
            "type": "Number",
            "default": "500",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 63,
            "description": "On a `tick` logic message, the component updates its charging counter if necessary.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "params": [
                {
                    "name": "message.delta",
                    "description": "To determine how much to charge, the component checks the length of the tick.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 74,
            "description": "This event is triggered when winding is finished and the entity begins racing.",
            "itemtype": "event",
            "name": "'racing'",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 88,
            "description": "This event is triggered when the entity stops racing.",
            "itemtype": "event",
            "name": "'stopped-racing'",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 100,
            "description": "This event is triggered as the entity winds up.",
            "itemtype": "event",
            "name": "'winding'",
            "params": [
                {
                    "name": "fraction",
                    "description": "The amount of progress that has been made from 0 to 1.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 113,
            "description": "This event is triggered when the entity stops winding.",
            "itemtype": "event",
            "name": "'stopped-winding'",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 127,
            "description": "Causes the entity to stop racing.",
            "itemtype": "method",
            "name": "'stop-racing'",
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 137,
            "description": "Causes the entity to wind up for a race.",
            "itemtype": "method",
            "name": "'wind-up'",
            "params": [
                {
                    "name": "message.pressed",
                    "description": "If `message` is included, the component checks the value of `pressed`: `false` causes winding to stop.",
                    "type": "Boolean"
                }
            ],
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 149,
            "description": "On receiving this message, the entity stops racing.",
            "itemtype": "method",
            "name": "'hit-solid'",
            "params": [
                {
                    "name": "collision.x",
                    "description": "Either 1,0, or -1. 1 if we're colliding with an object on our right. -1 if on our left. 0 if not at all.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\LogicWindUpRacer.js",
            "line": 160,
            "description": "This message is triggered if the entity collides while racing.",
            "itemtype": "event",
            "name": "'blocked'",
            "params": [
                {
                    "name": "collision",
                    "description": "Collision information from the entity or tile that blocked movement.",
                    "type": "platypus.CollisionData"
                }
            ],
            "class": "platypus.components.LogicWindUpRacer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 74,
            "description": "Whether this motion should automatically re-orient when the entity re-orients.",
            "itemtype": "property",
            "name": "orient",
            "type": "boolean",
            "default": "true",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 83,
            "description": "A vector, Array, or number specifying the acceleration of the motion. Numbers apply magnitude along the x-axis. Arrays map to [x, y, z] on the vector.",
            "itemtype": "property",
            "name": "acceleration",
            "type": "platypus.Vector|Array|number",
            "default": "Vector(0, 0, 0)",
            "since": "0.6.8",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 93,
            "description": "Whether this motion should apply acceleration to the entity. Defaults to `true` unless an initial acceleration is left unset.",
            "itemtype": "property",
            "name": "activeAcceleration",
            "type": "boolean",
            "default": "true",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 102,
            "description": "Whether this motion should apply acceleration to the entity.",
            "itemtype": "property",
            "name": "activeVelocity",
            "type": "boolean",
            "default": "true",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 111,
            "description": "This is the highest magnitude allowed for the motion vector.",
            "itemtype": "property",
            "name": "maxMagnitude",
            "type": "number",
            "default": "Infinity",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 120,
            "description": "When this state on the entity changes, this motion's active state is changed to match. If an \"event\" property is also set on this component, both the event and the state must be true for the motion to be active.",
            "itemtype": "property",
            "name": "controlState",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 129,
            "description": "If instant or instantState are set, the motion is only triggered for a single step and must be re-triggered to activate again. When the instantState on the entity becomes `true`, this motion's active state is changed to match. If an \"instantState\" property is also set on this component, both the event and the state must be true for the motion to be active.",
            "itemtype": "property",
            "name": "instant",
            "type": "Boolean",
            "default": "false",
            "since": "0.6.7",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 139,
            "description": "If instant or instantState are set, the motion is only triggered for a single step and must be re-triggered to activate again. When the instantState on the entity becomes `true`, this motion's active state is changed to match. If an \"instant\" property is also set on this component, both the event and the state must be true for the motion to be active. If \"event\" or \"controlState\" are also defined, they must also be `true` to trigger an instant motion on the entity.",
            "itemtype": "property",
            "name": "instantState",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 148,
            "description": "If instantState is set, this event is triggered when the intance of motion occurs on the entity.",
            "itemtype": "property",
            "name": "instantSuccess",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 157,
            "description": "This determines if setting active to `false` (via the control event or state) should dampen velocity. This is a ratio applied to the vector magnitude between 0 and 1. This is useful for events like jumping where a longer keypress should jump farther than a shorter keypress.",
            "itemtype": "property",
            "name": "instantDecay",
            "type": "number",
            "default": "null",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 166,
            "description": "A vector, Array, or number specifying the direction and magnitude of the motion. Numbers apply magnitude along the x-axis. Arrays map to [x, y, z] on the vector.",
            "itemtype": "property",
            "name": "velocity",
            "type": "platypus.Vector|Array|number",
            "default": "Vector(0, 0, 0)",
            "since": "0.6.8",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 213,
            "description": "This event controls whether this velocity is active or inactive.",
            "itemtype": "method",
            "name": "'control-velocity'",
            "params": [
                {
                    "name": "control",
                    "description": "If `true`, this motion becomes active. If `false` or `{pressed: false}`, the motion becomes inactive.",
                    "type": "Object|boolean"
                }
            ],
            "since": "0.6.8",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 224,
            "description": "This event sets the velocity to inactive.",
            "itemtype": "method",
            "name": "'stop-velocity'",
            "since": "0.6.8",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 234,
            "description": "This event sets the velocity to active.",
            "itemtype": "method",
            "name": "'start-velocity'",
            "since": "0.6.8",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 244,
            "description": "This event controls whether the acceleration is active or inactive.",
            "itemtype": "method",
            "name": "'control-acceleration'",
            "params": [
                {
                    "name": "control",
                    "description": "If `true`, this motion becomes active. If `false` or `{pressed: false}`, the motion becomes inactive.",
                    "type": "Object|boolean"
                }
            ],
            "since": "0.6.8",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 255,
            "description": "This event sets the acceleration to inactive.",
            "itemtype": "method",
            "name": "'stop-acceleration'",
            "since": "0.6.8",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 265,
            "description": "This event sets the acceleration to active.",
            "itemtype": "method",
            "name": "'start-acceleration'",
            "since": "0.6.8",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 275,
            "description": "This event triggers an instant motion.",
            "itemtype": "method",
            "name": "'instant-motion'",
            "params": [
                {
                    "name": "control",
                    "description": "If `true`, this motion becomes active. If `false` or `{triggered: false}`, the motion becomes inactive.",
                    "type": "Object|boolean"
                }
            ],
            "since": "0.6.7",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 286,
            "description": "This event triggers the beginning of an instant motion.",
            "itemtype": "method",
            "name": "'instant-begin'",
            "since": "0.6.7",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 296,
            "description": "This event triggers the end of an instant motion.",
            "itemtype": "method",
            "name": "'instant-end'",
            "since": "0.6.7",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Motion.js",
            "line": 306,
            "description": "This event modifies the properties of this Motion.",
            "itemtype": "method",
            "name": "'set-motion'",
            "params": [
                {
                    "name": "motion",
                    "description": "A list of key/value pairs corresponding to motion values.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "maxMagnitude",
                            "description": "A value describing the maximum velocity or acceleration the motion vector can exert on the Entity.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "since": "0.6.8",
            "class": "platypus.components.Motion",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 68,
            "itemtype": "property",
            "name": "ground",
            "type": "Array|Vector",
            "default": "Vector(0, 1)",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 78,
            "description": "A list of key/value pairs describing vectors or vector-like objects describing acceleration and velocity on the entity. See the [\"Motion\"](\"Motion\"%20Component.html) component for properties.",
            "itemtype": "property",
            "name": "movers",
            "type": "Array",
            "default": "[]",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 87,
            "description": "If specified, the property adds gravity motion to the entity.",
            "itemtype": "property",
            "name": "gravity",
            "type": "number|Array|Vector",
            "default": ": 0",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 96,
            "description": "If specified, the property adds jumping motion to the entity.",
            "itemtype": "property",
            "name": "jump",
            "type": "number|Array|Vector",
            "default": ": 0",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 105,
            "description": "If specified, the property adds velocity to the entity.",
            "itemtype": "property",
            "name": "speed",
            "type": "number|Array|Vector",
            "default": ": 0",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 114,
            "description": "This property determines how quickly velocity is dampened when the entity is not in a \"grounded\" state. This should be a value between 1 (no motion) and 0 (no drag).",
            "itemtype": "property",
            "name": "drag",
            "type": "number",
            "default": "0.01",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 123,
            "description": "This property determines how quickly velocity is dampened when the entity is in a \"grounded\" state. This should be a value between 1 (no motion) and 0 (no friction).",
            "itemtype": "property",
            "name": "friction",
            "type": "number",
            "default": "0.06",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 132,
            "description": "This property determines the maximum amount of velocity this entity can maintain. This can be a number or an object describing maximum velocity in a particular direction. For example:\n\n    {\n        \"up\": 8,\n        \"right\": 12,\n        \"down\": 0.4,\n        \"left\": 12\n    }",
            "itemtype": "property",
            "name": "maxMagnitude",
            "type": "number|Object",
            "default": "Infinity",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 148,
            "description": "This property determines the rate of change to new maximum amount of velocities.",
            "itemtype": "property",
            "name": "maxMagnitudeDelta",
            "type": "number",
            "default": "0",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 157,
            "description": "This property determines whether orientation changes should apply external velocities from pre-change momentum.",
            "itemtype": "property",
            "name": "reorientVelocities",
            "type": "Boolean",
            "default": "true",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 258,
            "description": "When a [\"Motion\"](\"Motion\"%20Component.html) component is added, this component adds it to its list of movers.",
            "itemtype": "method",
            "name": "'component-added'",
            "params": [
                {
                    "name": "component",
                    "description": "The motion to add as a mover on this entity.",
                    "type": "\"Motion\" Component"
                }
            ],
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 270,
            "description": "When a [\"Motion\"](\"Motion\"%20Component.html) component is removed, this component removes it from its list of movers.",
            "itemtype": "method",
            "name": "'component-removed'",
            "params": [
                {
                    "name": "component",
                    "description": "The motion to remove as a mover from this entity.",
                    "type": "\"Motion\" Component"
                }
            ],
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 287,
            "description": "This component listens for a \"load\" event before setting up its mover list.",
            "itemtype": "method",
            "name": "'load'",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 350,
            "description": "On each \"handle-movement\" event, this component moves the entity according to the list of movers on the entity.",
            "itemtype": "method",
            "name": "'handle-movement'",
            "params": [
                {
                    "name": "tick",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The amount of time in milliseconds since the last tick.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "since": "0.6.8",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 408,
            "description": "On receiving this message, this component stops all velocities along the axis of the collision direction and sets \"grounded\" to `true` if colliding with the ground.",
            "itemtype": "method",
            "name": "'hit-solid'",
            "params": [
                {
                    "name": "collisionInfo",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "direction",
                            "description": "The direction of collision from the entity's position.",
                            "type": "platypus.Vector"
                        }
                    ]
                }
            ],
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 499,
            "description": "Update mover properties.",
            "itemtype": "method",
            "name": "'set-mover'",
            "params": [
                {
                    "name": "mover",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "maxMagnitude",
                            "description": "New maximums for magnitude.",
                            "type": "Number|Object",
                            "optional": true
                        },
                        {
                            "name": "magnitude",
                            "description": "Delta for the change in maximums.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "since": "0.6.8",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 518,
            "description": "Stops all movement on the Entity.",
            "itemtype": "method",
            "name": "'pause-movment'",
            "since": "0.6.8",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 528,
            "description": "Unpauses all movement on the Entity.",
            "itemtype": "method",
            "name": "'unpause-movment'",
            "since": "0.6.8",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 538,
            "description": "Handles velocity change if velocities should not be re-oriented.",
            "itemtype": "method",
            "name": "'orientation-updated'",
            "params": [
                {
                    "name": "matrix",
                    "description": "A 3x3 matrix describing the orientation change.",
                    "type": "Array"
                }
            ],
            "since": "0.7.3",
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 574,
            "description": "This method adds a mover to the entity in the form of a [\"Motion\"](\"Motion\"%20Component.html) component definition.",
            "itemtype": "method",
            "name": "addMover",
            "params": [
                {
                    "name": "mover",
                    "description": "For motion definition properties, see the [\"Motion\"](\"Motion\"%20Component.html) component.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "motion",
                "type": "\"Motion\" Component"
            },
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Mover.js",
            "line": 587,
            "description": "This method removes a mover from the entity.",
            "itemtype": "method",
            "name": "removeMover",
            "params": [
                {
                    "name": "motion",
                    "description": "",
                    "type": "\"Motion\" Component"
                }
            ],
            "class": "platypus.components.Mover",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Node.js",
            "line": 1,
            "description": "# COMPONENT **Node**\nThis component causes an entity to be a position on a [[NodeMap]]. This component should not be confused with `NodeResident` which should be used on entities that move around on a NodeMap: `Node` simply represents a non-moving location on the NodeMap.\n  \n## JSON Definition\n    {\n      \"type\": \"NodeResident\",\n      \n      \"nodeId\": \"city-hall\",\n      // Optional. The id of the node that this entity should start on. Uses the entity's nodeId property if not set here.\n      \n      \"nodes\": ['path','sidewalk','road'],\n      // Optional. This is a list of node types that this entity can reside on. If not set, entity can reside on any type of node.\n      \n      \"shares\": ['friends','neighbors','city-council-members'],\n      // Optional. This is a list of entities that this entity can reside with on the same node. If not set, this entity cannot reside with any entities on the same node.\n      \n      \"speed\": 5,\n      // Optional. Sets the speed with which the entity moves along an edge to an adjacent node. Default is 0 (instantaneous movement).\n      \n      \"updateOrientation\": true\n      // Optional. Determines whether the entity's orientation is updated by movement across the NodeMap. Default is false.\n    }",
            "class": "platypus.components.NodeMap",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\NodeMap.js",
            "line": 98,
            "description": "An array of node definitions to create the NodeMap. A node definition can take the following form:\n\n        {\n          \"NodeId\": \"Node1\",\n          // A string or array that becomes the id of the Node. Arrays are joined using \"|\" to create the id string.\n          \"type\": \"path\",\n          // A string that determines the type of the node.\n          \"x\": 0,\n          // Sets the x axis position of the node.\n          \"y\": 0,\n          // Sets the y axis position of the node.\n          \"z\": 0,\n          // Sets the z axis position of the node.\n          \"neighbors\": {\n          // A list of key/value pairs where the keys are directions from the node and values are node ids.\n            \"west\": \"node0\",\n            \"east\": \"node2\"\n          }\n        }",
            "itemtype": "property",
            "name": "map",
            "type": "Array",
            "default": "[]",
            "class": "platypus.components.NodeMap",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\NodeMap.js",
            "line": 140,
            "description": "Expects a node definition to create a node in the NodeMap.",
            "itemtype": "method",
            "name": "'add-node'",
            "params": [
                {
                    "name": "definition",
                    "description": "Key/value pairs.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "nodeId",
                            "description": "This value becomes the id of the Node. Arrays are joined using \"|\" to create the id string.",
                            "type": "String|Array"
                        },
                        {
                            "name": "type",
                            "description": "This determines the type of the node.",
                            "type": "String"
                        },
                        {
                            "name": "x",
                            "description": "Sets the x axis position of the node.",
                            "type": "String"
                        },
                        {
                            "name": "y",
                            "description": "Sets the y axis position of the node.",
                            "type": "String"
                        },
                        {
                            "name": "z",
                            "description": "Sets the z axis position of the node.",
                            "type": "String"
                        },
                        {
                            "name": "neighbors",
                            "description": "A list of key/value pairs where the keys are directions from the node and values are node ids. For example: {\"west\": \"node12\"}.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "platypus.components.NodeMap",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\NodeMap.js",
            "line": 176,
            "description": "Checks the child entity for a nodeId and if found adds the child to the corresponding node.",
            "itemtype": "method",
            "name": "'child-entity-added'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity that may be placed on a node, or if the entity is a node it is added to the map of nodes.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.NodeMap",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\NodeMap.js",
            "line": 218,
            "description": "Gets a node by node id.",
            "itemtype": "method",
            "name": "getNode",
            "params": [
                {
                    "name": "id",
                    "description": "This id of the node to retrieve. If an array or more than one parameter is supplied, values are concatenated with \"|\" to create a single string id. Supplying a node returns the same node (useful for processing a mixed list of nodes and node ids).",
                    "type": "String|Array|Node"
                }
            ],
            "class": "platypus.components.NodeMap",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\NodeMap.js",
            "line": 246,
            "description": "Finds the closest node to a given point, with respect to any inclusion or exclusion lists.\n\nmethod getClosestNode",
            "params": [
                {
                    "name": "point",
                    "description": "A location for which a closest node is being found.",
                    "type": "platypus.Vector"
                },
                {
                    "name": "including",
                    "description": "A list of nodes to include in the search. If not set, the entire map is searched.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "excluding",
                    "description": "A list of nodes to exclude from the search.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "platypus.components.NodeMap",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\NodeResident.js",
            "line": 1,
            "description": "# COMPONENT **NodeResident**\nThis component connects an entity to its parent's [[NodeMap]]. It manages navigating the NodeMap and triggering events on the entity related to its position.\n\n## Dependencies\n- [[NodeMap]] (on entity's parent) - This component uses the `NodeMap` to determine its location and navigate to other nodes.\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component updates its location and triggers messages regarding its neighbors.\n  - @param message.delta (Number) - This component uses the current time to determine its progress along an edge if moving from node to node on the map.\n- **on-node** - Sets the entity's position to the sent node, updates its coordinates, and triggers messages regarding its neighbors if any.\n  - @param node (Node) - The node that this entity should be located on.\n- **leave-node** - Removes the entity from its current node if it's on one.\n- **goto-node** - Begins moving the entity along edges to get to sent node.\n  - @param node (Node) - The node that this entity should move to.\n- **follow** - Causes this entity to follow another entity. The leading entity must also have a `NodeResident` component and exist in the NodeMap.\n  - @param entity (Entity) - The entity that this entity should follow.\n\n### Local Broadcasts:\n- **next-to-[entity-type]** - This message is triggered when the entity is placed on a node. It will trigger on all neighboring entities, as well as on itself on behalf of neighboring entities.\n  - @param entity (Entity) - The entity that is next to the listening entity.\n- **with-[entity-type]** - This message is triggered when the entity is placed on a node. It will trigger on all entities residing on the same node, as well as on itself on behalf of all resident entities.\n  - @param entity (Entity) - The entity that is with the listening entity.\n- **left-node** - Triggered when the entity leaves a node.\n  - @param node (Node) - The node that the entity just left.\n- **[Messages specified in definition]** - When the entity is placed on a node, it checks out the type of node and triggers a message on the entity if an event is listed for the current node type.\n\n## States\n- **on-node** - This state is true when the entity is on a node.\n- **moving** - This state is true when the entity is moving from one node to another.\n- **going-[direction]** - This state is true when the entity is moving (or has just moved) in a direction (determined by the NodeMap) from one node to another.\n  \n## JSON Definition\n    {\n      \"type\": \"NodeResident\",\n      \n      \"nodeId\": \"city-hall\",\n      // Optional. The id of the node that this entity should start on. Uses the entity's nodeId property if not set here.\n      \n      \"nodes\": {\"path\": \"walking\", \"sidewalk\": \"walking\", \"road\": \"driving\"],\n      // Optional. This is a list of node types that this entity can reside on. If not set, entity can reside on any type of node.\n      \n      \"shares\": ['friends','neighbors','city-council-members'],\n      // Optional. This is a list of entities that this entity can reside with on the same node. If not set, this entity can reside with any entities on the same node.\n      \n      \"speed\": 5,\n      // Optional. Sets the speed with which the entity moves along an edge to an adjacent node. Default is 0 (instantaneous movement).\n      \n      \"updateOrientation\": true\n      // Optional. Determines whether the entity's orientation is updated by movement across the NodeMap. Default is false.\n    }",
            "class": "platypus.components.NodeResident",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\NodeResident.js",
            "line": 153,
            "description": "This describes the rate at which a node resident should progress along an edge to another node. This property is set on the entity itself and can be manipulated in real-time.",
            "itemtype": "property",
            "name": "speed",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.NodeResident",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\NodeResident.js",
            "line": 206,
            "description": "This event is triggered if the entity is placed on the map but not assigned a node. It is moved to the nearest node and \"in-location\" is triggered.",
            "itemtype": "event",
            "name": "'in-location'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity that is in location.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.NodeResident",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 110,
            "description": "The Entity's scale along the X-axis will mirror the entity's initial orientation if it is negative. This value is available via `entity.scaleX`, but is not manipulated by this component after instantiation.",
            "itemtype": "property",
            "name": "scaleX",
            "type": "number",
            "default": "1",
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 119,
            "description": "The Entity's scale along the Y-axis will flip the entity's initial orientation if it is negative. This value is available via `entity.scaleY`, but is not manipulated by this component after instantiation.",
            "itemtype": "property",
            "name": "scaleY",
            "type": "number",
            "default": "1",
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 128,
            "description": "The Entity's rotation will rotate entity's initial orientation if it is a multiple of 90 degrees. This value is available via `entity.rotation`, but is not manipulated by this component after instantiation.",
            "itemtype": "property",
            "name": "rotation",
            "type": "number",
            "default": "0",
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 137,
            "description": "The Entity's orientation is an angle in radians describing an entity's orientation around the Z-axis. This property is affected by a changing `entity.orientationMatrix` but does not itself change the orientation matrix.",
            "itemtype": "property",
            "name": "orientation",
            "type": "number",
            "default": "0",
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 146,
            "description": "The entity's orientation matrix determines the orientation of an entity and its vectors. It's a 3x3 2D Array describing an affine transformation of the entity.",
            "itemtype": "property",
            "name": "orientationMatrix",
            "type": "Array",
            "default": "3x3 identity matrix",
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 228,
            "description": "This component listens for this event prior to loading initial transformations.",
            "itemtype": "method",
            "name": "'load'",
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 261,
            "description": "On the 'handle-logic' event, this component updates any transformational tweening of the entity.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "params": [
                {
                    "name": "tick.delta",
                    "description": "Time passed since the last logic step.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 314,
            "description": "On receiving this message, any currently running orientation tweens are immediately completed to give the entity a new stable position.",
            "itemtype": "method",
            "name": "'complete-tweens'",
            "since": "0.7.1",
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 328,
            "description": "On receiving this message, any currently running orientation tweens are discarded, returning the entity to its last stable position.",
            "itemtype": "method",
            "name": "'drop-tweens'",
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 350,
            "description": "On receiving a vector via this event, the component will transform the vector using the current orientation matrix and then store the vector and continue manipulating it as the orientation matrix changes.",
            "itemtype": "method",
            "name": "'orient-vector'",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector whose orientation will be maintained.",
                    "type": "platypus.Vector"
                }
            ],
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 372,
            "description": "On receiving this message, the maintained vector is immediately dropped from the list of maintained vectors.",
            "itemtype": "method",
            "name": "'remove-vector'",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to be removed.",
                    "type": "platypus.Vector"
                }
            ],
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 387,
            "description": "This message causes the component to begin tweening the entity's orientation over a span of time into the new orientation.",
            "itemtype": "method",
            "name": "'tween-transform'",
            "params": [
                {
                    "name": "options",
                    "description": "A list of key/value pairs describing the tween options.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "matrix",
                            "description": "A transformation matrix: only required if `transform` is not provided",
                            "type": "Array"
                        },
                        {
                            "name": "transform",
                            "description": "A transformation type: only required if `matrix` is not provided.",
                            "type": "String"
                        },
                        {
                            "name": "time",
                            "description": "The time over which the tween occurs. 0 makes it instantaneous.",
                            "type": "Number"
                        },
                        {
                            "name": "anchor",
                            "description": "The anchor of the orientation change. If not provided, the owner's position is used.",
                            "type": "platypus.Vector",
                            "optional": true
                        },
                        {
                            "name": "offset",
                            "description": "If an anchor is supplied, this vector describes the entity's distance from the anchor. It defaults to the entity's current position relative to the anchor position.",
                            "type": "platypus.Vector",
                            "optional": true
                        },
                        {
                            "name": "angle",
                            "description": "Angle in radians to transform. This is only valid for rotations and is derived from the transform if not provided.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "tween",
                            "description": "A function describing the transition. Performs a linear transition by default. See CreateJS Ease for other options.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "beforeTick",
                            "description": "A function that should be processed before each tick as the tween occurs. This function should return `true`, otherwise the tween doesn't take a step.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "afterTick",
                            "description": "A function that should be processed after each tick as the tween occurs.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFinished",
                            "description": "A function that should be run once the transition is complete.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 466,
            "description": "This message performs an immediate transform of the entity by performing the transformation via a prepended matrix multiplication.",
            "itemtype": "method",
            "name": "'transform'",
            "params": [
                {
                    "name": "transform",
                    "description": "A 3x3 @D Array or a string describing a transformation.",
                    "type": "Array|String"
                }
            ],
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 476,
            "description": "This message performs an immediate transform of the entity by performing the transformation via a prepended matrix multiplication.",
            "itemtype": "method",
            "name": "'prepend-transform'",
            "params": [
                {
                    "name": "transform",
                    "description": "A 3x3 @D Array or a string describing a transformation.",
                    "type": "Array|String"
                }
            ],
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 486,
            "description": "This message performs an immediate transform of the entity by performing the transformation via an appended matrix multiplication.",
            "itemtype": "method",
            "name": "'append-transform'",
            "params": [
                {
                    "name": "transform",
                    "description": "A 3x3 @D Array or a string describing a transformation.",
                    "type": "Array|String"
                }
            ],
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 496,
            "description": "This message performs an immediate transform of the entity by returning the entity to an identity transform before performing a matrix multiplication.",
            "itemtype": "method",
            "name": "'replace-transform'",
            "params": [
                {
                    "name": "transform",
                    "description": "A 3x3 @D Array or a string describing a transformation.",
                    "type": "Array|String"
                }
            ],
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Orientation.js",
            "line": 539,
            "description": "Once a transform is complete, this event is triggered to notify the entity of the completed transformation.",
            "itemtype": "event",
            "name": "'orientation-updated'",
            "params": [
                {
                    "name": "matrix",
                    "description": "A 3x3 2D array describing the change in orientation.",
                    "type": "Array"
                }
            ],
            "class": "platypus.components.Orientation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelativePosition.js",
            "line": 19,
            "description": "This optional array sets varying properties depending on the aspect ratio of the camera. This is useful if the camera aspect ratio varies greatly and entities must be repositioned accordingly.\n\nIn this example, the entity maintains a particular horizontal location until the camera viewport becomes narrower than 2:1, at which point it maintains a particular `left` value:\n\n     \"cameraSizes\": [{\n         \"minRatio\": 2, // This block applies for wide aspect ratios until 2:1 is reached.\n         \"x\": -1226\n     }, {\n         \"minRatio\": 0, // This block applies for everything else.\n         \"left\": 130\n     }]",
            "itemtype": "property",
            "name": "cameraSizes",
            "type": "Array",
            "default": "null",
            "class": "platypus.components.RelativePosition",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelativePosition.js",
            "line": 40,
            "description": "This sets the distance in world units from the bottom of the camera's world viewport. If set, it will override the entity's y coordinate. This property is accessible on the entity as `entity.bottom`.",
            "itemtype": "property",
            "name": "bottom",
            "type": "Number",
            "default": "null",
            "class": "platypus.components.RelativePosition",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelativePosition.js",
            "line": 49,
            "description": "This sets the distance in world units from the left of the camera's world viewport. If set, it will override the entity's x coordinate. This property is accessible on the entity as `entity.left`.",
            "itemtype": "property",
            "name": "left",
            "type": "Number",
            "default": "null",
            "class": "platypus.components.RelativePosition",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelativePosition.js",
            "line": 58,
            "description": "This sets the distance in world units from the right of the camera's world viewport. If set, it will override the entity's x coordinate. This property is accessible on the entity as `entity.right`.",
            "itemtype": "property",
            "name": "right",
            "type": "Number",
            "default": "null",
            "class": "platypus.components.RelativePosition",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelativePosition.js",
            "line": 67,
            "description": "This sets the distance in world units from the top of the camera's world viewport. If set, it will override the entity's y coordinate. This property is accessible on the entity as `entity.top`.",
            "itemtype": "property",
            "name": "top",
            "type": "Number",
            "default": "null",
            "class": "platypus.components.RelativePosition",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelativePosition.js",
            "line": 76,
            "description": "This sets the `x` coordinate for the entity. It is overridden by `left` and `right` properties if supplied.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RelativePosition",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelativePosition.js",
            "line": 85,
            "description": "This sets the `y` coordinate for the entity. It is overridden by `top` and `bottom` properties if supplied.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RelativePosition",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelativePosition.js",
            "line": 105,
            "description": "This component uses location updates to reposition the entity if its bottom, left, right, or top properties have been set.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "class": "platypus.components.RelativePosition",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelativePosition.js",
            "line": 125,
            "description": "This component listens for camera updates to reposition the entity if its bottom, left, right, or top properties have been set.",
            "itemtype": "method",
            "name": "'camera-update'",
            "params": [
                {
                    "name": "camera",
                    "description": "Camera update information",
                    "type": "platypus.Data",
                    "props": [
                        {
                            "name": "viewport",
                            "description": "The bounding box describing the camera viewport location in the world.",
                            "type": "platypus.AABB"
                        }
                    ]
                }
            ],
            "since": "0.9.0",
            "class": "platypus.components.RelativePosition",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayFamily.js",
            "line": 16,
            "description": "This is an object of key/value pairs. The keys are events this component is listening for locally, the value is the event that will be broadcast to its linked entities. The value can also be an array of events to be fired on linked entities.\n\n     \"events\": {\n         \"sleeping\": \"good-night\",\n         \"awake\": [\"alarm\", \"get-up\"]\n     }",
            "itemtype": "property",
            "name": "events",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RelayFamily",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayFamily.js",
            "line": 46,
            "description": "Called when linking a new member to the family, this event accepts a list of family members from the new member and uses it to link all the family members together.",
            "itemtype": "method",
            "name": "'link-family'",
            "params": [
                {
                    "name": "links",
                    "description": "An array of entities.",
                    "type": "Array|Entities"
                }
            ],
            "class": "platypus.components.RelayFamily",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayFamily.js",
            "line": 65,
            "description": "Called when this entity spawns a new entity, this event links the newly created entity to this entity.",
            "itemtype": "method",
            "name": "'entity-created'",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to link.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.RelayFamily",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayGame.js",
            "line": 22,
            "description": "This is an object of key/value pairs. The keys are events this component is listening for locally, and the value is the event to be broadcast to the scene. The value can also be an array of events to be fired on the scene.\n\n     \"events\": {\n         \"sleeping\": \"good-night\",\n         \"awake\": [\"alarm\", \"get-up\"]\n     }",
            "itemtype": "property",
            "name": "events",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RelayGame",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayLinker.js",
            "line": 26,
            "description": "The id that defines the 'channel' the linkers are talking on. This should be matched on the entity/entities you want to talk between.",
            "itemtype": "property",
            "name": "linkId",
            "type": "String",
            "default": "'linked'",
            "class": "platypus.components.RelayLinker",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayLinker.js",
            "line": 35,
            "description": "This is an object of key/value pairs. The keys are events this component is listening for locally, the value is the event to be broadcast to its linked entities. The value can also be an array of events to be fired on linked entities.\n\n     \"events\": {\n         \"sleeping\": \"good-night\",\n         \"awake\": [\"alarm\", \"get-up\"]\n     }",
            "itemtype": "property",
            "name": "events",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RelayLinker",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayLinker.js",
            "line": 92,
            "description": "Called when the object is added to its parent, on receiving this message, the component tries to link itself with objects with the same link id.",
            "itemtype": "method",
            "name": "'load'",
            "class": "platypus.components.RelayLinker",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayLinker.js",
            "line": 107,
            "description": "On receiving this message, this component checks the linkId of the requesting entity and adds it to its list of connections if it matches.",
            "itemtype": "method",
            "name": "'link-entity'",
            "params": [
                {
                    "name": "toLink",
                    "description": "The enquiring entity.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.RelayLinker",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayLinker.js",
            "line": 126,
            "description": "Removes the requesting entity from this component's list of linked entities and no farther messages will be transmitted.",
            "itemtype": "method",
            "name": "'unlink-entity'",
            "params": [
                {
                    "name": "toUnlink",
                    "description": "The enquiring entity.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.RelayLinker",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelayParent.js",
            "line": 24,
            "description": "This is an object of key/value pairs. The keys are events this component is listening for locally, and the value is the event to be broadcast on the parent. The value can also be an array of events to be triggered on the parent.\n\n     \"events\": {\n         \"sleeping\": \"good-night\",\n         \"awake\": [\"alarm\", \"get-up\"]\n     }",
            "itemtype": "property",
            "name": "events",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RelayParent",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RelaySelf.js",
            "line": 22,
            "description": "This is an object of key/value pairs. The keys are events this component is listening for locally, the value is the new event to be broadcast on this entity. The value can also be an array of events to be fired.\n\n     \"events\": {\n         \"sleeping\": \"good-night\",\n         \"awake\": [\"alarm\", \"get-up\"]\n     }",
            "itemtype": "property",
            "name": "events",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RelaySelf",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 25,
            "description": "This event fires each time an animation completes.",
            "itemtype": "event",
            "name": "'animation-ended'",
            "params": [
                {
                    "name": "animation",
                    "description": "The id of the animation that ended.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 68,
            "description": "This sets the PixiAnimate animation to play. This is typically of the form \"library.asset\" as defined by the PixiAnimate publish settings.",
            "itemtype": "property",
            "name": "animation",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 77,
            "description": "Optional. An object containg key-value pairs that define a mapping from triggered events or entity states to the animation that should play. The list is processed from top to bottom, so the most important actions should be listed first (for example, a jumping animation might take precedence over an idle animation). If not specified, an 1-to-1 animation map is created from the list of animations in the sprite sheet definition using the animation names as the keys.\n\n    \"animationMap\":{\n        \"standing\": \"default-animation\"  // On receiving a \"standing\" event, or when this.owner.state.standing === true, the \"default\" animation will begin playing.\n        \"ground,moving\": \"walking\",  // Comma separated values have a special meaning when evaluating \"state-changed\" messages. The above example will cause the \"walking\" animation to play ONLY if the entity's state includes both \"moving\" and \"ground\" equal to true.\n        \"ground,striking\": \"swing!\", // Putting an exclamation after an animation name causes this animation to complete before going to the next animation. This is useful for animations that would look poorly if interrupted.\n        \"default\": \"default-animation\" // Optional. \"default\" is a special property that matches all states. If none of the above states are valid for the entity, it will use the default animation listed here.\n    }\n\nThis data is used to create EventRender or StateRender components on the entity if the `eventBased` or `stateBased` properties are set to `true`.",
            "itemtype": "property",
            "name": "animationMap",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 95,
            "description": "The framerate at which the animation should play.",
            "itemtype": "property",
            "name": "framerate",
            "type": "Number",
            "default": "24",
            "since": "0.10.2",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 105,
            "description": "Optional. A mask definition that determines where the image should clip. A string can also be used to create more complex shapes via the PIXI graphics API like: \"mask\": \"r(10,20,40,40).dc(30,10,12)\". Defaults to no mask or, if simply set to true, a rectangle using the entity's dimensions.\n\n \"mask\": {\n     \"x\": 10,\n     \"y\": 10,\n     \"width\": 40,\n     \"height\": 40\n },\n\n -OR-\n\n \"mask\": \"r(10,20,40,40).dc(30,10,12)\"",
            "itemtype": "property",
            "name": "mask",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 125,
            "description": "Defines whether the entity will respond to touch and click events. Setting this value will create an Interactive component on this entity with these properties. For example:\n\n \"interactive\": {\n     \"hover\": false,\n     \"hitArea\": {\n         \"x\": 10,\n         \"y\": 10,\n         \"width\": 40,\n         \"height\": 40\n     }\n }",
            "itemtype": "property",
            "name": "interactive",
            "type": "Boolean|Object",
            "default": "false",
            "since": "0.9.0",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 145,
            "description": "Optional. Whether this object is visible or not. To change the visible value dynamically set this.owner.state.visible to true or false.",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 154,
            "description": "Optional. Specifies whether this component should create an EventRender component to listen to events matching the animationMap to animate. Set this to true if the component should animate for on events. Default is `false`.",
            "itemtype": "property",
            "name": "eventBased",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 163,
            "description": "Optional. Specifies whether this component should create a StateRender component to handle changes in the entity's state that match the animationMap to animate. Set this to true if the component should animate based on `this.owner.state`. Default is `true`.",
            "itemtype": "property",
            "name": "stateBased",
            "type": "Boolean",
            "default": "true",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 172,
            "description": "Determines the x origin of the animation.",
            "itemtype": "property",
            "name": "regX",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 181,
            "description": "Determines the y origin of the animation.",
            "itemtype": "property",
            "name": "regY",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 190,
            "description": "The offset of the z-index of the sprite from the entity's z-index.",
            "itemtype": "property",
            "name": "offsetZ",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 200,
            "description": "The X scaling factor for the image.",
            "itemtype": "property",
            "name": "scaleX",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 209,
            "description": "The Y scaling factor for the image.",
            "itemtype": "property",
            "name": "scaleY",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 218,
            "description": "The x position of the entity.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 227,
            "description": "The y position of the entity.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 236,
            "description": "The z position of the entity.",
            "itemtype": "property",
            "name": "z",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 320,
            "description": "This event is triggered once the RenderSprite is ready to handle interactivity.",
            "itemtype": "event",
            "name": "'input-on'",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 354,
            "description": "Listens for this event to determine whether this sprite is visible.",
            "itemtype": "method",
            "name": "'camera-update'",
            "params": [
                {
                    "name": "camera.viewport",
                    "description": "Camera position and size.",
                    "type": "platypus.AABB"
                }
            ],
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 369,
            "description": "A setup message used to add the animation to the stage. On receiving this message, the component sets its parent container to the stage contained in the message if it doesn't already have one.",
            "itemtype": "method",
            "name": "'handle-render-load'",
            "params": [
                {
                    "name": "handlerData",
                    "description": "Data from the render handler",
                    "type": "Object",
                    "props": [
                        {
                            "name": "container",
                            "description": "The parent container.",
                            "type": "PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 382,
            "description": "The render update message updates the animation.",
            "itemtype": "method",
            "name": "'handle-render'",
            "params": [
                {
                    "name": "renderData",
                    "description": "Data from the render handler",
                    "type": "Object",
                    "props": [
                        {
                            "name": "container",
                            "description": "The parent container.",
                            "type": "PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 398,
            "description": "This event makes the animation invisible.",
            "itemtype": "method",
            "name": "'hide-animation'",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 407,
            "description": "This event makes the animation visible.",
            "itemtype": "method",
            "name": "'show-animation'",
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 416,
            "description": "Defines the mask on the animation. If no mask is specified, the mask is set to null.",
            "itemtype": "method",
            "name": "'set-mask'",
            "params": [
                {
                    "name": "mask",
                    "description": "The mask. This can specified the same way as the 'mask' parameter on the component.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 426,
            "description": "Stops the animation.",
            "itemtype": "method",
            "name": "'stop-animation'",
            "params": [
                {
                    "name": "animation",
                    "description": "The animation to show and pause. If not specified, this method simply pauses the current animation.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderAnimation.js",
            "line": 442,
            "description": "Starts the animation.",
            "itemtype": "method",
            "name": "'play-animation'",
            "params": [
                {
                    "name": "animation",
                    "description": "The animation to play. If not specified, this method simply unpauses the current animation.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "platypus.components.RenderAnimation",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 68,
            "description": "Optional. A mask definition that determines where the image should clip. A string can also be used to create more complex shapes via the PIXI graphics API like: \"mask\": \"r(10,20,40,40).dc(30,10,12)\". Defaults to no mask or, if simply set to true, a rectangle using the entity's dimensions. Note that the mask is in world coordinates by default. To make the mask local to the entity's coordinates, set `localMask` to `true` in the RenderContainer properties.\n\n \"mask\": {\n     \"x\": 10,\n     \"y\": 10,\n     \"width\": 40,\n     \"height\": 40\n },\n\n -OR-\n\n \"mask\": \"r(10,20,40,40).dc(30,10,12)\"",
            "itemtype": "property",
            "name": "mask",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 88,
            "description": "Defines whether the entity will respond to touch and click events. Setting this value will create an Interactive component on this entity with these properties. For example:\n\n \"interactive\": {\n     \"hover\": false,\n     \"hitArea\": {\n         \"x\": 10,\n         \"y\": 10,\n         \"width\": 40,\n         \"height\": 40\n     }\n }",
            "itemtype": "property",
            "name": "interactive",
            "type": "Boolean|Object",
            "default": "false",
            "since": "0.9.0",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 108,
            "description": "Optional. Whether this object can be rotated. It's rotational angle is set by setting the this.owner.rotation value on the entity.",
            "itemtype": "property",
            "name": "rotate",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 117,
            "description": "Whether this object can be mirrored over X. To mirror it over X set the this.owner.rotation value to be > 90  and < 270.",
            "itemtype": "property",
            "name": "mirror",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 126,
            "description": "Optional. Whether this object can be flipped over Y. To flip it over Y set the this.owner.rotation to be > 180.",
            "itemtype": "property",
            "name": "flip",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 135,
            "description": "Optional. Whether this object is visible or not. To change the visible value dynamically set this.owner.state.visible to true or false.",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 144,
            "description": "Optional. Whether this sprite should be cached into an entity with a `RenderTiles` component (like \"render-layer\"). The `RenderTiles` component must have its \"entityCache\" property set to `true`. Warning! This is a one-direction setting and will remove this component from the entity once the current frame has been cached.",
            "itemtype": "property",
            "name": "cache",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 153,
            "description": "Optional. Ignores the opacity of the owner.",
            "itemtype": "property",
            "name": "ignoreOpacity",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 162,
            "description": "Whether the mask should be relative to the entity's coordinates.",
            "itemtype": "property",
            "name": "localMask",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 173,
            "description": "Prevents sprite from becoming invisible out of frame and losing mouse input connection.",
            "itemtype": "property",
            "name": "dragMode",
            "type": "Boolean",
            "default": "false",
            "since": "0.8.3",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 183,
            "description": "Determines the container this entity should use for rendering. Defaults to the top-most layer.",
            "itemtype": "property",
            "name": "renderGroup",
            "type": "String",
            "default": "\"\"",
            "since": "0.11.10",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 193,
            "description": "Optional. The rotation of the sprite in degrees. All sprites on the same entity are rotated the same amount unless they ignore the rotation value by setting 'rotate' to false.",
            "itemtype": "property",
            "name": "rotation",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 202,
            "description": "Optional. The X scaling factor for the image. Defaults to 1.",
            "itemtype": "property",
            "name": "scaleX",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 211,
            "description": "Optional. The Y scaling factor for the image. Defaults to 1.",
            "itemtype": "property",
            "name": "scaleY",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 220,
            "description": "Optional. The X skew factor of the sprite. Defaults to 0.",
            "itemtype": "property",
            "name": "skewX",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 229,
            "description": "Optional. The Y skew factor for the image. Defaults to 0.",
            "itemtype": "property",
            "name": "skewY",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 238,
            "description": "Optional. The tint applied to the sprite. Tint may be specified by number or text. For example, to give the sprite a red tint, set to 0xff0000 or \"#ff0000\". Tint will be stored as a number even when set using text. Defaults to no tint.",
            "itemtype": "property",
            "name": "tint",
            "type": "Number|String",
            "default": "null",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 247,
            "description": "Optional. The x position of the entity. Defaults to 0.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 256,
            "description": "Optional. The y position of the entity. Defaults to 0.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 265,
            "description": "Optional. The z position of the entity. Defaults to 0.",
            "itemtype": "property",
            "name": "z",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 416,
            "description": "On receiving a \"cache\" event, this component triggers \"cache-sprite\" to cache its rendering into the background. This is an optimization for static images to reduce render calls.",
            "itemtype": "method",
            "name": "'cache'",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 426,
            "description": "On receiving a \"cache\" event, this component triggers \"cache-sprite\" to cache its rendering into the background. This is an optimization for static images to reduce render calls.",
            "itemtype": "event",
            "name": "'cache-sprite'",
            "params": [
                {
                    "name": "entity",
                    "description": "This component's owner.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 438,
            "description": "Listens for this event to determine whether this sprite is visible.",
            "itemtype": "method",
            "name": "'camera-update'",
            "params": [
                {
                    "name": "camera.viewport",
                    "description": "Camera position and size.",
                    "type": "platypus.AABB"
                }
            ],
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 451,
            "description": "A setup message used to add the sprite to the stage. On receiving this message, the component sets its parent container to the stage contained in the message if it doesn't already have one.",
            "itemtype": "method",
            "name": "'handle-render-load'",
            "params": [
                {
                    "name": "handlerData",
                    "description": "Data from the render handler",
                    "type": "Object",
                    "props": [
                        {
                            "name": "container",
                            "description": "The parent container.",
                            "type": "PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 465,
            "description": "The render update message updates the sprite. If a sprite doesn't have a container, it's removed.",
            "itemtype": "method",
            "name": "'handle-render'",
            "params": [
                {
                    "name": "renderData",
                    "description": "Data from the render handler",
                    "type": "Object",
                    "props": [
                        {
                            "name": "container",
                            "description": "The parent container.",
                            "type": "PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 482,
            "description": "This event makes the sprite invisible.",
            "itemtype": "method",
            "name": "'hide-sprite'",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 491,
            "description": "This event makes the sprite visible.",
            "itemtype": "method",
            "name": "'show-sprite'",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 500,
            "description": "Defines the mask on the container/sprite. If no mask is specified, the mask is set to null.",
            "itemtype": "method",
            "name": "'set-mask'",
            "params": [
                {
                    "name": "mask",
                    "description": "The mask. This can specified the same way as the 'mask' parameter on the component.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderContainer.js",
            "line": 523,
            "description": "This event is triggered once the RenderSprite is ready to handle interactivity.",
            "itemtype": "event",
            "name": "'input-on'",
            "class": "platypus.components.RenderContainer",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 46,
            "description": "The color to use to highlight an entity's AABB. For example, use `\"#ffffff\"` or `0xffffff` to set as white.",
            "itemtype": "property",
            "name": "aabbColor",
            "type": "Number|String",
            "default": "0xff88ff",
            "since": "0.11.3",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 56,
            "description": "The color to use to highlight an entity's collision shape. For example, use `\"#ffffff\"` or `0xffffff` to set as white.",
            "itemtype": "property",
            "name": "collisionColor",
            "type": "Number|String",
            "default": "0xff00ff",
            "since": "0.11.3",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 66,
            "description": "The color to use to highlight the AABB for a group of entities attached to this entity. For example, use `\"#ffffff\"` or `0xffffff` to set as white.",
            "itemtype": "property",
            "name": "groupColor",
            "type": "Number|String",
            "default": "0x00ff00",
            "since": "0.11.3",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 76,
            "description": "The color to use to highlight an entity. This property is only used if there is no `CollisionBasic` component attached to the entity: this component uses the entity's `width` and `height` properties if defined. For example, use `\"#ffffff\"` or `0xffffff` to set as white.",
            "itemtype": "property",
            "name": "renderColor",
            "type": "Number|String",
            "default": "0x0000ff",
            "since": "0.11.3",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 86,
            "description": "The height of the entity.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "100",
            "since": "0.11.3",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 96,
            "description": "The width of the entity.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "100",
            "since": "0.11.3",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 106,
            "description": "The local offset in z-index for the rendered debug area.",
            "itemtype": "property",
            "name": "offsetZ",
            "type": "Number",
            "default": "10000",
            "since": "0.11.3",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 128,
            "description": "Removes this component if not in a debug build.",
            "itemtype": "method",
            "name": "'load'",
            "since": "0.11.3",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 143,
            "description": "Repositions the pieces of the component in preparation for rendering",
            "itemtype": "method",
            "name": "'handle-render'",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDebug.js",
            "line": 170,
            "description": "On receiving this message, will re-orient itself on the next update.",
            "itemtype": "method",
            "name": "'orientation-updated'",
            "class": "platypus.components.RenderDebug",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDestroyMe.js",
            "line": 16,
            "description": "This or animationIds required. This is a String identifying the animation that should destroy this entity on its completion.",
            "itemtype": "property",
            "name": "animationId",
            "type": "String",
            "default": "''",
            "class": "platypus.components.RenderDestroyMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDestroyMe.js",
            "line": 25,
            "description": "This or animationId required. This is an array of Strings identifying the animations that should destroy this entity on their completion.",
            "itemtype": "property",
            "name": "animationIds",
            "type": "Array",
            "default": "null",
            "class": "platypus.components.RenderDestroyMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderDestroyMe.js",
            "line": 44,
            "description": "On receiving this message, the component matches the animation id with its animation id setting and destroys the entity if they match.",
            "itemtype": "method",
            "name": "'animation-ended'",
            "params": [
                {
                    "name": "animation",
                    "description": "Animation id for the animation that just finished.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.RenderDestroyMe",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 44,
            "description": "Optional. An object containg key-value pairs that define a mapping from triggered events or entity states to the animation that should play. The list is processed from top to bottom, so the most important actions should be listed first (for example, a jumping animation might take precedence over an idle animation). If not specified, an 1-to-1 animation map is created from the list of animations in the skeleton definition using the animation names as the keys.\n\n \"animationMap\":{\n     \"standing\": \"default-animation\"  // On receiving a \"standing\" event, or when this.owner.state.standing === true, the \"default\" animation will begin playing.\n     \"ground,moving\": \"walking\",  // Comma separated values have a special meaning when evaluating \"state-changed\" messages. The above example will cause the \"walking\" animation to play ONLY if the entity's state includes both \"moving\" and \"ground\" equal to true.\n     \"ground,striking\": \"swing!\", // Putting an exclamation after an animation name causes this animation to complete before going to the next animation. This is useful for animations that would look poorly if interrupted.\n     \"default\": \"default-animation\" // Optional. \"default\" is a special property that matches all states. If none of the above states are valid for the entity, it will use the default animation listed here.\n }",
            "itemtype": "property",
            "name": "animationMap",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 60,
            "description": "Optional. A mask definition that determines where the image should clip. A string can also be used to create more complex shapes via the PIXI graphics API like: \"mask\": \"r(10,20,40,40).dc(30,10,12)\". Defaults to no mask or, if simply set to true, a rectangle using the entity's dimensions.\n\n \"mask\": {\n     \"x\": 10,\n     \"y\": 10,\n     \"width\": 40,\n     \"height\": 40\n },\n\n -OR-\n\n \"mask\": \"r(10,20,40,40).dc(30,10,12)\"",
            "itemtype": "property",
            "name": "mask",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 80,
            "description": "Defines whether the entity will respond to touch and click events. Setting this value will create an Interactive component on this entity with these properties. For example:\n\n \"interactive\": {\n     \"hover\": false,\n     \"hitArea\": {\n         \"x\": 10,\n         \"y\": 10,\n         \"width\": 40,\n         \"height\": 40\n     }\n }",
            "itemtype": "property",
            "name": "interactive",
            "type": "Boolean|Object",
            "default": "false",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 99,
            "description": "Sets the transition time between animations. If a number is defined, the transition time applies to all animation changes. If an object is specified, the key value pairs should match this syntax where the first part of the key lists the animation currently playing and the second part of the key lists the animation being transitioned to:\n\n    {\n        \"jump:walk\": 0.4,\n        \"walk:jump\": 0.2\n    }",
            "itemtype": "property",
            "name": "mixTimes",
            "type": "Number|Object",
            "default": "0",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 113,
            "description": "The offset of the x-axis position of the sprite from the entity's x-axis position.",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "default": "0",
            "since": "0.11.4",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 123,
            "description": "The offset of the y-axis position of the sprite from the entity's y-axis position.",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "default": "0",
            "since": "0.11.4",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 133,
            "description": "The z-index relative to other render components on the entity.",
            "itemtype": "property",
            "name": "offsetZ",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 142,
            "description": "Text describing an atlas of graphic assets for the Spine animation or an asset id for the same.",
            "itemtype": "property",
            "name": "atlas",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 151,
            "description": "A JSON structure defining a Spine skeleton and behaviors for the animation, or an asset id for the same.",
            "itemtype": "property",
            "name": "skeleton",
            "type": "String|Object",
            "default": "null",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 160,
            "description": "Optional. Whether this object can be rotated. It's rotational angle is set by setting the this.owner.rotation value on the entity.",
            "itemtype": "property",
            "name": "rotate",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 169,
            "description": "Whether this object can be mirrored over X. To mirror it over X set the this.owner.rotation value to be > 90  and < 270.",
            "itemtype": "property",
            "name": "mirror",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 178,
            "description": "Optional. Whether this object can be flipped over Y. To flip it over Y set the this.owner.rotation to be > 180.",
            "itemtype": "property",
            "name": "flip",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 187,
            "description": "Optional. Whether this object is visible or not. To change the visible value dynamically set this.owner.state.visible to true or false.",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 196,
            "description": "Optional. Specifies whether this component should create an EventRender component to listen to events matching the animationMap to animate. Set this to true if the component should animate for on events. Default is `false`.",
            "itemtype": "property",
            "name": "eventBased",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 205,
            "description": "Optional. Specifies whether this component should create a StateRender component to handle changes in the entity's state that match the animationMap to animate. Set this to true if the component should animate based on `this.owner.state`. Default is `true`.",
            "itemtype": "property",
            "name": "stateBased",
            "type": "Boolean",
            "default": "true",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 216,
            "description": "Prevents the spine from becoming invisible out of frame and losing mouse input connection.",
            "itemtype": "property",
            "name": "dragMode",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 225,
            "description": "Optional. The X scaling factor for the image. Defaults to 1.",
            "itemtype": "property",
            "name": "scaleX",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 234,
            "description": "Optional. The Y scaling factor for the image. Defaults to 1.",
            "itemtype": "property",
            "name": "scaleY",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 243,
            "description": "Optional. The X swek factor of the sprite. Defaults to 0.",
            "itemtype": "property",
            "name": "skewX",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 252,
            "description": "Optional. The Y skew factor for the image. Defaults to 0.",
            "itemtype": "property",
            "name": "skewY",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 261,
            "description": "Optional. The rotation of the spine in degrees. All spines on the same entity are rotated the same amount unless they ignore the rotation value by setting 'rotate' to false.",
            "itemtype": "property",
            "name": "rotation",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 270,
            "description": "Optional. The x position of the entity. Defaults to 0.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 279,
            "description": "Optional. The y position of the entity. Defaults to 0.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 288,
            "description": "Optional. The z position of the entity. Defaults to 0.",
            "itemtype": "property",
            "name": "z",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 330,
            "description": "This event fires each time an animation completes.",
            "itemtype": "event",
            "name": "'animation-ended'",
            "params": [
                {
                    "name": "animation",
                    "description": "The id of the animation that ended.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 434,
            "description": "The render update message updates the spine.",
            "itemtype": "method",
            "name": "'handle-render'",
            "params": [
                {
                    "name": "renderData",
                    "description": "Data from the render handler",
                    "type": "Object",
                    "props": [
                        {
                            "name": "container",
                            "description": "The parent container.",
                            "type": "PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 443,
            "description": "This event is triggered each tick to check for animation updates.",
            "itemtype": "event",
            "name": "'update-animation'",
            "params": [
                {
                    "name": "playing",
                    "description": "Whether the animation is in a playing or paused state.",
                    "type": "Boolean"
                }
            ],
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 455,
            "description": "This sets the mix times.",
            "itemtype": "method",
            "name": "'set-mix-times'",
            "params": [
                {
                    "name": "mixTimes",
                    "description": "This matches the syntax required for this component's `mixTimes` property",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 465,
            "description": "This event makes the spine invisible.",
            "itemtype": "method",
            "name": "'hide'",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 474,
            "description": "This event makes the spine visible.",
            "itemtype": "method",
            "name": "'show'",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 483,
            "description": "Stops the sprite's animation.",
            "itemtype": "method",
            "name": "'stop-animation'",
            "params": [
                {
                    "name": "animation",
                    "description": "The animation to show and pause. If not specified, this method simply pauses the current animation.",
                    "type": "String",
                    "optional": true
                }
            ],
            "since": "0.9.0",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSpine.js",
            "line": 494,
            "description": "Starts the sprite's animation.",
            "itemtype": "method",
            "name": "'play-animation'",
            "params": [
                {
                    "name": "animation",
                    "description": "The animation to play. If not specified, this method simply unpauses the current animation.",
                    "type": "String",
                    "optional": true
                }
            ],
            "since": "0.9.0",
            "class": "platypus.components.RenderSpine",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 24,
            "description": "spriteSheet can either be a String or an object. If a string, the spritesheet data will be loaded from the file with a matching name in the spritesheet folder. Otherwise the definition is in full here. That spritesheet data defines an EaselJS sprite sheet to use for rendering. See https://createjs.com/docs/easeljs/classes/SpriteSheet.html for the full specification.\n\n \"spriteSheet\": 'hero-image'\n\n -OR-\n\n \"spriteSheet\": {\n\n     \"images\": [\"example0\", \"example1\"], //Can also define 'image' and give the\n     \"frames\": {\n         \"width\":  100,\n         \"height\": 100,\n         \"regY\":   100,\n         \"regX\":   50\n     },\n     \"animations\":{\n         \"default-animation\":[2],\n         \"walking\": {\"frames\": [0, 1, 2], \"speed\": 4},\n         \"swing\": {\"frames\": [3, 4, 5], \"speed\": 4}\n     }\n }\n\n -OR- an Array of the above (since 0.8.4)",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "String|Array|Object",
            "default": "null",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 55,
            "description": "Optional. An object containg key-value pairs that define a mapping from triggered events or entity states to the animation that should play. The list is processed from top to bottom, so the most important actions should be listed first (for example, a jumping animation might take precedence over an idle animation). If not specified, an 1-to-1 animation map is created from the list of animations in the sprite sheet definition using the animation names as the keys.\n\n    \"animationMap\":{\n        \"standing\": \"default-animation\"  // On receiving a \"standing\" event, or when this.owner.state.standing === true, the \"default\" animation will begin playing.\n        \"ground,moving\": \"walking\",  // Comma separated values have a special meaning when evaluating \"state-changed\" messages. The above example will cause the \"walking\" animation to play ONLY if the entity's state includes both \"moving\" and \"ground\" equal to true.\n        \"ground,striking\": \"swing!\", // Putting an exclamation after an animation name causes this animation to complete before going to the next animation. This is useful for animations that would look poorly if interrupted.\n        \"default\": \"default-animation\" // Optional. \"default\" is a special property that matches all states. If none of the above states are valid for the entity, it will use the default animation listed here.\n    }\n\nThis data is used to create EventRender or StateRender components on the entity if the `eventBased` or `stateBased` properties are set to `true`.",
            "itemtype": "property",
            "name": "animationMap",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 73,
            "description": "Optional. A mask definition that determines where the image should clip. A string can also be used to create more complex shapes via the PIXI graphics API like: \"mask\": \"r(10,20,40,40).dc(30,10,12)\". Defaults to no mask or, if simply set to true, a rectangle using the entity's dimensions.\n\n \"mask\": {\n     \"x\": 10,\n     \"y\": 10,\n     \"width\": 40,\n     \"height\": 40\n },\n\n -OR-\n\n \"mask\": \"r(10,20,40,40).dc(30,10,12)\"",
            "itemtype": "property",
            "name": "mask",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 93,
            "description": "Defines whether the entity will respond to touch and click events. Setting this value will create an Interactive component on this entity with these properties. For example:\n\n \"interactive\": {\n     \"hover\": false,\n     \"hitArea\": {\n         \"x\": 10,\n         \"y\": 10,\n         \"width\": 40,\n         \"height\": 40\n     }\n }",
            "itemtype": "property",
            "name": "interactive",
            "type": "Boolean|Object",
            "default": "false",
            "since": "0.9.0",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 113,
            "description": "The offset of the x-axis position of the sprite from the entity's x-axis position.",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "default": "0",
            "since": "0.11.0",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 123,
            "description": "The offset of the y-axis position of the sprite from the entity's y-axis position.",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "default": "0",
            "since": "0.11.0",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 133,
            "description": "The z-index relative to other render components on the entity.",
            "itemtype": "property",
            "name": "offsetZ",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 142,
            "description": "Whether to restart a playing animation on event.",
            "itemtype": "property",
            "name": "restart",
            "type": "Boolean",
            "default": "true",
            "since": "0.9.2",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 152,
            "description": "Optional. Whether this object can be rotated. It's rotational angle is set by setting the this.owner.rotation value on the entity.",
            "itemtype": "property",
            "name": "rotate",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 161,
            "description": "Whether this object can be mirrored over X. To mirror it over X set the this.owner.rotation value to be > 90  and < 270.",
            "itemtype": "property",
            "name": "mirror",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 170,
            "description": "Optional. Whether this object can be flipped over Y. To flip it over Y set the this.owner.rotation to be > 180.",
            "itemtype": "property",
            "name": "flip",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 179,
            "description": "Optional. Whether this object is visible or not. To change the visible value dynamically set this.owner.state.visible to true or false.",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 188,
            "description": "Optional. Specifies whether this component should create an EventRender component to listen to events matching the animationMap to animate. Set this to true if the component should animate for on events. Default is `false`.",
            "itemtype": "property",
            "name": "eventBased",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 197,
            "description": "Optional. Specifies whether this component should create a StateRender component to handle changes in the entity's state that match the animationMap to animate. Set this to true if the component should animate based on `this.owner.state`. Default is `true`.",
            "itemtype": "property",
            "name": "stateBased",
            "type": "Boolean",
            "default": "true",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 206,
            "description": "Optional. Whether this sprite should be cached into an entity with a `RenderTiles` component (like \"render-layer\"). The `RenderTiles` component must have its \"entityCache\" property set to `true`. Warning! This is a one-direction setting and will remove this component from the entity once the current frame has been cached.",
            "itemtype": "property",
            "name": "cache",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 215,
            "description": "Optional. When using state-based animations, forces animations to complete before starting a new animation. Defaults to false.",
            "itemtype": "property",
            "name": "forcePlayThrough",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 224,
            "description": "Optional. Ignores the opacity of the owner. Used when multiple RenderSprite components are on the same entity.",
            "itemtype": "property",
            "name": "ignoreOpacity",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 233,
            "description": "The scaling factor for this component.",
            "itemtype": "property",
            "name": "scale",
            "type": "Number|Array|Object",
            "default": "1",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 242,
            "description": "Optional. The X scaling factor for the image. Defaults to 1.",
            "itemtype": "property",
            "name": "scaleX",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 251,
            "description": "Optional. The Y scaling factor for the entity. Defaults to 1.",
            "itemtype": "property",
            "name": "scaleY",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 260,
            "description": "The skew factor for this component.",
            "itemtype": "property",
            "name": "skew",
            "type": "Number|Array|Object",
            "default": "0",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 269,
            "description": "Optional. The X skew factor of the entity. Defaults to 0.",
            "itemtype": "property",
            "name": "skewX",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 278,
            "description": "Optional. The Y skew factor for the entity. Defaults to 0.",
            "itemtype": "property",
            "name": "skewY",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 287,
            "description": "Optional. The rotation of the sprite in degrees. All sprites on the same entity are rotated the same amount unless they ignore the rotation value by setting 'rotate' to false.",
            "itemtype": "property",
            "name": "rotation",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 319,
            "description": "This event fires each time an animation completes.",
            "itemtype": "event",
            "name": "'animation-ended'",
            "params": [
                {
                    "name": "animation",
                    "description": "The id of the animation that ended.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 401,
            "description": "The render update message updates the sprite. If a sprite doesn't have a container, it's removed.",
            "itemtype": "method",
            "name": "'handle-render'",
            "params": [
                {
                    "name": "renderData",
                    "description": "Data from the render handler",
                    "type": "Object",
                    "props": [
                        {
                            "name": "container",
                            "description": "The parent container.",
                            "type": "PIXI.Container"
                        }
                    ]
                }
            ],
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 410,
            "description": "This event is triggered each tick to check for animation updates.",
            "itemtype": "event",
            "name": "'update-animation'",
            "params": [
                {
                    "name": "playing",
                    "description": "Whether the animation is in a playing or paused state.",
                    "type": "Boolean"
                }
            ],
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 422,
            "description": "Stops the sprite's animation.",
            "itemtype": "method",
            "name": "'stop-animation'",
            "params": [
                {
                    "name": "animation",
                    "description": "The animation to show and pause. If not specified, this method simply pauses the current animation.",
                    "type": "String",
                    "optional": true
                }
            ],
            "since": "0.9.0",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderSprite.js",
            "line": 433,
            "description": "Starts the sprite's animation.",
            "itemtype": "method",
            "name": "'play-animation'",
            "params": [
                {
                    "name": "animation",
                    "description": "The animation to play. If not specified, this method simply unpauses the current animation.",
                    "type": "String",
                    "optional": true
                }
            ],
            "since": "0.9.0",
            "class": "platypus.components.RenderSprite",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderText.js",
            "line": 35,
            "description": "The offset of the x-axis position of the text from the entity's x-axis position.",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderText",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderText.js",
            "line": 44,
            "description": "The offset of the y-axis position of the text from the entity's y-axis position.",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderText",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderText.js",
            "line": 53,
            "description": "The z-index relative to other render components on the entity.",
            "itemtype": "property",
            "name": "offsetZ",
            "type": "Number",
            "default": "0",
            "class": "platypus.components.RenderText",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderText.js",
            "line": 62,
            "description": "This is the text to display.",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.RenderText",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderText.js",
            "line": 71,
            "description": "This is the text style to use. Use the following specification to define the style:\n\n    {\n        \"fontSize\": \"64px\",\n        \"fill\": \"#ffffff\",\n        \"align\": \"center\", // Can be `left`, `center`, or `right`\n        \"fontFamily\": \"arial\", // Any CSS font that has been loaded by the browser\n        \"verticalAlign\": \"bottom\" // Can be `top`, `center`, or `bottom`\n    }\n\nSee [PIXI.TextStyle documentation](http://pixijs.download/dev/docs/PIXI.TextStyle.html) for a full list of available options.",
            "itemtype": "property",
            "name": "style",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.RenderText",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderText.js",
            "line": 111,
            "description": "Sets the copy of the text.",
            "itemtype": "method",
            "name": "'set-text'",
            "params": [
                {
                    "name": "text",
                    "description": "The text to insert.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.RenderText",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 147,
            "description": "The amount of space in pixels around the edge of the camera that we include in the buffered image. If not set, largest buffer allowed by maximumBuffer is used.",
            "itemtype": "property",
            "name": "buffer",
            "type": "number",
            "default": "0",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 156,
            "description": "Determines whether to cache the entire map across one or more texture caches. By default this is `false`; however, if the entire map fits on one or two texture caches, this is set to `true` since it is more efficient than dynamic buffering.",
            "itemtype": "property",
            "name": "cacheAll",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 165,
            "description": "Whether to cache entities on this layer if the entity's render component requests caching.",
            "itemtype": "property",
            "name": "entityCache",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 174,
            "description": "This is a two dimensional array of the spritesheet indexes that describe the map that you're rendering.",
            "itemtype": "property",
            "name": "imageMap",
            "type": "Array",
            "default": "[]",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 183,
            "description": "The amount of space that is buffered. Defaults to 2048 x 2048 or a smaller area that encloses the tile layer.",
            "itemtype": "property",
            "name": "maximumBuffer",
            "type": "number",
            "default": "2048",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 192,
            "description": "The x-scale the tilemap is being displayed at.",
            "itemtype": "property",
            "name": "scaleX",
            "type": "number",
            "default": "1",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 201,
            "description": "The y-scale the tilemap is being displayed at.",
            "itemtype": "property",
            "name": "scaleY",
            "type": "number",
            "default": "1",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 210,
            "description": "A sprite sheet describing all the tile images.\n\nAccepts an array of sprite sheet data since 0.8.4",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "Object|Array|String",
            "default": "null",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 221,
            "description": "Whether to cache the tile map to a large texture.",
            "itemtype": "property",
            "name": "tileCache",
            "type": "boolean",
            "default": "true",
            "since": "0.6.4",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 231,
            "description": "This is the height in pixels of individual tiles.",
            "itemtype": "property",
            "name": "tileHeight",
            "type": "number",
            "default": "10",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 240,
            "description": "This is the width in pixels of individual tiles.",
            "itemtype": "property",
            "name": "tileWidth",
            "type": "number",
            "default": "10",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 249,
            "description": "The map's top offset.",
            "itemtype": "property",
            "name": "top",
            "type": "Number",
            "default": "0",
            "since": "0.7.5",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 259,
            "description": "The map's left offset.",
            "itemtype": "property",
            "name": "left",
            "type": "Number",
            "default": "0",
            "since": "0.7.5",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 331,
            "description": "If this component should cache entities, it checks peers for a \"renderCache\" display object and adds the display object to its list of objects to render on top of the tile set.",
            "itemtype": "method",
            "name": "'cache-sprite'",
            "params": [
                {
                    "name": "entity",
                    "description": "This is the peer entity to be checked for a renderCache.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 341,
            "description": "If this component should cache entities, it checks peers for a \"renderCache\" display object and adds the display object to its list of objects to render on top of the tile set.",
            "itemtype": "method",
            "name": "'peer-entity-added'",
            "params": [
                {
                    "name": "entity",
                    "description": "This is the peer entity to be checked for a renderCache.",
                    "type": "platypus.Entity"
                }
            ],
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 351,
            "description": "This event adds a layer of tiles to render on top of the existing layer of rendered tiles.",
            "itemtype": "method",
            "name": "'add-tiles'",
            "params": [
                {
                    "name": "message.imageMap",
                    "description": "This is a 2D mapping of tile indexes to be rendered.",
                    "type": "Array"
                }
            ],
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 366,
            "description": "This event edits the tile index of a rendered tile.",
            "itemtype": "method",
            "name": "'change-tile'",
            "params": [
                {
                    "name": "tile",
                    "description": "A string representing the name of the tile to switch to.",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "The column of the tile to edit.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The row of the tile to edit.",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "If RenderTiles has multiple layers, this value specifies the layer, with `0` being the bottom-most layer.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 384,
            "description": "Provides the width and height of the world.",
            "itemtype": "method",
            "name": "'camera-loaded'",
            "params": [
                {
                    "name": "camera",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "world",
                            "description": "The dimensions of the world.",
                            "type": "platypus.AABB"
                        },
                        {
                            "name": "viewport",
                            "description": "The AABB describing the camera viewport in world units.",
                            "type": "platypus.AABB"
                        }
                    ]
                }
            ],
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 401,
            "description": "Triggered when the camera moves, this function updates which tiles need to be rendered and caches the image.",
            "itemtype": "method",
            "name": "'camera-update'",
            "params": [
                {
                    "name": "camera",
                    "description": "Provides information about the camera.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "viewport",
                            "description": "The AABB describing the camera viewport in world units.",
                            "type": "platypus.AABB"
                        }
                    ]
                }
            ],
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\RenderTiles.js",
            "line": 414,
            "description": "On receiving this message, determines whether to update which tiles need to be rendered and caches the image.",
            "itemtype": "method",
            "name": "'handle-render'",
            "class": "platypus.components.RenderTiles",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\SceneChanger.js",
            "line": 18,
            "description": "Optional, but must be provided by a \"new-scene\" parameter if not defined here. This causes a \"new-scene\" event to load this scene.",
            "itemtype": "property",
            "name": "scene",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.SceneChanger",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\SceneChanger.js",
            "line": 27,
            "description": "An object containing key/value pairs of information that should be passed into the new scene on the new scene's \"scene-loaded\" and \"scene-live\" events.",
            "itemtype": "property",
            "name": "persistentData",
            "type": "platypus.Data|Object",
            "default": "null",
            "class": "platypus.components.SceneChanger",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\SceneChanger.js",
            "line": 42,
            "description": "On receiving this message, a new scene is loaded according to provided parameters or previously determined component settings.",
            "itemtype": "method",
            "name": "'new-scene'",
            "params": [
                {
                    "name": "message.scene",
                    "description": "This is a label corresponding with a predefined scene.",
                    "type": "String"
                },
                {
                    "name": "message.persistentData",
                    "description": "Any values that should be passed to the next scene on the new scene's \"scene-loaded\" and \"scene-live\" events.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.SceneChanger",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\SceneChanger.js",
            "line": 57,
            "description": "On receiving this message, a scene value is stored, waiting for a `new-scene` to make the transition.",
            "itemtype": "method",
            "name": "'set-scene'",
            "params": [
                {
                    "name": "scene",
                    "description": "This is a label corresponding with a predefined scene.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.SceneChanger",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\SceneChanger.js",
            "line": 67,
            "description": "On receiving this message, persistent data is stored, waiting for a `new-scene` to make the transition.",
            "itemtype": "method",
            "name": "'set-persistent-scene-data'",
            "params": [
                {
                    "name": "persistentData",
                    "description": "Any values that should be passed to the next scene via the \"scene-loaded\" and \"scene-live\" events.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.SceneChanger",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\StateRender.js",
            "line": 37,
            "description": "On entering a new animation-mapped state, this component triggers this event to play an animation.",
            "itemtype": "event",
            "name": "'play-animation'",
            "params": [
                {
                    "name": "animation",
                    "description": "Describes the animation to play.",
                    "type": "String"
                },
                {
                    "name": "restart",
                    "description": "Whether to restart a playing animation.",
                    "type": "Boolean"
                }
            ],
            "class": "platypus.components.StateRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\StateRender.js",
            "line": 47,
            "description": "On attaining an animation-mapped state, this component triggers this event to stop a previous animation.",
            "itemtype": "event",
            "name": "'stop-animation'",
            "params": [
                {
                    "name": "animation",
                    "description": "Describes the animation to stop.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.StateRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\StateRender.js",
            "line": 60,
            "description": "An object containg key-value pairs that define a mapping from entity states to the animation that should play. The list is processed from top to bottom, so the most important actions should be listed first (for example, a jumping animation might take precedence over an idle animation). If not specified, an 1-to-1 animation map is created from the list of animations in the sprite sheet definition using the animation names as the keys.\n\n \"animationMap\":{\n     \"standing\": \"default-animation\"  // On receiving a \"standing\" event, or when this.owner.state.standing === true, the \"default\" animation will begin playing.\n     \"ground,moving\": \"walking\",  // Comma separated values have a special meaning when evaluating \"state-changed\" messages. The above example will cause the \"walking\" animation to play ONLY if the entity's state includes both \"moving\" and \"ground\" equal to true.\n     \"ground,striking\": \"swing!\", // Putting an exclamation after an animation name causes this animation to complete before going to the next animation. This is useful for animations that would look poorly if interrupted.\n     \"default\": \"default-animation\" // Optional. \"default\" is a special property that matches all states. If none of the above states are valid for the entity, it will use the default animation listed here.\n }",
            "itemtype": "property",
            "name": "animationMap",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.StateRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\StateRender.js",
            "line": 76,
            "description": "Sets a component that this component should be connected to.",
            "itemtype": "property",
            "name": "component",
            "type": "Component",
            "default": "null",
            "since": "0.9.2",
            "class": "platypus.components.StateRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\StateRender.js",
            "line": 86,
            "description": "Optional. Forces animations to complete before starting a new animation. Defaults to `false`.",
            "itemtype": "property",
            "name": "forcePlayThrough",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.StateRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\StateRender.js",
            "line": 138,
            "description": "This listens for the entity state to change and will update the currently playing animation.",
            "itemtype": "method",
            "name": "'state-changed'",
            "class": "platypus.components.StateRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\StateRender.js",
            "line": 147,
            "description": "On receiving this event, the component checks for any waiting animations and begins playing them if so.",
            "itemtype": "method",
            "name": "'animation-ended'",
            "params": [
                {
                    "name": "animation",
                    "description": "The animation that completed.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.StateRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\StateRender.js",
            "line": 168,
            "description": "This checks to determine whether another animation should begin playing.",
            "itemtype": "method",
            "name": "update-animation",
            "params": [
                {
                    "name": "playing",
                    "description": "Whether the new animation should play or pause on the first frame.",
                    "type": "Boolean"
                }
            ],
            "class": "platypus.components.StateRender",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 93,
            "description": "Once finished loading the map, this message is triggered on the entity to notify other components of completion.",
            "itemtype": "event",
            "name": "'world-loaded'",
            "params": [
                {
                    "name": "message",
                    "description": "World data.",
                    "type": "platypus.Data",
                    "props": [
                        {
                            "name": "level",
                            "description": "The Tiled level data used to load the level.",
                            "type": "Object"
                        },
                        {
                            "name": "width",
                            "description": "The width of the world in world units.",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "The height of the world in world units.",
                            "type": "Number"
                        },
                        {
                            "name": "tile",
                            "description": "Dimensions of the world tiles.",
                            "type": "platypus.AABB"
                        },
                        {
                            "name": "world",
                            "description": "Dimensions of the world.",
                            "type": "platypus.AABB"
                        },
                        {
                            "name": "camera",
                            "description": "If a camera property is found on one of the loaded entities, this property will point to the entity on load that a world camera should focus on.",
                            "type": "platypus.Entity"
                        }
                    ]
                }
            ],
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 425,
            "description": "This causes the entire map to be offset automatically by an order of magnitude higher than the height and width of the world so that the number of digits below zero is constant throughout the world space. This fixes potential floating point issues when, for example, 97 is added to 928.0000000000001 giving 1025 since a significant digit was lost when going into the thousands.",
            "itemtype": "property",
            "name": "offsetMap",
            "type": "Boolean",
            "default": "false",
            "since": "0.7.5",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 435,
            "description": "If set to `true` and if the game is running in debug mode, this causes the collision layer to appear.",
            "itemtype": "property",
            "name": "showCollisionTiles",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 444,
            "description": "If specified, the referenced images are used as the game sprite sheets instead of the images referenced in the Tiled map. This is useful for using different or better quality art from the art used in creating the Tiled map.",
            "itemtype": "property",
            "name": "images",
            "type": "Array",
            "default": "null",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 453,
            "description": "Adds a number to each additional Tiled layer's z coordinate to maintain z-order. Defaults to 1000.",
            "itemtype": "property",
            "name": "layerIncrement",
            "type": "number",
            "default": "1000",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 462,
            "description": "Keeps the tile maps in separate render layers. Default is 'false' to for better optimization.",
            "itemtype": "property",
            "name": "separateTiles",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 471,
            "description": "If a particular sprite sheet should be used that's not defined by the level images themselves. This is useful for making uniquely-themed variations of the same level. This is overridden by `\"spriteSheet\": \"import\"` in the \"render-layer\" Entity definition, so be sure to remove that when setting this property.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "String | Object",
            "default": "null",
            "since": "0.6.6",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 483,
            "description": "Specifies the JSON level to load. Available on the entity as `entity.level`.",
            "itemtype": "property",
            "name": "level",
            "type": "String",
            "default": "null",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 492,
            "description": "Sets how many world units in width and height correspond to a single pixel in the Tiled map. Default is 1: One pixel is one world unit. Available on the entity as `entity.unitsPerPixel`.",
            "itemtype": "property",
            "name": "unitsPerPixel",
            "type": "number",
            "default": "1",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 501,
            "description": "If images are provided, this property sets the scale of the art relative to world coordinates. Available on the entity as `entity.imagesScale`.",
            "itemtype": "property",
            "name": "imagesScale",
            "type": "number",
            "default": "1",
            "deprecated": true,
            "deprecationMessage": "since v0.11.9",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 511,
            "description": "Can be \"left\", \"right\", or \"center\". Defines where entities registered X position should be when spawned. Available on the entity as `entity.entityPositionX`.",
            "itemtype": "property",
            "name": "entityPositionX",
            "type": "String",
            "default": "\"center\"",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 520,
            "description": "Can be \"top\", \"bottom\", or \"center\". Defines where entities registered Y position should be when spawned. Available on the entity as `entity.entityPositionY`.",
            "itemtype": "property",
            "name": "entityPositionY",
            "type": "String",
            "default": "\"bottom\"",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 529,
            "description": "Whether to wait for a \"load-level\" event before before loading. Available on the entity as `entity.manuallyLoad`.",
            "itemtype": "property",
            "name": "manuallyLoad",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 547,
            "description": "On receiving this message, the component commences loading the Tiled map JSON definition. Once finished, it removes itself from the entity's list of components.",
            "itemtype": "method",
            "name": "'scene-loaded'",
            "params": [
                {
                    "name": "persistentData",
                    "description": "Data passed from the last scene into this one.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "level",
                            "description": "A level name or definition to load if the level is not already specified.",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "holds",
                    "description": "An object that handles any holds on before making the scene live.",
                    "type": "platypus.Data",
                    "props": [
                        {
                            "name": "count",
                            "description": "The number of holds to wait for before triggering \"scene-live\"",
                            "type": "Number"
                        },
                        {
                            "name": "release",
                            "description": "The method to trigger to let the scene loader know that one hold has been released.",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 567,
            "description": "If `manuallyLoad` is set, the component will wait for this message before loading the Tiled map JSON definition.",
            "itemtype": "method",
            "name": "'load-level'",
            "params": [
                {
                    "name": "levelData",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "level",
                            "description": "The level to load.",
                            "type": "String|Object"
                        },
                        {
                            "name": "persistentData",
                            "description": "Information passed from the last scene.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The function to call once the level is loaded.",
                    "type": "Function"
                }
            ],
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 1246,
            "description": "As a level is loaded, this event is triggered to show progress.",
            "itemtype": "event",
            "name": "'level-loading-progress'",
            "params": [
                {
                    "name": "message",
                    "description": "Contains progress data.",
                    "type": "platypus.Data",
                    "props": [
                        {
                            "name": "count",
                            "description": "The number of loaded entities.",
                            "type": "Number"
                        },
                        {
                            "name": "progress",
                            "description": "A fraction of count / total.",
                            "type": "Number"
                        },
                        {
                            "name": "total",
                            "description": "The total number of entities being loaded by this component.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "since": "0.8.3",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\TiledLoader.js",
            "line": 1269,
            "description": "This method decodes a Tiled layer and sets its data to CSV format.",
            "itemtype": "method",
            "name": "decodeLayer",
            "params": [
                {
                    "name": "layer",
                    "description": "An object describing a Tiled JSON-exported layer.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The same object provided, but with the data field updated.",
                "type": "Object"
            },
            "chainable": 1,
            "since": "0.7.1",
            "class": "platypus.components.TiledLoader",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Timeline.js",
            "line": 51,
            "description": "Defines the set of timelines. Triggering the key for one of the events will run the timeline. A timeline can contain three different types integers >= 0, strings, and objects. Integers are interpreted as waits and define\npauses between events. Strings are intepreted as event calls. Objects can contain several parameters: entity, event, message. The entity is the id of the entity that\nthe event will be fired on. The event can be a string or array. If a string, it will call that event on the entity or owner. If an array, the value will be passed\nto the event handling system.\n\n \"timelines\": {\n     \"sample-timeline-1\": [\n         500,\n         \"sample-event\",\n         {\"event\": \"sample-event\", \"message\": \"sample-message\"},\n         {\"entity\": \"entity-id-to-trigger-event-on\", \"event\": \"sample-event\"},\n         {\"event\": [\"sample-event\", \"sample-event-2\", {\"event\": \"sample-event-3\", \"message\": \"sample-message\"}]},\n     ],\n     \"sample-timeline-2\": [\n         200,\n         \"sample-event\"\n     ]\n}",
            "itemtype": "property",
            "name": "timelines",
            "type": "Object",
            "default": "{}",
            "class": "platypus.components.Timeline",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Timeline.js",
            "line": 91,
            "description": "Checks game clock against timelines and triggers events as needed.",
            "itemtype": "method",
            "name": "'logic-tick'",
            "params": [
                {
                    "name": "tick.delta",
                    "description": "The length of the tick.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.Timeline",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Timeline.js",
            "line": 99,
            "description": "Checks game clock against timelines and triggers events as needed.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "params": [
                {
                    "name": "tick.delta",
                    "description": "The length of the tick.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.Timeline",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Timeline.js",
            "line": 107,
            "description": "Stops all timelines.",
            "itemtype": "method",
            "name": "'stop-active-timelines'",
            "since": "v0.12.0",
            "class": "platypus.components.Timeline",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tutorial.js",
            "line": 174,
            "description": "Checks added entity to determine if it is one of the conditions for one of the tutorials. If so, we track it.",
            "itemtype": "method",
            "name": "'child-entity-added'",
            "params": [
                {
                    "name": "entity",
                    "description": "The added entity.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.Tutorial",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tutorial.js",
            "line": 182,
            "description": "Checks added entity to determine if it is one of the conditions for one of the tutorials. If so, we track it.",
            "itemtype": "method",
            "name": "'peer-entity-added'",
            "params": [
                {
                    "name": "entity",
                    "description": "The added entity.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.Tutorial",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tutorial.js",
            "line": 190,
            "description": "Removes entities from the watch list when they are destroyed.",
            "itemtype": "method",
            "name": "'child-entity-removed'",
            "params": [
                {
                    "name": "entity",
                    "description": "The removed entity.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.Tutorial",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tutorial.js",
            "line": 198,
            "description": "Removes entities from the watch list when they are destroyed.",
            "itemtype": "method",
            "name": "'peer-entity-removed'",
            "params": [
                {
                    "name": "entity",
                    "description": "The removed entity.",
                    "type": "Object"
                }
            ],
            "class": "platypus.components.Tutorial",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tutorial.js",
            "line": 207,
            "description": "Checks tutorials to determine if they should play.",
            "itemtype": "method",
            "name": "'logic-tick'",
            "params": [
                {
                    "name": "tick.delta",
                    "description": "The length of the tick.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.Tutorial",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tutorial.js",
            "line": 215,
            "description": "Checks tutorials to determine if they should play.",
            "itemtype": "method",
            "name": "'handle-logic'",
            "params": [
                {
                    "name": "tick.delta",
                    "description": "The length of the tick.",
                    "type": "Number"
                }
            ],
            "class": "platypus.components.Tutorial",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tutorial.js",
            "line": 223,
            "description": "Fired when audioVO finishes. Clears the playing tutorial returning it to the internal list of tutorials if it will be played again.",
            "itemtype": "method",
            "name": "'sequence-complete'",
            "class": "platypus.components.Tutorial",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 120,
            "description": "Required. A key/value list of events and an array or object representing the tween they should trigger.\n\n     {\n         \"begin-flying\": [ // When \"begin-flying\" is triggered on this entity, the following tween begins. Tween definitions adhere to a similar structure outlined by the TweenJS documentation. Each milestone on the tween is an item in this array.\n             [\"to\", { // If the definition is an array, the first parameter is the type of milestone, in this case \"to\", with all following parameters passed directly to the equivalent Tween function.\n                 \"scaleY\": 1,\n                 \"y\": 400\n             }, 500],\n             [\"call\", \"fly\"], // \"call\" milestones can take a function or a string. If it's a string, the string will be triggered as an event on the entity. In this case, the component will trigger \"fly\".\n         ],\n\n         \"stop-flying\": { // Alternatively, an object can be used to include properties. It must include a `tween` property with an array of tween values like above. It may include any properties that the Tween component accepts and overrides the component's properties.\n             \"tween\": [[\"to\", {\"y\": 0}, 250]],\n             \"loop\": 2 // This overrides this component's `loop` property value.\n         }\n     }",
            "itemtype": "property",
            "name": "events",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 144,
            "description": "Sets `useTicks` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "useTicks",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 153,
            "description": "Sets `ignoreGlobalPause` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "ignoreGlobalPause",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 162,
            "description": "Sets `loop` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "loop",
            "type": "Number|Boolean",
            "default": "0",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 171,
            "description": "Sets `reversed` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "reversed",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 180,
            "description": "Sets `bounce` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "bounce",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 189,
            "description": "Sets `timeScale` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "timeScale",
            "type": "Number",
            "default": "1",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 198,
            "description": "Sets `pluginData` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "pluginData",
            "type": "Object",
            "default": "null",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 207,
            "description": "Sets `paused` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 216,
            "description": "Sets `position` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "position",
            "type": "Number",
            "default": "false",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 225,
            "description": "Sets `onChange` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html. If a string is specified, it is triggered as an event on the entity.",
            "itemtype": "property",
            "name": "onChange",
            "type": "Function|String",
            "default": "''",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 234,
            "description": "Sets `onComplete` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html. If a string is specified, it is triggered as an event on the entity.",
            "itemtype": "property",
            "name": "onComplete",
            "type": "Function|String",
            "default": "''",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\Tween.js",
            "line": 243,
            "description": "Sets `override` on the tween as defined here: https://www.createjs.com/docs/tweenjs/classes/Tween.html",
            "itemtype": "property",
            "name": "override",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.components.Tween",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\VoiceOver.js",
            "line": 117,
            "description": "Sets the pairing between letters in the voice-over strings and the animation frame to play.\n\n      \"animationMap\": {\n        \"default\": \"mouth-closed\"\n        // Required. Specifies animation of default position.\n\n        \"w\": \"mouth-o\",\n        \"a\": \"mouth-aah\",\n        \"t\": \"mouth-t\"\n        // Optional. Also list single characters that should map to a given voice-over animation frame.\n      }",
            "itemtype": "property",
            "name": "animationMap",
            "type": "Object",
            "default": ": {\"default\": \"default\"}",
            "class": "platypus.components.VoiceOver",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\VoiceOver.js",
            "line": 136,
            "description": "Specifies the type of component to add to handle VO lip-sync animation.",
            "itemtype": "property",
            "name": "renderComponent",
            "type": "String",
            "default": "'renderSprite'",
            "class": "platypus.components.VoiceOver",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\VoiceOver.js",
            "line": 145,
            "description": "Specifies how long a described voice-over frame should last in milliseconds.",
            "itemtype": "property",
            "name": "frameLength",
            "type": "Number",
            "default": "100",
            "class": "platypus.components.VoiceOver",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\VoiceOver.js",
            "line": 154,
            "description": "Specifies the prefix that messages between the render and Audio components should use. This will cause the audio to trigger events like \"i-say-w\" and \"i-say-a\" (characters listed in the animationMap), that the RenderSprite uses to show the proper frame.",
            "itemtype": "property",
            "name": "messagePrefix",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.VoiceOver",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\VoiceOver.js",
            "line": 163,
            "description": "This maps events to audio clips and voice over strings.\n\n     \"voiceOverMap\": {\n         \"message-triggered\": [{\n             \"sound\": \"audio-id\",\n             // Required. This is the audio clip to play when \"message-triggered\" is triggered. It may be a string as shown or an object of key/value pairs as described in an [[audio]] component definition.\n             \"voice\": \"waat\"\n             // Optional. This string defines the voice-over sequence according to the frames defined by animationMap. Each character lasts the length specified by \"frameLength\" above. If not specified, voice will be the default frame.\n         }]\n     }",
            "itemtype": "property",
            "name": "voiceOverMap",
            "type": "Object",
            "default": "{}",
            "class": "platypus.components.VoiceOver",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\VoiceOver.js",
            "line": 244,
            "description": "On receiving this message, this component removes itself from the entity. (It creates the [[RenderSprite]] and [[AudioVO]] components in its constructor.)",
            "itemtype": "method",
            "name": "'load'",
            "class": "platypus.components.VoiceOver",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\XHR.js",
            "line": 18,
            "description": "Sets the XHR method to use.",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "default": "\"GET\"",
            "class": "platypus.components.XHR",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\XHR.js",
            "line": 27,
            "description": "Sets the path to connect to the server.",
            "itemtype": "property",
            "name": "path",
            "type": "String",
            "default": "\"\"",
            "class": "platypus.components.XHR",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\XHR.js",
            "line": 36,
            "description": "Sets the XHR response type.",
            "itemtype": "property",
            "name": "responseType",
            "type": "String",
            "default": "\"text\"",
            "class": "platypus.components.XHR",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\XHR.js",
            "line": 45,
            "description": "Whether cookies should be retained on cross-domain calls.",
            "itemtype": "property",
            "name": "withCredentials",
            "type": "boolean",
            "default": "false",
            "class": "platypus.components.XHR",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\XHR.js",
            "line": 60,
            "description": "On receiving this message, this component makes a request from the server using the provided information. Note that properties set here will reset the properties set by this component's JSON definition.",
            "itemtype": "method",
            "name": "'request'",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "method",
                            "description": "XHR method to use: must be \"GET\" or \"POST\".",
                            "type": "String"
                        },
                        {
                            "name": "path",
                            "description": "The path to the server resource.",
                            "type": "String"
                        },
                        {
                            "name": "responseType",
                            "description": "Response type expected.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"text\""
                        },
                        {
                            "name": "data",
                            "description": "An object of string key/value pairs to be transmitted to the server.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "onload",
                            "description": "A function that should be run on receiving a response from the server. This defaults to triggering a \"response\" message containing the responseText value.",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "class": "platypus.components.XHR",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\components\\XHR.js",
            "line": 109,
            "description": "This message is triggered on receiving a response from the server (if \"onload\" is not set by the original \"request\" message).",
            "itemtype": "event",
            "name": "'response'",
            "params": [
                {
                    "name": "message",
                    "description": "The message contains the responseText returned by the server.",
                    "type": "String"
                }
            ],
            "class": "platypus.components.XHR",
            "namespace": "platypus.components"
        },
        {
            "file": "src\\mixins\\Array.js",
            "line": 1,
            "class": "window.Array",
            "namespace": "window"
        },
        {
            "file": "src\\mixins\\Array.js",
            "line": 14,
            "description": "Merges a given array into the current array without duplicating items.",
            "itemtype": "method",
            "name": "union",
            "return": {
                "description": "",
                "type": "Array"
            },
            "chainable": 1,
            "class": "window.Array",
            "namespace": "window"
        },
        {
            "file": "src\\mixins\\Array.js",
            "line": 38,
            "description": "Slices, but uses a recycled array. Note that this slice does not accept parameters and makes a shallow copy of the original array.",
            "itemtype": "method",
            "name": "greenSlice",
            "return": {
                "description": "Array"
            },
            "class": "window.Array",
            "namespace": "window"
        },
        {
            "file": "src\\mixins\\Array.js",
            "line": 60,
            "description": "Splices, but only removes a single item and returns the item itself, not an array.",
            "itemtype": "method",
            "name": "greenSplice",
            "return": {
                "description": "Array"
            },
            "class": "window.Array",
            "namespace": "window"
        },
        {
            "file": "src\\mixins\\Array.js",
            "line": 90,
            "description": "Save instance for reuse.",
            "itemtype": "method",
            "name": "Array.recycle",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to recycle.",
                    "type": "Array"
                }
            ],
            "since": "0.7.1",
            "class": "window.Array",
            "namespace": "window"
        },
        {
            "file": "src\\mixins\\Array.js",
            "line": 97,
            "description": "Save instance for reuse.",
            "itemtype": "method",
            "name": "recycle",
            "params": [
                {
                    "name": "depth",
                    "description": "The dimensions of the array.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "since": "0.7.1",
            "class": "window.Array",
            "namespace": "window"
        },
        {
            "file": "src\\mixins\\Array.js",
            "line": 104,
            "description": "Create a new instance or reuse an old instance if available.",
            "itemtype": "method",
            "name": "Array.setUp",
            "params": [
                {
                    "name": "item",
                    "description": "One or more arguments to prepopulate items in the array.",
                    "type": "Object|String|Number|Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array"
            },
            "since": "0.7.1",
            "class": "window.Array",
            "namespace": "window"
        },
        {
            "file": "src\\mixins\\PIXI.Graphics.js",
            "line": 1,
            "description": "This adds support for a tiny API to PIXI.Graphics similar to the CreateJS Graphics API. This is used for backwards support for RenderSprite masks.",
            "class": "window.String",
            "namespace": "window"
        },
        {
            "file": "src\\mixins\\String.js",
            "line": 1,
            "class": "window.String",
            "namespace": "window"
        },
        {
            "file": "src\\mixins\\String.js",
            "line": 13,
            "description": "Splits, but uses a recycled array.",
            "itemtype": "method",
            "name": "greenSplit",
            "return": {
                "description": "Array"
            },
            "class": "window.String",
            "namespace": "window"
        },
        {
            "file": "src\\polyfills\\Map.js",
            "line": 1,
            "class": "window.Map",
            "namespace": "window"
        },
        {
            "file": "src\\polyfills\\Map.js",
            "line": 23,
            "description": "This is an object containing a list of key/value pairs. This property should not be used directly.",
            "itemtype": "property",
            "name": "map",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "default": "{}",
            "class": "window.Map",
            "namespace": "window"
        },
        {
            "file": "src\\polyfills\\Map.js",
            "line": 38,
            "description": "Returns the value of the provided key.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "The key to lookup.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value  The value of the provded key.",
                "type": "Any"
            },
            "class": "window.Map",
            "namespace": "window"
        },
        {
            "file": "src\\polyfills\\Map.js",
            "line": 51,
            "description": "Determines whether the provided key is available in this Map.",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "key",
                    "description": "The key to lookup.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value  Whether the key is listed in this Map.",
                "type": "Boolean"
            },
            "class": "window.Map",
            "namespace": "window"
        },
        {
            "file": "src\\polyfills\\Map.js",
            "line": 64,
            "description": "Sets a value to a key in the Map.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "key",
                    "description": "The key to associate with the provided value.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to be stored by the Map.",
                    "type": "Any"
                }
            ],
            "chainable": 1,
            "class": "window.Map",
            "namespace": "window"
        },
        {
            "file": "src\\polyfills\\Map.js",
            "line": 79,
            "description": "Deletes a key (and value) from the Map.",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "key",
                    "description": "The key to delete from the Map.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value  The value of the key is returned.",
                "type": "Any"
            },
            "class": "window.Map",
            "namespace": "window"
        },
        {
            "file": "src\\AABB.js",
            "line": 27,
            "description": "Sets all of the properties of the AABB.",
            "itemtype": "method",
            "name": "setAll",
            "params": [
                {
                    "name": "x",
                    "description": "The x position of the AABB. The x is always located in the center of the object.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position of the AABB. The y is always located in the center of the object.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the AABB.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the AABB.",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 45,
            "description": "Sets bounds of the AABB.",
            "itemtype": "method",
            "name": "setBounds",
            "params": [
                {
                    "name": "left",
                    "description": "The left side of the AABB.",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "The top side of the AABB.",
                    "type": "Number"
                },
                {
                    "name": "right",
                    "description": "The right side of the AABB.",
                    "type": "Number"
                },
                {
                    "name": "bottom",
                    "description": "The bottom side of the AABB.",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 63,
            "description": "Sets the AABB values to those of the provided AABB.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "aabb",
                    "description": "The AABB to copy values.",
                    "type": "platypus.AABB"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 71,
            "description": "Whether the AABB encloses a valid space.",
            "itemtype": "property",
            "name": "empty",
            "type": "boolean",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 79,
            "description": "The x position of the AABB. The x is always located in the center of the object.",
            "itemtype": "property",
            "name": "x",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 87,
            "description": "The y position of the AABB. The y is always located in the center of the object.",
            "itemtype": "property",
            "name": "y",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 95,
            "description": "The width of the AABB.",
            "itemtype": "property",
            "name": "width",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 103,
            "description": "The height of the AABB.",
            "itemtype": "property",
            "name": "height",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 111,
            "description": "Half the width of the AABB.",
            "itemtype": "property",
            "name": "halfWidth",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 119,
            "description": "Half the height of the AABB.",
            "itemtype": "property",
            "name": "halfHeight",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 127,
            "description": "The x-position of the left edge of the AABB.",
            "itemtype": "property",
            "name": "left",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 135,
            "description": "The x-position of the right edge of the AABB.",
            "itemtype": "property",
            "name": "right",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 143,
            "description": "The y-position of the top edge of the AABB.",
            "itemtype": "property",
            "name": "top",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 151,
            "description": "The y-position of the bottom edge of the AABB.",
            "itemtype": "property",
            "name": "bottom",
            "type": "number",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 162,
            "description": "Returns a string listing AABB dimensions.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "String"
            },
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 172,
            "description": "Resets all the values in the AABB so that the AABB can be reused.",
            "itemtype": "method",
            "name": "reset",
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 183,
            "description": "Resizes the AABB.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The new width of the AABB",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The new height of the AABB",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 216,
            "description": "Changes the size and position of the bounding box so that it contains the current area and the area described in the incoming AABB.",
            "itemtype": "method",
            "name": "include",
            "params": [
                {
                    "name": "aabb",
                    "description": "The AABB whose area will be included in the area of the current AABB.",
                    "type": "platypus.AABB"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 251,
            "description": "Moves the AABB to the specified location.",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "x",
                    "description": "The new x position of the AABB.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The new y position of the AABB.",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 265,
            "description": "Moves the AABB to the specified location.",
            "itemtype": "method",
            "name": "moveX",
            "params": [
                {
                    "name": "x",
                    "description": "The new x position of the AABB.",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 279,
            "description": "Moves the AABB to the specified location.",
            "itemtype": "method",
            "name": "moveY",
            "params": [
                {
                    "name": "y",
                    "description": "The new y position of the AABB.",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 293,
            "description": "Moves the AABB to the specified location.",
            "itemtype": "method",
            "name": "moveXBy",
            "params": [
                {
                    "name": "deltaX",
                    "description": "The change in x position of the AABB.",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 304,
            "description": "Moves the AABB to the specified location.",
            "itemtype": "method",
            "name": "moveYBy",
            "params": [
                {
                    "name": "deltaY",
                    "description": "The change in y position of the AABB.",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 315,
            "description": "Expresses whether this AABB matches the provided AABB.",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "aabb",
                    "description": "The AABB to check against.",
                    "type": "platypus.AABB"
                }
            ],
            "return": {
                "description": "Returns `true` if the AABB's match.",
                "type": "Boolean"
            },
            "since": "0.7.5",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 327,
            "description": "Expresses whether this AABB contains the given AABB.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "aabb",
                    "description": "The AABB to check against",
                    "type": "platypus.AABB"
                }
            ],
            "return": {
                "description": "Returns `true` if this AABB contains the other AABB.",
                "type": "Boolean"
            },
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 338,
            "description": "Expresses whether this AABB contains the given point.",
            "itemtype": "method",
            "name": "containsVector",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to check.",
                    "type": "platypus.Vector"
                }
            ],
            "return": {
                "description": "Returns `true` if this AABB contains the vector.",
                "type": "Boolean"
            },
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 349,
            "description": "Expresses whether this AABB contains the given point.",
            "itemtype": "method",
            "name": "containsPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x-axis value.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y-axis value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns `true` if this AABB contains the point.",
                "type": "Boolean"
            },
            "since": "0.7.5",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 362,
            "description": "Expresses whether this AABB collides with the given AABB. This is similar to `intersects` but returns true for overlapping only, not touching edges.",
            "itemtype": "method",
            "name": "collides",
            "params": [
                {
                    "name": "aabb",
                    "description": "The AABB to check against",
                    "type": "platypus.AABB"
                }
            ],
            "return": {
                "description": "Returns `true` if this AABB collides with the other AABB.",
                "type": "Boolean"
            },
            "since": "0.7.4",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 374,
            "description": "Expresses whether this AABB collides with the given point. This is an exclusive version of containsPoint.",
            "itemtype": "method",
            "name": "collidesPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x-axis value.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y-axis value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns `true` if this AABB collides with the point.",
                "type": "Boolean"
            },
            "since": "0.11.0",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 387,
            "description": "Expresses whether this AABB intersects the given AABB. This is similar to `collides` but returns true for overlapping or touching edges.",
            "itemtype": "method",
            "name": "intersects",
            "params": [
                {
                    "name": "aabb",
                    "description": "The AABB to check against",
                    "type": "platypus.AABB"
                }
            ],
            "return": {
                "description": "Returns `true` if this AABB intersects the other AABB.",
                "type": "Boolean"
            },
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 398,
            "description": "Returns the area of the intersection. If the AABB's do not intersect, `0` is returned.",
            "itemtype": "method",
            "name": "getIntersectionArea",
            "params": [
                {
                    "name": "aabb",
                    "description": "The AABB this AABB intersects with.",
                    "type": "AABB"
                }
            ],
            "return": {
                "description": "Returns the area of the intersected AABB's.",
                "type": "Number"
            },
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 416,
            "description": "Returns an AABB from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "AABB.setUp",
            "return": {
                "description": "The instantiated AABB.",
                "type": "platypus.AABB"
            },
            "since": "0.7.3",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 423,
            "description": "Returns a AABB back to the cache.",
            "itemtype": "method",
            "name": "AABB.recycle",
            "params": [
                {
                    "name": "aabb",
                    "description": "The AABB to be recycled.",
                    "type": "platypus.AABB"
                }
            ],
            "since": "0.7.3",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\AABB.js",
            "line": 430,
            "description": "Relinquishes properties of the AABB and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "since": "0.7.3",
            "class": "platypus.AABB",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 20,
            "description": "The name of the event to trigger on the Entity.",
            "itemtype": "property",
            "name": "event",
            "type": "String",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 28,
            "description": "The function to call if the ActionState is active.",
            "itemtype": "property",
            "name": "trigger",
            "type": "Function",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 36,
            "description": "Whether any of the ActionState's inputs are active.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 44,
            "description": "Whether any of the ActionState's inputs were active last update.",
            "itemtype": "property",
            "name": "wasActive",
            "type": "Boolean",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 52,
            "description": "Whether the Entity's state is valid for this ActionState.",
            "itemtype": "property",
            "name": "valid",
            "type": "Boolean",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 60,
            "description": "Whether the Entity's state was valid for this ActionState last update.",
            "itemtype": "property",
            "name": "wasValid",
            "type": "Boolean",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 68,
            "description": "The state of the Entity that is valid for this ActionState.",
            "itemtype": "property",
            "name": "states",
            "type": "platypus.StateMap",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 76,
            "description": "The list of input toggles to track control input.",
            "itemtype": "property",
            "name": "inputs",
            "type": "Array",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 84,
            "description": "The message that is passed to the Entity if the ActionState is active.",
            "itemtype": "property",
            "name": "stateSummary",
            "type": "platypus.Data",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 101,
            "description": "Updates the state of the action by checking the state of the Entity and whether any inputs are active.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "state",
                    "description": "The Entity's `state` property to compare against the ActionState's valid state.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Whether the ActionState is triggered, pressed, or released.",
                "type": "Boolean"
            },
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 124,
            "description": "Triggers events on the Entity related to the ActionState's state. This is necessarily separate from the `update` method since triggered events could affect entity state. The messages have the following form and are only triggered if one of the values is `true`:\n\n    {\n        \"triggered\": true,\n        \"pressed\": true,\n        \"released\": false\n    }\n\nHere is a mapping of the various event messages depending on the ActionState's state.\n\n    ActionState State:\n         wasValid:  0 0 0 0  0 0 0 0  1 1 1 1  1 1 1 1\n            valid:  0 0 0 0  1 1 1 1  0 0 0 0  1 1 1 1\n        wasActive:  0 0 1 1  0 0 1 1  0 0 1 1  0 0 1 1\n           active:  0 1 0 1  0 1 0 1  0 1 0 1  0 1 0 1\n    Events:\n        triggered:  0 0 0 0  0 1 0 0  0 0 0 0  0 1 0 0\n          pressed:  0 0 0 0  0 1 0 1  0 0 0 0  0 1 0 1\n         released:  0 0 0 0  0 0 1 0  0 0 1 1  0 0 1 0",
            "itemtype": "method",
            "name": "resolve",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 151,
            "description": "Returns an ActionState from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "ActionState.setUp",
            "return": {
                "description": "The instantiated ActionState.",
                "type": "platypus.ActionState"
            },
            "since": "0.7.1",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 158,
            "description": "Returns an ActionState back to the cache. Prefer the ActionState's recycle method since it recycles property objects as well.",
            "itemtype": "method",
            "name": "ActionState.recycle",
            "params": [
                {
                    "name": "The",
                    "description": "ActionState to be recycled.",
                    "type": "platypus.ActionState"
                }
            ],
            "since": "0.7.1",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\ActionState.js",
            "line": 165,
            "description": "Relinquishes properties of the ActionState and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "since": "0.7.1",
            "class": "platypus.ActionState",
            "namespace": "platypus"
        },
        {
            "file": "src\\Async.js",
            "line": 56,
            "description": "Returns an Async from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "Async.setUp",
            "return": {
                "description": "The instantiated Async.",
                "type": "platypus.Async"
            },
            "class": "platypus.Async",
            "namespace": "platypus"
        },
        {
            "file": "src\\Async.js",
            "line": 62,
            "description": "Returns an Async back to the cache.",
            "itemtype": "method",
            "name": "Async.recycle",
            "params": [
                {
                    "name": "async",
                    "description": "The Async to be recycled.",
                    "type": "platypus.Async"
                }
            ],
            "class": "platypus.Async",
            "namespace": "platypus"
        },
        {
            "file": "src\\Async.js",
            "line": 68,
            "description": "Relinquishes properties of the Async and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "class": "platypus.Async",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionData.js",
            "line": 35,
            "description": "Sets all of the properties of the CollisionData.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "occurred",
                    "description": "Whether this represents an actual collision between two shapes.",
                    "type": "Boolean"
                },
                {
                    "name": "direction",
                    "description": "1 or -1 to define the direction of the collision.",
                    "type": "Number"
                },
                {
                    "name": "position",
                    "description": "A positive number describing position along the line of collision direction.",
                    "type": "Number"
                },
                {
                    "name": "deltaMovement",
                    "description": "A positive number describing the magnitude of overlap.",
                    "type": "Number"
                },
                {
                    "name": "aABB",
                    "description": "An AABB of the colliding shape.",
                    "type": "platypus.AABB"
                },
                {
                    "name": "thisShape",
                    "description": "The moving shape.",
                    "type": "platypus.Shape"
                },
                {
                    "name": "thatShape",
                    "description": "The stationary shape being collided with.",
                    "type": "platypus.Shape"
                },
                {
                    "name": "vector",
                    "description": "The vector describing the contact point.",
                    "type": "platypus.Vector"
                },
                {
                    "name": "stuck",
                    "description": "The amount of unwarranted overlap if shapes start in a collided position before moving.",
                    "type": "Number"
                }
            ],
            "since": "0.8.7",
            "class": "platypus.CollisionData",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionData.js",
            "line": 62,
            "description": "Sets all of the properties of the CollisionData to match those of the provided CollisionData object.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "dataToCopy",
                    "description": "The object values to copy.",
                    "type": "CollisionData"
                }
            ],
            "class": "platypus.CollisionData",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionData.js",
            "line": 80,
            "description": "Returns an collisionData from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "CollisionData.setUp",
            "return": {
                "description": "The instantiated CollisionData.",
                "type": "platypus.CollisionData"
            },
            "since": "0.8.7",
            "class": "platypus.CollisionData",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionData.js",
            "line": 87,
            "description": "Returns a collisionData back to the cache.",
            "itemtype": "method",
            "name": "CollisionData.recycle",
            "params": [
                {
                    "name": "collisionData",
                    "description": "The collisionData to be recycled.",
                    "type": "platypus.CollisionData"
                }
            ],
            "since": "0.8.7",
            "class": "platypus.CollisionData",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionData.js",
            "line": 94,
            "description": "Relinquishes properties of the collisionData and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "since": "0.8.7",
            "class": "platypus.CollisionData",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionDataContainer.js",
            "line": 25,
            "description": "Adds a CollisionData object to the container's X-axis if the movement distance is less than or equal to collision data collected so far.",
            "itemtype": "method",
            "name": "tryToAddX",
            "params": [
                {
                    "name": "collisionData",
                    "description": "The collision data to add.",
                    "type": "platypus.CollisionData"
                }
            ],
            "return": {
                "description": "Whether the collision data was added.",
                "type": "Boolean"
            },
            "class": "platypus.CollisionDataContainer",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionDataContainer.js",
            "line": 44,
            "description": "Adds a CollisionData object to the container's Y-axis if the movement distance is less than or equal to collision data collected so far.",
            "itemtype": "method",
            "name": "tryToAddY",
            "params": [
                {
                    "name": "collisionData",
                    "description": "The collision data to add.",
                    "type": "platypus.CollisionData"
                }
            ],
            "return": {
                "description": "Whether the collision data was added.",
                "type": "Boolean"
            },
            "class": "platypus.CollisionDataContainer",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionDataContainer.js",
            "line": 63,
            "description": "Resets the X and Y axes.",
            "itemtype": "method",
            "name": "reset",
            "class": "platypus.CollisionDataContainer",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionDataContainer.js",
            "line": 73,
            "description": "Resets the X axis.",
            "params": [
                {
                    "name": "delta",
                    "description": "The delta value of the X-axis.",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "resetX",
            "since": "0.8.7",
            "class": "platypus.CollisionDataContainer",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionDataContainer.js",
            "line": 91,
            "description": "Resets the Y axis.",
            "params": [
                {
                    "name": "delta",
                    "description": "The delta value of the Y-axis.",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "resetY",
            "since": "0.8.7",
            "class": "platypus.CollisionDataContainer",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionDataContainer.js",
            "line": 109,
            "description": "Returns an CollisionDataContainer from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "CollisionDataContainer.setUp",
            "return": {
                "description": "The instantiated CollisionDataContainer.",
                "type": "platypus.CollisionDataContainer"
            },
            "since": "0.8.7",
            "class": "platypus.CollisionDataContainer",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionDataContainer.js",
            "line": 116,
            "description": "Returns a CollisionDataContainer back to the cache.",
            "itemtype": "method",
            "name": "CollisionDataContainer.recycle",
            "params": [
                {
                    "name": "CollisionDataContainer",
                    "description": "The CollisionDataContainer to be recycled.",
                    "type": "platypus.CollisionDataContainer"
                }
            ],
            "since": "0.8.7",
            "class": "platypus.CollisionDataContainer",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionDataContainer.js",
            "line": 123,
            "description": "Relinquishes properties of the CollisionDataContainer and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "since": "0.8.7",
            "class": "platypus.CollisionDataContainer",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 83,
            "description": "Determines whether shapes collide.",
            "itemtype": "method",
            "name": "collides",
            "params": [
                {
                    "name": "shape",
                    "description": "The shape to check against for collision.",
                    "type": "platypus.CollisionShape"
                }
            ],
            "return": {
                "description": "Whether the shapes collide.",
                "type": "Boolean"
            },
            "since": "0.7.4",
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 120,
            "description": "Updates the location of the shape and AABB. The position you send should be that of the owner, the offset of the shape is added inside the function.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "ownerX",
                    "description": "The x position of the owner.",
                    "type": "Number"
                },
                {
                    "name": "ownerY",
                    "description": "The y position of the owner.",
                    "type": "Number"
                }
            ],
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 135,
            "description": "Move the shape's x position.",
            "itemtype": "method",
            "name": "moveX",
            "params": [
                {
                    "name": "x",
                    "description": "The x position to which the shape should be moved.",
                    "type": "Number"
                }
            ],
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 146,
            "description": "Move the shape's y position.",
            "itemtype": "method",
            "name": "moveY",
            "params": [
                {
                    "name": "y",
                    "description": "The y position to which the shape should be moved.",
                    "type": "Number"
                }
            ],
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 157,
            "description": "Move the shape's x and y position.",
            "itemtype": "method",
            "name": "moveXY",
            "params": [
                {
                    "name": "x",
                    "description": "The x position to which the shape should be moved.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to which the shape should be moved.",
                    "type": "Number"
                }
            ],
            "since": "0.11.2",
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 171,
            "description": "Returns the axis-aligned bounding box of the shape.",
            "itemtype": "method",
            "name": "getAABB",
            "return": {
                "description": "The AABB of the shape.",
                "type": "platypus.AABB"
            },
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 181,
            "description": "Set the shape's position as if the entity's x position is in a certain location.",
            "itemtype": "method",
            "name": "setXWithEntityX",
            "params": [
                {
                    "name": "entityX",
                    "description": "The x position of the entity.",
                    "type": "Number"
                }
            ],
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 192,
            "description": "Set the shape's position as if the entity's y position is in a certain location.",
            "itemtype": "method",
            "name": "setYWithEntityY",
            "params": [
                {
                    "name": "entityY",
                    "description": "The y position of the entity.",
                    "type": "Number"
                }
            ],
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 203,
            "description": "Transform the shape using a matrix transformation.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "matrix",
                    "description": "A matrix used to transform the shape.",
                    "type": "Array"
                }
            ],
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 226,
            "description": "Expresses whether this shape contains the given point.",
            "itemtype": "method",
            "name": "containsPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x-axis value.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y-axis value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns `true` if this shape contains the point.",
                "type": "Boolean"
            },
            "since": "0.11.0",
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 244,
            "description": "Returns a JSON object describing the collision shape.",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "Returns a JSON definition that can be used to recreate the collision shape.",
                "type": "Object"
            },
            "since": "0.11.0",
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 279,
            "description": "Returns an CollisionShape from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "CollisionShape.setUp",
            "return": {
                "description": "The instantiated CollisionShape.",
                "type": "platypus.CollisionShape"
            },
            "since": "0.7.4",
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 286,
            "description": "Returns a CollisionShape back to the cache.",
            "itemtype": "method",
            "name": "CollisionShape.recycle",
            "params": [
                {
                    "name": "The",
                    "description": "CollisionShape to be recycled.",
                    "type": "platypus.CollisionShape"
                }
            ],
            "since": "0.7.4",
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\CollisionShape.js",
            "line": 293,
            "description": "Relinquishes properties of the CollisionShape and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "since": "0.7.4",
            "class": "platypus.CollisionShape",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 35,
            "description": "Returns a string describing the component.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "Returns the component type as a string of the form \"[Component ComponentType]\".",
                "type": "String"
            },
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 45,
            "description": "Returns a JSON object describing the component.",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "Returns a JSON definition that can be used to recreate the component.",
                "type": "Object"
            },
            "since": "0.11.0",
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 54,
            "description": "This method cleans up listeners and methods that this component added to the entity. It should never be called by the component itself. Call this.owner.removeComponent(this) instead.",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 85,
            "description": "This method removes multiple event listeners from the entity.",
            "itemtype": "method",
            "name": "removeEventListeners",
            "params": [
                {
                    "name": "listeners",
                    "description": "The list of listeners to remove. If not supplied, all event listeners are removed.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 112,
            "description": "This method adds an event listener to the entity.",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "event",
                    "description": "The event that this component should listen for.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The handler for the event.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "handler  A reference to the bound handler.",
                "type": "Function"
            },
            "access": "private",
            "tagname": "",
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 131,
            "description": "This method adds a method to the entity.",
            "itemtype": "method",
            "name": "addMethod",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the method. For example, if name is \"turnYellow\", the method is accessible on the entity as `entity.turnYellow()`.",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "The function describing the method.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 150,
            "description": "This method removes an event listener from the entity.",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "event",
                    "description": "The event for which to remove a listener.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener to remove. If not supplied, all event listeners for the provided event are removed.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 172,
            "description": "This method removes a method from the entity.",
            "itemtype": "method",
            "name": "removeMethod",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the method to be removed.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 188,
            "description": "This method can be overwritten to provide the list of assets this component requires. This method is invoked when the list of game scenes is created to determine assets for each scene.",
            "itemtype": "method",
            "name": "getAssetList",
            "params": [
                {
                    "name": "definition",
                    "description": "The definition for the component.",
                    "type": "Object"
                },
                {
                    "name": "properties",
                    "description": "The properties of the Entity.",
                    "type": "Object"
                },
                {
                    "name": "defaultProperties",
                    "description": "The default properties of the Entity.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A list of the necessary assets to load.",
                "type": "Array"
            },
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Component.js",
            "line": 199,
            "description": "This method can be overwritten to provide the list of assets this component requires. This method is invoked when the list of game scenes is created to determine assets for each scene.",
            "itemtype": "method",
            "name": "getLateAssetList",
            "params": [
                {
                    "name": "data",
                    "description": "Scene data that affects the list of assets.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A list of the necessary assets to load.",
                "type": "Array"
            },
            "class": "platypus.Component",
            "namespace": "platypus"
        },
        {
            "file": "src\\Data.js",
            "line": 39,
            "description": "Returns Data from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "Data.setUp",
            "return": {
                "description": "The instantiated Data.",
                "type": "platypus.Data"
            },
            "since": "0.7.1",
            "class": "platypus.Data",
            "namespace": "platypus"
        },
        {
            "file": "src\\Data.js",
            "line": 46,
            "description": "Returns Data back to the cache. Prefer the Data's recycle method since it recycles property objects as well.",
            "itemtype": "method",
            "name": "Data.recycle",
            "params": [
                {
                    "name": "The",
                    "description": "Data to be recycled.",
                    "type": "platypus.Data"
                }
            ],
            "since": "0.7.1",
            "class": "platypus.Data",
            "namespace": "platypus"
        },
        {
            "file": "src\\Data.js",
            "line": 53,
            "description": "Relinquishes Data properties and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "since": "0.7.1",
            "class": "platypus.Data",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 88,
            "description": "Tracks keys on this object to make iteration faster.",
            "itemtype": "property",
            "name": "keys",
            "type": "Array",
            "default": "[]",
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 97,
            "description": "Returns the value of the provided key.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "The key to lookup.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value  The value of the provded key.",
                "type": "Any"
            },
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 106,
            "description": "Determines whether the provided key is available on this DataMap.",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "key",
                    "description": "The key to lookup.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value  Whether the key is listed in this DataMap.",
                "type": "Boolean"
            },
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 115,
            "description": "Sets a value to a key in the DataMap.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "key",
                    "description": "The key to associate with the provided value.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to be stored by the DataMap.",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "value  The value passed in is returned for chaining.",
                "type": "Any"
            },
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 125,
            "description": "Deletes a key (and value) from the DataMap.",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "key",
                    "description": "The key to delete from the DataMap.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value  The value of the key is returned.",
                "type": "Any"
            },
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 134,
            "description": "Clears out of keys (and values) from the DataMap.",
            "itemtype": "method",
            "name": "clear",
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 141,
            "description": "Returns a JSON object describing the component.",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "Returns a JSON definition that can be used to recreate the component.",
                "type": "Object"
            },
            "since": "0.11.0",
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 180,
            "description": "Returns DataMap from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "DataMap.setUp",
            "return": {
                "description": "dataMap  The instantiated DataMap.",
                "type": "platypus.DataMap"
            },
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 186,
            "description": "Returns DataMap back to the cache. Prefer the DataMap's recycle method since it recycles property objects as well.",
            "itemtype": "method",
            "name": "DataMap.recycle",
            "params": [
                {
                    "name": "dataMap",
                    "description": "The DataMap to be recycled.",
                    "type": "platypus.DataMap"
                }
            ],
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\DataMap.js",
            "line": 192,
            "description": "Relinquishes DataMap properties and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "class": "platypus.DataMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 127,
            "description": "The entity triggers `load` on itself once all the properties and components have been attached, notifying the components that all their peer components are ready for messages.",
            "itemtype": "event",
            "name": "load",
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 147,
            "description": "Returns a string describing the entity.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "Returns the entity type as a string of the form \"[Entity entity-type]\".",
                "type": "String"
            },
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 157,
            "description": "Returns a JSON object describing the entity.",
            "itemtype": "method",
            "name": "toJSON",
            "params": [
                {
                    "name": "includeComponents",
                    "description": "Whether the returned JSON should list components. Defaults to `false` to condense output since components are generally defined in `platypus.game.settings.entities`, but may be needed for custom-constructed entities not so defined.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns a JSON definition that can be used to recreate the entity.",
                "type": "Object"
            },
            "since": "0.11.0",
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 194,
            "description": "Attaches the provided component to the entity.",
            "itemtype": "method",
            "name": "addComponent",
            "params": [
                {
                    "name": "component",
                    "description": "Must be an object that functions as a Component.",
                    "type": "platypus.Component"
                }
            ],
            "return": {
                "description": "Returns the same object that was submitted.",
                "type": "platypus.Component"
            },
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 204,
            "description": "The entity triggers `component-added` on itself once a component has been attached, notifying other components of their peer component.",
            "itemtype": "event",
            "name": "component-added",
            "params": [
                {
                    "name": "component",
                    "description": "The added component.",
                    "type": "platypus.Component",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of component.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 215,
            "description": "Removes the mentioned component from the entity.",
            "itemtype": "method",
            "name": "removeComponent",
            "params": [
                {
                    "name": "component",
                    "description": "Must be a [[Component]] attached to the entity.",
                    "type": "Component"
                }
            ],
            "return": {
                "description": "Returns the same object that was submitted if removal was successful; otherwise returns false (the component was not found attached to the entity).",
                "type": "Component"
            },
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 225,
            "description": "The entity triggers `component-removed` on itself once a component has been removed, notifying other components of their peer component's removal.",
            "itemtype": "event",
            "name": "component-removed",
            "params": [
                {
                    "name": "component",
                    "description": "The removed component.",
                    "type": "Component",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of component.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 256,
            "description": "This method sets one or more properties on the entity.",
            "params": [
                {
                    "name": "properties",
                    "description": "A list of key/value pairs to set as properties on the entity.",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "setProperty",
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 272,
            "description": "This method removes all components from the entity.",
            "itemtype": "method",
            "name": "destroy",
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 299,
            "description": "Returns all of the assets required for this Entity. This method calls the corresponding method on all components to determine the list of assets.",
            "itemtype": "method",
            "name": "getAssetList",
            "params": [
                {
                    "name": "definition",
                    "description": "The definition for the Entity.",
                    "type": "Object"
                },
                {
                    "name": "properties",
                    "description": "Properties for this instance of the Entity.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A list of the necessary assets to load.",
                "type": "Array"
            },
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Entity.js",
            "line": 337,
            "description": "Returns all of the assets required for this Entity. This method calls the corresponding method on all components to determine the list of assets.",
            "itemtype": "method",
            "name": "getLateAssetList",
            "params": [
                {
                    "name": "definition",
                    "description": "The definition for the Entity.",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Scene data that affects asset list.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A list of the necessary assets to load.",
                "type": "Array"
            },
            "class": "platypus.Entity",
            "namespace": "platypus"
        },
        {
            "file": "src\\Game.js",
            "line": 180,
            "description": "This method causes the game to tick once. It's called by the SpringRoll Application.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "tickEvent",
                    "description": "Key/value pairs passed on to the current scene.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delta",
                            "description": "The time elapsed since the last tick.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "platypus.Game",
            "namespace": "platypus"
        },
        {
            "file": "src\\Game.js",
            "line": 193,
            "description": "Loads a scene.",
            "itemtype": "method",
            "name": "loadScene",
            "params": [
                {
                    "name": "sceneId",
                    "description": "The scene to load.",
                    "type": "String"
                },
                {
                    "name": "transition=\"instant\"",
                    "description": "What type of transition to make. Currently there are: 'fade-to-black', 'crossfade', and 'instant'.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "A list of key/value pairs describing options or settings for the loading scene.",
                    "type": "Object"
                },
                {
                    "name": "preloading=false",
                    "description": "Whether the scene should appear immediately or just be loaded and not shown.",
                    "type": "Boolean"
                }
            ],
            "class": "platypus.Game",
            "namespace": "platypus"
        },
        {
            "file": "src\\Game.js",
            "line": 229,
            "description": "This method will return the first entity it finds with a matching id.",
            "itemtype": "method",
            "name": "getEntityById",
            "params": [
                {
                    "name": "id",
                    "description": "The entity id to find.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the entity that matches the specified entity id.",
                "type": "platypus.Entity"
            },
            "class": "platypus.Game",
            "namespace": "platypus"
        },
        {
            "file": "src\\Game.js",
            "line": 244,
            "description": "This method will return all game entities that match the provided type.",
            "itemtype": "method",
            "name": "getEntitiesByType",
            "params": [
                {
                    "name": "type",
                    "description": "The entity type to find.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "entities  Returns the entities that match the specified entity type.",
                "type": "Array"
            },
            "class": "platypus.Game",
            "namespace": "platypus"
        },
        {
            "file": "src\\Game.js",
            "line": 259,
            "description": "This method destroys the game.",
            "itemtype": "method",
            "name": "destroy",
            "class": "platypus.Game",
            "namespace": "platypus"
        },
        {
            "file": "src\\Messenger.js",
            "line": 22,
            "description": "Returns a string describing the Messenger as \"[Messenger object]\".",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "String"
            },
            "class": "platypus.Messenger",
            "namespace": "platypus"
        },
        {
            "file": "src\\Messenger.js",
            "line": 32,
            "description": "This method is used by both internal components and external entities to trigger messages. When triggered, Messenger checks through bound handlers to run as appropriate. This handles multiple event structures: \"\", [], and {}",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "event",
                    "description": "This is the message(s) to process. This can be a string, an object containing an \"event\" property (and optionally a \"message\" property, overriding the value below), or an array of the same.",
                    "type": "String|Array|Object"
                },
                {
                    "name": "value",
                    "description": "This is a message object or other value to pass along to event handler.",
                    "type": "*"
                },
                {
                    "name": "debug",
                    "description": "This flags whether to output message contents and subscriber information to the console during game development. A \"value\" object parameter (above) will also set this flag if value.debug is set to true.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The number of handlers for the triggered message.",
                "type": "Number"
            },
            "class": "platypus.Messenger",
            "namespace": "platypus"
        },
        {
            "file": "src\\Messenger.js",
            "line": 83,
            "description": "This method is used by both internal components and external entities to trigger messages on this entity. When triggered, entity checks through bound handlers to run as appropriate. This method is identical to Spring Roll's [EventDispatcher.trigger](http://springroll.io/SpringRoll/docs/classes/springroll.EventDispatcher.html#method_trigger), but uses alternative Array methods to alleviate excessive GC.",
            "itemtype": "method",
            "name": "triggerEvent",
            "params": [
                {
                    "name": "event",
                    "description": "This is the message to process.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "This is a message object or other value to pass along to event handler.",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "debug",
                            "description": "This flags whether to output message contents and subscriber information to the console during game development.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The number of handlers for the triggered message.",
                "type": "Number"
            },
            "class": "platypus.Messenger",
            "namespace": "platypus"
        },
        {
            "file": "src\\Messenger.js",
            "line": 173,
            "description": "This method returns all the messages that this entity is concerned about.",
            "itemtype": "method",
            "name": "getMessageIds",
            "return": {
                "description": "An array of strings listing all the messages for which this Messenger has handlers.",
                "type": "Array"
            },
            "class": "platypus.Messenger",
            "namespace": "platypus"
        },
        {
            "file": "src\\Messenger.js",
            "line": 183,
            "description": "This method relinguishes Messenger properties",
            "itemtype": "method",
            "name": "destroy",
            "since": "0.7.1",
            "class": "platypus.Messenger",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 201,
            "access": "private",
            "tagname": "",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 208,
            "description": "The speed that the PIXIAnimation will play at. Higher is faster, lower is slower",
            "itemtype": "method",
            "name": "",
            "type": "Number",
            "default": "1",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 216,
            "description": "The currently playing animation name.",
            "itemtype": "property",
            "name": "currentAnimation",
            "default": "\"\"",
            "type": "String",
            "since": "0.9.2",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 226,
            "description": "Elapsed time since animation has been started, used internally to display current texture",
            "itemtype": "method",
            "name": "",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 234,
            "description": "Indicates if the PIXIAnimation is currently playing",
            "itemtype": "method",
            "name": "",
            "type": "Boolean",
            "readonly": "",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 265,
            "description": "The visibility of the sprite.",
            "itemtype": "property",
            "name": "visible",
            "memberof": "PIXI.DisplayObject#",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 281,
            "description": "The PIXIAnimations current frame index",
            "itemtype": "method",
            "name": "",
            "type": "Number",
            "memberof": "platypus.PIXIAnimation#",
            "readonly": "",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 295,
            "description": "The PIXIAnimations paused state. If paused, the animation doesn't update.",
            "itemtype": "property",
            "name": "paused",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 314,
            "description": "Stops the PIXIAnimation",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 322,
            "description": "Plays the PIXIAnimation",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 368,
            "description": "Stops the PIXIAnimation and goes to a specific frame",
            "params": [
                {
                    "name": "frameNumber",
                    "description": "frame index to stop at",
                    "type": "Number"
                }
            ],
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 384,
            "description": "Goes to a specific frame and begins playing the PIXIAnimation",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "animation",
                    "description": "The animation to begin playing.",
                    "type": "String"
                },
                {
                    "name": "restart ",
                    "description": "Whether to restart the animation if it's currently playing.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": " true"
                }
            ],
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 406,
            "description": "Sets the texture and anchor for a particular frame.",
            "itemtype": "method",
            "name": "setFrame",
            "params": [
                {
                    "name": "frameIndex",
                    "description": "Animation frame index to set.",
                    "type": "Number"
                }
            ],
            "since": "0.11.1",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 424,
            "description": "Returns whether a particular animation is available.",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "animation",
                    "description": "The animation to check.",
                    "type": "String"
                }
            ],
            "since": "0.9.0",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 435,
            "description": "Stops the PIXIAnimation and destroys it",
            "itemtype": "method",
            "name": "destroy",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 459,
            "description": "This method makes sure that all the base textures are in the gpu to prevent framerate lurches later due to loading base textures as their textures appear.",
            "itemtype": "method",
            "name": "PIXIAnimation.preloadBaseTextures",
            "params": [
                {
                    "name": "renderer",
                    "description": "",
                    "type": "PIXI.WebGLRenderer"
                }
            ],
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 478,
            "description": "This method cleans out all PIXIAnimation baseTextures at the end of a scene.",
            "itemtype": "method",
            "name": "PIXIAnimation.unloadBaseTextures",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PIXIAnimation.js",
            "line": 505,
            "description": "This method formats a provided value into a valid PIXIAnimation Sprite Sheet. This includes accepting the EaselJS spec, strings mapping to Platypus sprite sheets, or arrays of either.",
            "itemtype": "method",
            "name": "formatSpriteSheet",
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "The value to cast to a valid Sprite Sheet.",
                    "type": "String|Array|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "since": "0.8.4",
            "class": "platypus.PIXIAnimation",
            "namespace": "platypus"
        },
        {
            "file": "src\\PlatypusPlugin.js",
            "line": 194,
            "description": "Sets credit for the game. Defaults to the \"author\" META tag if present on the document.",
            "itemtype": "property",
            "name": "options.author",
            "type": "String",
            "default": "''",
            "class": "platypus.PlatypusPlugin",
            "namespace": "platypus"
        },
        {
            "file": "src\\PlatypusPlugin.js",
            "line": 202,
            "description": "Hides console hello for the game.",
            "itemtype": "property",
            "name": "options.hideHello",
            "type": "Boolean",
            "default": "false",
            "class": "platypus.PlatypusPlugin",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 163,
            "description": "This event is triggered on the layers once the Scene is finished loading.",
            "itemtype": "event",
            "name": "'scene-loaded'",
            "params": [
                {
                    "name": "data",
                    "description": "A list of key-value pairs of data sent into this Scene from the previous Scene.",
                    "type": "Object"
                },
                {
                    "name": "holds",
                    "description": "An object that handles any holds on before making the scene live.",
                    "type": "platypus.Data",
                    "props": [
                        {
                            "name": "count",
                            "description": "The number of holds to wait for before triggering \"scene-live\"",
                            "type": "Number"
                        },
                        {
                            "name": "release",
                            "description": "The method to trigger to let the scene loader know that one hold has been released.",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 232,
            "description": "This event is triggered on the layers once the Scene is finished loading.",
            "itemtype": "event",
            "name": "'scene-live'",
            "params": [
                {
                    "name": "data",
                    "description": "A list of key-value pairs of data sent into this Scene from the previous Scene.",
                    "type": "Object"
                }
            ],
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 241,
            "description": "Triggers 'scene-ended' on the layer.",
            "itemtype": "method",
            "name": "exitStart",
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 249,
            "description": "This event is triggered on the layers once the Scene is over.",
            "itemtype": "event",
            "name": "'scene-ended'",
            "params": [
                {
                    "name": "data",
                    "description": "A list of key-value pairs of data sent into this Scene from the previous Scene.",
                    "type": "Object"
                }
            ],
            "since": "0.7.1",
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 259,
            "description": "This method is used by external objects to trigger messages on the layers as well as internal entities broadcasting messages across the scope of the scene.",
            "itemtype": "method",
            "name": "triggerOnChildren",
            "params": [
                {
                    "name": "eventId",
                    "description": "This is the message to process.",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "This is a message object or other value to pass along to component functions.",
                    "type": "*"
                }
            ],
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 281,
            "description": "This method will return the first entity it finds with a matching id.",
            "itemtype": "method",
            "name": "getEntityById",
            "params": [
                {
                    "name": "id",
                    "description": "The entity id to find.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the entity that matches the specified entity id.",
                "type": "Entity"
            },
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 306,
            "description": "This method will return all game entities that match the provided type.",
            "itemtype": "method",
            "name": "getEntitiesByType",
            "params": [
                {
                    "name": "type",
                    "description": "The entity type to find.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "entities  Returns the entities that match the specified entity type.",
                "type": "Array"
            },
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 331,
            "description": "This method destroys all the layers in the scene.",
            "itemtype": "method",
            "name": "exit",
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 351,
            "description": "Returns all of the assets required for the Scene. This method calls the corresponding method on all entities to determine the list of assets. It ignores assets that have already been preloaded.",
            "itemtype": "method",
            "name": "getAssetList",
            "params": [
                {
                    "name": "definition",
                    "description": "The definition for the Scene.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A list of the necessary assets to load.",
                "type": "Array"
            },
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\Scene.js",
            "line": 379,
            "description": "Returns all of the dynamic assets required for the Scene.",
            "itemtype": "method",
            "name": "getLateAssetList",
            "return": {
                "description": "A list of the necessary assets to load.",
                "type": "Array"
            },
            "class": "platypus.Scene",
            "namespace": "platypus"
        },
        {
            "file": "src\\StateMap.js",
            "line": 32,
            "description": "Sets the state using the provided string value which is a comma-delimited list such that `\"blue,red,!green\"` sets the following state values:\n\n     {\n         red: true,\n         blue: true,\n         green: false\n     }",
            "itemtype": "method",
            "name": "updateFromString",
            "params": [
                {
                    "name": "states",
                    "description": "A comma-delimited list of true/false state values.",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "platypus.StateMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\StateMap.js",
            "line": 68,
            "description": "Checks whether the provided state matches this state and updates this state to match.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "state",
                    "description": "The state that this state should match.",
                    "type": "platypus.StateMap"
                }
            ],
            "return": {
                "description": "Whether this state already matches the provided state.",
                "type": "Boolean"
            },
            "class": "platypus.StateMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\StateMap.js",
            "line": 96,
            "description": "Checks whether the provided state matches all equivalent keys on this state.",
            "itemtype": "method",
            "name": "includes",
            "params": [
                {
                    "name": "state",
                    "description": "The state that this state should match.",
                    "type": "platypus.StateMap"
                }
            ],
            "return": {
                "description": "Whether this state matches the provided state.",
                "type": "Boolean"
            },
            "class": "platypus.StateMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\StateMap.js",
            "line": 120,
            "description": "Checks whether the provided state matches any equivalent keys on this state.",
            "itemtype": "method",
            "name": "intersects",
            "params": [
                {
                    "name": "state",
                    "description": "The state that this state should intersect.",
                    "type": "platypus.StateMap"
                }
            ],
            "return": {
                "description": "Whether this state intersects the provided state.",
                "type": "Boolean"
            },
            "class": "platypus.StateMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\StateMap.js",
            "line": 144,
            "description": "Returns StateMap from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "StateMap.setUp",
            "return": {
                "description": "stateMap  The instantiated StateMap.",
                "type": "platypus.StateMap"
            },
            "class": "platypus.StateMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\StateMap.js",
            "line": 150,
            "description": "Returns StateMap back to the cache. Prefer the StateMap's recycle method since it recycles property objects as well.",
            "itemtype": "method",
            "name": "StateMap.recycle",
            "params": [
                {
                    "name": "stateMap",
                    "description": "The StateMap to be recycled.",
                    "type": "platypus.StateMap"
                }
            ],
            "class": "platypus.StateMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\StateMap.js",
            "line": 156,
            "description": "Relinquishes StateMap properties and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "class": "platypus.StateMap",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 27,
            "description": "The x component of the vector.",
            "itemtype": "property",
            "name": "x",
            "type": "number",
            "default": "0",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 43,
            "description": "The y component of the vector.",
            "itemtype": "property",
            "name": "y",
            "type": "number",
            "default": "0",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 59,
            "description": "The z component of the vector.",
            "itemtype": "property",
            "name": "z",
            "type": "number",
            "default": "0",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 75,
            "description": "Returns a string describing the vector in the format of \"[x, y, z]\".",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 85,
            "description": "Sets the coordinates of the vector.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate or an array or Vector describing the whole vector.",
                    "type": "Number|Array|Vector"
                },
                {
                    "name": "y",
                    "description": "The y coordinate, or if x is an array/Vector this is the number of elements to copy from the array/Vector.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "z",
                    "description": "The z coordinate.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 106,
            "description": "Sets the coordinates of the vector.",
            "itemtype": "method",
            "name": "setXYZ",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "z",
                    "description": "The z coordinate.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "chainable": 1,
            "since": "0.7.4",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 126,
            "description": "Sets the coordinates of the vector.",
            "itemtype": "method",
            "name": "setVector",
            "params": [
                {
                    "name": "vector",
                    "description": "The Vector to copy.",
                    "type": "Vector"
                },
                {
                    "name": "dimensions",
                    "description": "The number of elements to copy from the Vector.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "chainable": 1,
            "since": "0.7.4",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 139,
            "description": "Sets the coordinates of the vector.",
            "itemtype": "method",
            "name": "setArray",
            "params": [
                {
                    "name": "arr",
                    "description": "The array to copy.",
                    "type": "Array"
                },
                {
                    "name": "dimensions",
                    "description": "The number of elements to copy from the Array.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "chainable": 1,
            "since": "0.7.4",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 159,
            "description": "Determines whether two vectors are equal.",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate or an array or Vector to check against.",
                    "type": "Number|Array|Vector"
                },
                {
                    "name": "y",
                    "description": "The y coordinate, or if x is an array/Vector this is the number of dimensions to check from the array/Vector.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "z",
                    "description": "The z coordinate.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Whether the vectors are equal.",
                "type": "Boolean"
            },
            "since": "0.7.3",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 196,
            "description": "Returns the magnitude of the vector.",
            "itemtype": "method",
            "name": "magnitude",
            "params": [
                {
                    "name": "dimensions",
                    "description": "The dimensions to include. Defaults to all dimensions.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The magnitude of the vector.",
                "type": "Number"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 216,
            "description": "Returns the direction of the vector from the z-axis",
            "return": {
                "description": "The direction of the vector in radians.",
                "type": "Number"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 234,
            "description": "Returns a normalized copy of the vector.",
            "itemtype": "method",
            "name": "getUnit",
            "return": {
                "description": "A normalized vector in the same direction as this vector.",
                "type": "platypus.Vector"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 244,
            "description": "Returns a copy of the Vector inverted.",
            "itemtype": "method",
            "name": "getInverse",
            "return": {
                "description": "",
                "type": "platypus.Vector"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 254,
            "description": "Normalizes the vector.",
            "itemtype": "method",
            "name": "normalize",
            "chainable": 1,
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 271,
            "description": "Crosses this vector with the parameter vector.",
            "itemtype": "method",
            "name": "cross",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to cross this vector with.",
                    "type": "platypus.Vector"
                }
            ],
            "chainable": 1,
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 296,
            "description": "Crosses this vector with the parameter vector and returns the cross product.",
            "itemtype": "method",
            "name": "getCrossProduct",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to cross this vector with.",
                    "type": "platypus.Vector"
                }
            ],
            "return": {
                "description": "The cross product.",
                "type": "platypus.Vector"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 307,
            "description": "Rotates the vector by the given amount.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angle",
                    "description": "The amount to rotate the vector in radians.",
                    "type": "Number"
                },
                {
                    "name": "axis",
                    "description": "A vector describing the axis around which the rotation should occur or 'x', 'y', or 'z'.",
                    "type": "String|Vector",
                    "optional": true,
                    "optdefault": "\"z\""
                }
            ],
            "chainable": 1,
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 356,
            "description": "Scales the vector by the given factor or performs a transform if a matrix is provided.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "multiplier",
                    "description": "The factor to scale by or a 2D array describing a multiplication matrix.",
                    "type": "Number|Array"
                },
                {
                    "name": "limit",
                    "description": "For scaling, determines which coordinates are affected.",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 390,
            "description": "Adds the given components to this vector.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "x",
                    "description": "The x component to add, or an array or vector describing the whole addition.",
                    "type": "Number|Array|Vector"
                },
                {
                    "name": "y",
                    "description": "The y component to add or the limit if the first parameter is a vector or array.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "z",
                    "description": "The z component to add.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 423,
            "description": "Adds the given vector to this vector.",
            "itemtype": "method",
            "name": "addVector",
            "params": [
                {
                    "name": "otherVector",
                    "description": "The vector to add.",
                    "type": "platypus.Vector"
                }
            ],
            "chainable": 1,
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 434,
            "description": "Subtracts the given vector from this vector.",
            "itemtype": "method",
            "name": "subtractVector",
            "params": [
                {
                    "name": "otherVector",
                    "description": "The vector to subtract.",
                    "type": "platypus.Vector"
                }
            ],
            "chainable": 1,
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 445,
            "description": "Scales the vector by the given factor.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "factor",
                    "description": "The factor to scale by.",
                    "type": "Number"
                },
                {
                    "name": "limit",
                    "description": "Determines which coordinates are affected. Defaults to all coordinates.",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 457,
            "description": "Finds the dot product of the two vectors.",
            "itemtype": "method",
            "name": "dot",
            "params": [
                {
                    "name": "otherVector",
                    "description": "The other vector.",
                    "type": "platypus.Vector"
                },
                {
                    "name": "limit",
                    "description": "The number of vector indexes to include in the dot product.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The dot product.",
                "type": "Number"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 480,
            "description": "Finds the shortest angle between the two vectors.",
            "itemtype": "method",
            "name": "angleTo",
            "params": [
                {
                    "name": "otherVector",
                    "description": "The other vector.",
                    "type": "platypus.Vector"
                }
            ],
            "return": {
                "description": "The angle between this vector and the received vector.",
                "type": "Number"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 505,
            "description": "Finds the shortest signed angle between the two vectors.",
            "itemtype": "method",
            "name": "signedAngleTo",
            "params": [
                {
                    "name": "otherVector",
                    "description": "The other vector.",
                    "type": "platypus.Vector"
                },
                {
                    "name": "normal",
                    "description": "A normal vector determining the resultant sign of the angle between two vectors.",
                    "type": "platypus.Vector"
                }
            ],
            "return": {
                "description": "The angle between this vector and the received vector.",
                "type": "Number"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 534,
            "description": "Find the scalar value of projecting this vector onto the parameter vector or onto a vector at the specified angle away.",
            "itemtype": "method",
            "name": "scalerProjection",
            "params": [
                {
                    "name": "vectorOrAngle",
                    "description": "The other vector or the angle between the vectors.",
                    "type": "Vector|number"
                }
            ],
            "return": {
                "description": "The magnitude of the projection.",
                "type": "Number"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 555,
            "description": "Returns a copy of this vector.",
            "itemtype": "method",
            "name": "copy",
            "return": {
                "description": "A copy of this vector.",
                "type": "platypus.Vector"
            },
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 565,
            "description": "Adds properties to an object that describe the coordinates of a vector.",
            "itemtype": "method",
            "name": "Vector.assign",
            "params": [
                {
                    "name": "object",
                    "description": "Object on which the coordinates and vector will be added.",
                    "type": "Object"
                },
                {
                    "name": "propertyName",
                    "description": "A string describing the property name where the vector is accessable.",
                    "type": "String"
                },
                {
                    "name": "coordinateName*",
                    "description": "One or more parameters describing coordinate values on the object.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 623,
            "description": "Returns a Vector from cache or creates a new one if none are available.",
            "itemtype": "method",
            "name": "Vector.setUp",
            "return": {
                "description": "The instantiated Vector.",
                "type": "platypus.Vector"
            },
            "since": "0.7.1",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 630,
            "description": "Returns a Vector back to the cache. Prefer the Vector's recycle method since it recycles property objects as well.",
            "itemtype": "method",
            "name": "Vector.recycle",
            "params": [
                {
                    "name": "The",
                    "description": "Vector to be recycled.",
                    "type": "platypus.Vector"
                }
            ],
            "since": "0.7.1",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\Vector.js",
            "line": 637,
            "description": "Relinquishes properties of the vector and recycles it.",
            "itemtype": "method",
            "name": "recycle",
            "since": "0.7.1",
            "class": "platypus.Vector",
            "namespace": "platypus"
        },
        {
            "file": "src\\factory.js",
            "line": 1,
            "description": "The component factory takes in component definitions and creates component classes that can be used to create components by entities.  It adds properties and methods that are common to all components so that component definitions can focus on unique properties and methods.\n\nTo create an extended component class, use the following syntax:\n\n     platypus.createComponentClass(componentDefinition, prototype);\n\n * `componentDefinition` is list of key/value pairs that describe the component's behavior.\n * `prototype` is an optional prototype that this component extends.\nSee ComponentExample.js for an example componentDefinition that can be sent into this component class factory.",
            "class": "",
            "namespace": "platypus"
        },
        {
            "file": "src\\platypus.js",
            "line": 22,
            "description": "This is an object of boolean key/value pairs describing the current browser's properties.",
            "itemtype": "property",
            "name": "supports",
            "type": "Object",
            "class": "",
            "module": "platypus",
            "namespace": "platypus"
        },
        {
            "file": "src\\platypus.js",
            "line": 44,
            "description": "This method defines platypus.debug and uses springroll.Debug if available. If springroll.Debug is not loaded, platypus.debug provides inactive stubs for console methods.",
            "itemtype": "property",
            "name": "debug",
            "type": "Object",
            "class": "",
            "module": "platypus",
            "namespace": "platypus"
        },
        {
            "file": "src\\platypus.js",
            "line": 57,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "",
            "module": "platypus",
            "namespace": "platypus"
        },
        {
            "file": "src\\platypus.js",
            "line": 65,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "",
            "module": "platypus",
            "namespace": "platypus"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: member with method",
            "line": " src\\PIXIAnimation.js:208"
        },
        {
            "message": "replacing incorrect tag: member with method",
            "line": " src\\PIXIAnimation.js:226"
        },
        {
            "message": "replacing incorrect tag: member with method",
            "line": " src\\PIXIAnimation.js:234"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\PIXIAnimation.js:265"
        },
        {
            "message": "replacing incorrect tag: member with method",
            "line": " src\\PIXIAnimation.js:281"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\PIXIAnimation.js:281"
        },
        {
            "message": "Missing item type\n### Local Broadcasts:\n- **child-entity-added** - This message is triggered when a new entity has been added to the list of children entities.\n  - @param message ([[Entity]] object) - The entity that was just added.\n- **child-entity-removed** - This message is triggered when an entity has been removed from the list of children entities.\n  - @param message ([[Entity]] object) - The entity that was just removed.\n\n### Child Broadcasts:\n- **peer-entity-added** - This message is triggered when a new entity has been added to the parent's list of children entities.\n  - @param message ([[Entity]] object) - The entity that was just added.\n- **peer-entity-removed** - This message is triggered when an entity has been removed from the parent's list of children entities.\n  - @param message ([[Entity]] object) - The entity that was just removed.\n- **[Messages specified in definition]** - Listens for specified messages and on receiving them, re-triggers them on child entities.\n  - @param message (object) - sends the message object received by the original message.\n\n## Entity Methods:\n- **addEntity** -  This method will add the provided entity to this component's list of entities.\n  - @param entity ([[Entity]] object) - Required. This is the entity to be added as a child.\n  - @return entity ([[Entity]] object) - Returns the entity that was just added.\n- **removeEntity** - This method will remove the provided entity from the list of child entities.\n  - @param message ([[Entity]] object) - Required. The entity to remove.\n  - @return entity ([[Entity]] object | false) - Returns the entity that was just removed. If the entity was not foudn as a child, `false` is returned, indicated that the provided entity was not a child of this entity.\n- **getEntitiesByType** - This method will return all child entities (including grandchildren) that match the provided type.\n  - @param type (string) - Required. The entity type to find.\n  - @return entities (Array of [[Entity]] objects) - Returns the entities that match the specified entity type.\n- **getEntityById** - This method will return the first child entity it finds with a matching id (including grandchildren).\n  - @param id (string) - Required. The entity id to find.\n  - @return entity ([[Entity]] object) - Returns the entity that matches the specified entity id.\n- **triggerOnChildren** - This method is used by both internal components and external entities to trigger messages on the child entities.\n  - @param event (variant) - This is the message(s) to process. This can be a string, an object containing an \"event\" property (and optionally a \"message\" property, overriding the value below), or an array of the same.\n  - @param value (variant) - This is a message object or other value to pass along to component functions.\n  - @param debug (boolean) - This flags whether to output message contents and subscriber information to the console during game development. A \"value\" object parameter (above) will also set this flag if value.debug is set to true.\n  - @return integer - The number of handlers for the triggered message: this is useful for determining how many child entities care about a given message.\n- **triggerEvent** - This method is used by both internal components and external entities to trigger messages on the child entities.\n  - @param event (string) - This is the message to process.\n  - @param value (variant) - This is a message object or other value to pass along to component functions.\n  - @param debug (boolean) - This flags whether to output message contents and subscriber information to the console during game development. A \"value\" object parameter (above) will also set this flag if value.debug is set to true.\n  - @return integer - The number of handlers for the triggered message: this is useful for determining how many child entities care about a given message.",
            "line": " src\\components\\EntityContainer.js:9"
        },
        {
            "message": "Missing item type",
            "line": " src\\components\\HandlerCollision.js:56"
        },
        {
            "message": "Missing item type\nFind the earliest point at which this shape collides with one of the potential colliding shapes along this axis.\nFor example, cycles through shapes a, b, and c to find the earliest position:\n\n   O---->   [b]  [a]     [c]\n\n   Returns collision location for:\n\n           O[b]",
            "line": " src\\components\\HandlerCollision.js:773"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicImpactLaunch**\nThis component will cause the entity to move in a certain direction on colliding with another entity.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component updates its location according to its current state.\n- **impact-launch** - On receiving this message, the component causes the entity's position to change according to the preset behavior.\n  - @param collisionInfo.x (number) - Either 1,0, or -1. 1 if we're colliding with an object on our right. -1 if on our left. 0 if not at all.\n  - @param collisionInfo.y (number) - Either 1,0, or -1. 1 if we're colliding with an object on our bottom. -1 if on our top. 0 if not at all.\n- **hit-solid** - On receiving this message, the component discontinues its impact-launch behavior.\n  - @param collisionInfo.y (number) - Either 1,0, or -1. If colliding below, impact-launch behavior ceases.\n\n## JSON Definition:\n    {\n      \"type\": \"LogicImpactLaunch\",\n      \n      \"state\": \"launching\",\n      // Optional: This sets the state of the entity while it's being launched. Defaults to \"stunned\".\n      \n      \"accelerationX\": 5,\n      \"accelerationY\": 5,\n      // Optional: acceleration entity should have in world units while being launched. Defaults to -0.2 for x and -0.6 for y.\n      \n      \"flipX\": true,\n      \"flipY\": true\n      // Optional: whether the directions of acceleration should flip according to the direction of the collision. Defaults to false for y and true for x.\n    }",
            "line": " src\\components\\LogicImpactLaunch.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicPacingPlatform**\nThis component changes the (x, y) position of an object according to its speed and heading and alternates back and forth. This is useful for in-place moving platforms.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component updates its location according to its current state.\n  - @param message.delta - To determine how far to move the entity, the component checks the length of the tick.\n\n## JSON Definition:\n    {\n      \"type\": \"LogicDirectionalMovement\",\n      \n      \"angle\": 3.14,\n      // Optional. Defines the angle of movement in radians. Defaults to 0 (horizontal, starts moving right).\n      \n      \"distance\": 440,\n      // Optional. Declares distance in world units that the entity should move back and forth across. Defaults to 128.\n      \n      \"period\": 6000,\n      // Optional. Sets the time in milliseconds that the entity should take to make a complete movement cycle. Defaults to 4 seconds (4000).\n      \n      \"startPos\": 0\n      // Optional. Position in the cycle that the movement should begin. Defaults in the middle at 0; PI/2 and -PI/2 will put you at the extremes.\n    }",
            "line": " src\\components\\LogicPacingPlatform.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicPortal**\nA component which changes the scene when activated. When the portal receives an occupied message it sends the entity in that message notifying it. This message is meant to give the entity a chance to activate the portal in the manner it wants. The portal can also be activated by simply telling it to activate.\n\n## Dependencies\n- [[HandlerLogic]] (on entity's parent) - This component listens for a \"handle-logic\" message it then checks to see if it should change the scene if the portal is activated.\n- [[SceneChanger]] (on entity) - This component listens for the \"new-scene\" message that the LogicPortal sends and actually handles the scene changing.\n- [[CollisionBasic]] (on entity) - Not required, but if we want the 'occupied-portal' call to fire on collision you'll need to have a CollisionBasic component on the portal.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - Checks to see if we should change scene if the portal is activated.\n- **occupied-portal** - This message takes an entity and then sends the entity a 'portal-waiting' message. The idea behind this was that you could use it with collision. When an entity gets in front of the portal the collision sends this message, we then tell the entity that collided to do whatever it needs and then it calls back to activate the portal.\n  - @param message.entity (entity Object) - The entity that will receive the 'portal-waiting' message.\n- **activate-portal** - This message turns the portal on. The next 'handle-logic' call will cause a change of scene.\n\n### Local Broadcasts:\n- **new-scene** - Calls the 'SceneChanger' component to tell it to change scenes.\n  - @param object.destination (string) - The id of the scene that we want to go to.\n\n### Peer Broadcasts:\n- **portal-waiting** - Informs another object that the portal is waiting on it to send the activate message.\n  - @param entity - This is the portal entity. To be used so that the object can communicate with it directly.\n\n## JSON Definition\n    {\n      \"type\": \"name-of-component\",\n      \"destination\" : \"level-2\"\n      //Required - The destination scene to which the portal will take us. In most cases this will come into the portal from Tiled where you'll set a property on the portal you place.\n    }",
            "line": " src\\components\\LogicPortal.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicPushable**\nA component that enables an entity to be pushed.\n\n## Dependencies\n- [[HandlerLogic]] (on entity's parent) - This component listens for a \"handle-logic\" message. It then moves the entity if it's being pushed.\n- [[CollisionBasic]] (on entity) - This component listens for messages from the CollisionBasic component. In particular 'hit-solid' and 'push-entity' are coming from collision.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - Checks to see if we're being pushed. If so, we get pushed. Then resets values.\n  - @param resp.delta (number) - The time since the last tick.\n- **push-entity** - Received when we collide with an object that can push us. We resolve which side we're colliding on and set up the currentPushX and currentPushY values so we'll move on the handle-logic call.\n  - @param collisionInfo.x (number) - Either 1,0, or -1. 1 if we're colliding with an object on our right. -1 if on our left. 0 if not at all.\n  - @param collisionInfo.y (number) - Either 1,0, or -1. 1 if we're colliding with an object on our bottom. -1 if on our top. 0 if not at all.\n- **hit-solid** - Called when the entity collides with a solid object. Stops the object from being pushed further in that direction.\n  - @param collisionInfo.x (number) - Either 1,0, or -1. 1 if we're colliding with an object on our right. -1 if on our left. 0 if not at all.\n  - @param collisionInfo.y (number) - Either 1,0, or -1. 1 if we're colliding with an object on our bottom. -1 if on our top. 0 if not at all.\n\n## JSON Definition\n    {\n      \"type\": \"LogicPushable\",\n       \"xPush\" : .01,\n      //Optional - The distance per millisecond this object can be pushed in x. Defaults to .01.\n      \"yPush\" : .01,\n      //Optional - The distance per millisecond this object can be pushed in y. Defaults to .01.\n      \"push\" : .01\n      //Optional - The distance per millisecond this object can be pushed in x and y. Overwritten by the more specific values xPush and yPush. Defaults to .01.\n    }",
            "line": " src\\components\\LogicPushable.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicRebounder**\nThis component works with `CollisionBasic` to cause entities to bounce away on solid collisions.\n\n## Dependencies\n- [[CollisionBasic]] - Relies on collision messages to perform rebounding movement.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On receiving this message, `LogicRebounder` clears its stored collision information.\n- **hit-static** - On receiving this message, `LogicRebounder` rebounds.\n  - @param message.direction (2d vector) - This is the direction in which the collision occurred, tangental to the impact interface.\n- **hit-non-static** - On receiving this message, `LogicRebounder` rebounds.\n  - @param message.direction (2d vector) - This is the direction in which the collision occurred, tangental to the impact interface.\n  - @param message.entity ([[entity]]) - This is the entity with which this entity is colliding.\n- **share-velocity** - On receiving this message, `LogicRebounder` stores collision information.\n  - @param entity ([[entity]]) - This is the entity with which this entity is colliding.\n\n### Peer Broadcasts:\n- **share-velocity** - This component triggers this message to prevent double collision calls.\n  - @param entity ([[entity]]) - This entity.\n\n## JSON Definition\n    {\n      \"type\": \"LogicRebounder\",\n      \n      \"mass\": 12,\n      // Optional. Relative size of the entity. Defaults to 1.\n      \n      \"elasticity\": 0.4\n      // Optional. Bounciness of the entity. Defaults to 0.8.\n    }\n\nRequires: [\"../Vector.js\"]",
            "line": " src\\components\\LogicRebounder.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicRegionSpawner**\nThis component spawns new entities within a given area at set intervals.\n\n## Dependencies\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to determine whether to spawn another entity.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component determines whether to spawn another entity.\n  - @param message.delta - To determine whether to spawn, the component keeps a running count of tick lengths.\n\n## JSON Definition\n    {\n      \"type\": \"LogicRegionSpawner\",\n      // List all additional parameters and their possible values here.\n      \n      \"spawn\": \"teddy-bear\",\n      // Required. String identifying the type of entity to spawn.\n      \n      \"interval\": 30000,\n      // Optional. Time in milliseconds between spawning an entity. Defaults to 1000.\n      \n      \"regions\": {\n      // If spawning entity covers a large area, the spawned entities can be randomly spawned over a regional grid, so that the whole area gets a somewhat uniform coverage of spawned entities\n\n        \"width\": 4000,\n        \"height\": 5000,\n        // Optional. Dimensions of a spawning region in world units. Defaults to entity's dimensions. The entity's dimensions are sliced into chunks of this size for spawn distribution.\n      }\n    }",
            "line": " src\\components\\LogicRegionSpawner.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicSpawner**\nThis component creates an entity and propels it away. This is useful for casting, firing, tossing, and related behaviors.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to determine whether it should be spawning or not.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component checks its current state to decide whether to spawn entities.\n- **spawn** - creates an entity on the following tick message.\n  - @param message.pressed (boolean) - Optional. If `message` is included, the component checks the value of `pressed`: false results in no entities being created. Is this primarily for controller input.\n\n## JSON Definition\n    {\n      \"type\": \"LogicSpawner\"\n      // List all additional parameters and their possible values here.\n\n      \"spawneeClass\": \"wet-noodle\",\n      // Required: string identifying the type of entity to create.\n      \n      \"state\": \"tossing\",\n      // Optional. The entity state that should be true while entities are being created. Defaults to \"firing\".\n      \n      \"speed\": 4,\n      // Optional. The velocity with which the entity should start. Initial direction is determined by this entity's facing states (\"top\", \"right\", etc).\n      \n      \"offsetX\": 45,\n      \"offsetY\": -20,\n      // Optional. Location relative to the entity where the should be located once created. Defaults to (0, 0).\n    }",
            "line": " src\\components\\LogicSpawner.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicStateMachine**\nThis component is a general purpose state-machine for an entity, taking in various message inputs to determine the entity's state and triggering messages as necessary when a certain state occurs or several state combinations are in place.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component checks sustained inputs for changes in state.\n- **update-state** - Updates the entity's state according to this message's state information.\n  - @param message (object) - This is an object of key/value pairs where keys are states and the values are booleans to turn on and off states.\n- **state-changed** - Updates the entity's state according to this message's state information, and broadcasts any applicable messages.\n  - @param message (object) - This is an object of key/value pairs where keys are states and the values are booleans to turn on and off states.\n- **[input messages]** - This component listens for messages as determined by the JSON settings.\n\n### Local Broadcasts:\n- **[output messages]** - This component triggers output messages as determined by the JSON settings.\n\n## JSON Definition\n    {\n      \"type\": \"LogicStateMachine\",\n      \n      \"inputs\":{\n      // This is a list of messages that this component should listen for to change states.\n      \n        \"smell-toast\":{\n        // If the entity triggers \"smell-toast\", this component will change the state of the entity as follows:\n        \n          \"smelling-food\": true,\n          \"smelling-nothing\": false\n        },\n        \n        \"go-to-store\":{\n          \"at-store\": true\n        }\n      },\n      \n      \"sustained-inputs\":{\n      // These are messages that must be triggered every tick for the state to remain true: if not, they become false.\n        \"near-grover\": \"smelling-trash\"\n      }\n    }",
            "line": " src\\components\\LogicStateMachine.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicSwitch**\nThis component serves as a switch in the game world, typically tied to collision events such that this entity changes state when another entity collides or passed over.\n\n## Dependencies:\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its state.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component determines its state and triggers messages accordingly.\n- **switch-pressed** - Causes the switch to be in a pressed state.\n\n### Local Broadcasts:\n- **switch-on** - This message is triggered when the switch has just been pressed.\n- **switch-off** - This message is triggered when the switch has just been released.\n- **initial-press** - This message is triggered the first time the switch is pressed. This occurs before the \"switch-on\" message is triggered.\n\n## JSON Definition:\n    {\n      \"type\": \"LogicSwitch\",\n      \n      \"sticky\": true\n      // Optional. Whether a pressed switch should stay pressed once collision messages cease. Defaults to `false`.\n    }",
            "line": " src\\components\\LogicSwitch.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicTeleportee**\nThis component causes an entity to teleport when receiving a teleport message.\n\n## Dependencies:\n- [[CollisionBasic]] (on entity) - This component triggers \"relocate-entity\" to perform teleport, for which \"CollisionBasic\" listens.\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component updates its location according to its current state.\n- **teleport** - Teleports the entity to its set destination.\n- **set-destination** - Sets the destination to teleport to in world coordinates.\n  - @param message.x, message.y (number) - The position in world coordinates to set the teleport destination to.\n- **hit-telepoint** - Sets the destination to the colliding entity's coordinates: useful for checkpoint behavior.\n  - @param message ([[Entity]]) - The entity whose coordinates will be the teleport destination.\n\n### Local Broadcasts:\n- **relocate-entity** - Broadcasts the new location for the entity.\n  - @param message.x, message.y (number) - The position in world coordinates to set the teleport destination to.\n- **teleport-complete** - Triggered once the entity has been moved to the new location.\n\n## JSON Definition\n    {\n      \"type\": \"LogicTeleportee\"\n    }",
            "line": " src\\components\\LogicTeleportee.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicTeleporter**\nThis component listens for redirected collision messages and fires a message on the colliding entity to specify where the colliding entity should relocate itself.\n\n## Dependencies:\n- [[Collision-Basic]] (on entity) - This component listens for collision messages on the entity.\n- [[Entity-Container]] (on entity's parent) - This component listens for new peer entities being added on its parent to find its teleport destination.\n\n## Messages\n\n### Listens for:\n- **peer-entity-added** - This teleporter listens as other entities are added so it can recognize the entity it should teleport colliding objects to.\n  - @param message (object) - expects an entity as the message object in order to determine whether it is the requested teleportation destination.\n- **teleport-entity** - On receiving this message, the component will fire `teleport` on the colliding entity, sending this.destination. The colliding entity must handle the `teleport` message and relocate itself.\n  - @param message.x (integer) - uses `x` to determine if collision occurred on the left (-1) or right (1) of this entity.\n  - @param message.y (integer) - uses `y` to determine if collision occurred on the top (-1) or bottom (1) of this entity.\n  - @param message.entity (object) - triggers a `teleport` message on `entity`.\n\n### Peer Broadcasts:\n- **teleport** - On receiving a `teleport-entity` message, if the colliding entity is colliding on the teleporter's facing side, this message is triggered on the colliding entity.\n  - @param message (object) - sends the destination entity as the message object, the x and y coordinates being the most important information for the listening entity.\n\n## JSON Definition:\n    {\n      \"type\": \"LogicTeleporter\",\n      \n      \"facing\": \"up\",\n      // Optional: \"up\", \"down\", \"left\", or \"right\". Will only trigger \"teleport\" if colliding entity collides on the facing side of this entity. If nothing is specified, all collisions fire a \"teleport\" message on the colliding entity.\n      \n      \"teleportId\": \"Destination entity's linkId property\"\n      // Required: String that matches the \"linkId\" property of the destination entity. This destination entity is passed on a \"teleport\" message so teleporting entity knows where to relocate.\n    }",
            "line": " src\\components\\LogicTeleporter.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **LogicTimer**\nA timer that can used to trigger events. The timer can increment and decrement. It can be an interval timer, going off over and over. Has a max time which it will not exceed by default this is 1 hour.\n\n## Dependencies\n- [[Handler-Logic]] (on entity's parent) - This component listens for a \"handle-logic\" message to update the timer.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - Handles the update for the timer. Increments or decrements the current time. If it's hit the max it stops the timer at the max. If it hits the alarm it sets it off. Sends an update message indicating the timer's current time for other components to use.\n  - @param data.delta (number) - The time passed since the last tick.\n- **set** - Set the time.\n  - @param data.time (number) - The new value for the time.\n- **start** - Start the timer counting.\n- **stop** - Stop the timer counting.\n\n### Local Broadcasts:\n- **[alarm message from definition]** - The definition.alarm value from the JSON definition is used as the message id. It's sent when the alarm goes off.\n- **[update message from definition]** - The definition.update value from the JSON definition is used as the message id. It's sent every 'handle-logic' tick.\n  - @param message.time (number) - The current time value for the timer.\n\n## JSON Definition\n    {\n      \"type\": \"LogicTimer\",\n      \"time\" : 0,\n      //Optional - The starting time for the timer. Defaults to 0.\n      \"alarmTime\" : 10000,\n      //Optional - The time when the alarm will trigger the alarm message. Defaults to undefined, which never triggers the alarm.\n      \"isInterval\" : false,\n      //Optional - Whether or not the alarm fires at intervals of the alarmTime. Defaults to false.\n      \"alarmMessage\" : \"ding\",\n      //Optional - The message sent when the alarm goes off. Defaults to an empty string.\n      \"updateMessage\" : \"\",\n      //Optional - The message sent when the timer updates. Defaults to an empty string.\n      \"on\" : true,\n      //Optional - Whether the alarm starts on. Defaults to true.\n      \"isIncrementing\" : true,\n      //Optional - Whether the timer is incrementing or decrementing. If the value is false it is decrementing. Defaults to true.\n      \"maxTime\" : 3600000\n      //Optional - The max value, positive or negative, that the timer will count to. At which it stops counting. Default to 3600000 which equals an hour.\n    }",
            "line": " src\\components\\LogicTimer.js:1"
        },
        {
            "message": "Missing item type\n# COMPONENT **Node**\nThis component causes an entity to be a position on a [[NodeMap]]. This component should not be confused with `NodeResident` which should be used on entities that move around on a NodeMap: `Node` simply represents a non-moving location on the NodeMap.\n  \n## JSON Definition\n    {\n      \"type\": \"NodeResident\",\n      \n      \"nodeId\": \"city-hall\",\n      // Optional. The id of the node that this entity should start on. Uses the entity's nodeId property if not set here.\n      \n      \"nodes\": ['path','sidewalk','road'],\n      // Optional. This is a list of node types that this entity can reside on. If not set, entity can reside on any type of node.\n      \n      \"shares\": ['friends','neighbors','city-council-members'],\n      // Optional. This is a list of entities that this entity can reside with on the same node. If not set, this entity cannot reside with any entities on the same node.\n      \n      \"speed\": 5,\n      // Optional. Sets the speed with which the entity moves along an edge to an adjacent node. Default is 0 (instantaneous movement).\n      \n      \"updateOrientation\": true\n      // Optional. Determines whether the entity's orientation is updated by movement across the NodeMap. Default is false.\n    }",
            "line": " src\\components\\Node.js:1"
        },
        {
            "message": "Missing item type\nFinds the closest node to a given point, with respect to any inclusion or exclusion lists.\n\nmethod getClosestNode",
            "line": " src\\components\\NodeMap.js:246"
        },
        {
            "message": "Missing item type\n# COMPONENT **NodeResident**\nThis component connects an entity to its parent's [[NodeMap]]. It manages navigating the NodeMap and triggering events on the entity related to its position.\n\n## Dependencies\n- [[NodeMap]] (on entity's parent) - This component uses the `NodeMap` to determine its location and navigate to other nodes.\n- [[HandlerLogic]] (on entity's parent) - This component listens for a logic tick message to maintain and update its location.\n\n## Messages\n\n### Listens for:\n- **handle-logic** - On a `tick` logic message, the component updates its location and triggers messages regarding its neighbors.\n  - @param message.delta (Number) - This component uses the current time to determine its progress along an edge if moving from node to node on the map.\n- **on-node** - Sets the entity's position to the sent node, updates its coordinates, and triggers messages regarding its neighbors if any.\n  - @param node (Node) - The node that this entity should be located on.\n- **leave-node** - Removes the entity from its current node if it's on one.\n- **goto-node** - Begins moving the entity along edges to get to sent node.\n  - @param node (Node) - The node that this entity should move to.\n- **follow** - Causes this entity to follow another entity. The leading entity must also have a `NodeResident` component and exist in the NodeMap.\n  - @param entity (Entity) - The entity that this entity should follow.\n\n### Local Broadcasts:\n- **next-to-[entity-type]** - This message is triggered when the entity is placed on a node. It will trigger on all neighboring entities, as well as on itself on behalf of neighboring entities.\n  - @param entity (Entity) - The entity that is next to the listening entity.\n- **with-[entity-type]** - This message is triggered when the entity is placed on a node. It will trigger on all entities residing on the same node, as well as on itself on behalf of all resident entities.\n  - @param entity (Entity) - The entity that is with the listening entity.\n- **left-node** - Triggered when the entity leaves a node.\n  - @param node (Node) - The node that the entity just left.\n- **[Messages specified in definition]** - When the entity is placed on a node, it checks out the type of node and triggers a message on the entity if an event is listed for the current node type.\n\n## States\n- **on-node** - This state is true when the entity is on a node.\n- **moving** - This state is true when the entity is moving from one node to another.\n- **going-[direction]** - This state is true when the entity is moving (or has just moved) in a direction (determined by the NodeMap) from one node to another.\n  \n## JSON Definition\n    {\n      \"type\": \"NodeResident\",\n      \n      \"nodeId\": \"city-hall\",\n      // Optional. The id of the node that this entity should start on. Uses the entity's nodeId property if not set here.\n      \n      \"nodes\": {\"path\": \"walking\", \"sidewalk\": \"walking\", \"road\": \"driving\"],\n      // Optional. This is a list of node types that this entity can reside on. If not set, entity can reside on any type of node.\n      \n      \"shares\": ['friends','neighbors','city-council-members'],\n      // Optional. This is a list of entities that this entity can reside with on the same node. If not set, this entity can reside with any entities on the same node.\n      \n      \"speed\": 5,\n      // Optional. Sets the speed with which the entity moves along an edge to an adjacent node. Default is 0 (instantaneous movement).\n      \n      \"updateOrientation\": true\n      // Optional. Determines whether the entity's orientation is updated by movement across the NodeMap. Default is false.\n    }",
            "line": " src\\components\\NodeResident.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\mixins\\Array.js:1"
        },
        {
            "message": "Missing item type\nThis adds support for a tiny API to PIXI.Graphics similar to the CreateJS Graphics API. This is used for backwards support for RenderSprite masks.",
            "line": " src\\mixins\\PIXI.Graphics.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\mixins\\String.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\polyfills\\Map.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\PIXIAnimation.js:201"
        },
        {
            "message": "Missing item type\nStops the PIXIAnimation",
            "line": " src\\PIXIAnimation.js:314"
        },
        {
            "message": "Missing item type\nPlays the PIXIAnimation",
            "line": " src\\PIXIAnimation.js:322"
        },
        {
            "message": "Missing item type\nStops the PIXIAnimation and goes to a specific frame",
            "line": " src\\PIXIAnimation.js:368"
        },
        {
            "message": "Missing item type\nReturns the direction of the vector from the z-axis",
            "line": " src\\Vector.js:216"
        },
        {
            "message": "Missing item type\nThe component factory takes in component definitions and creates component classes that can be used to create components by entities.  It adds properties and methods that are common to all components so that component definitions can focus on unique properties and methods.\n\nTo create an extended component class, use the following syntax:\n\n     platypus.createComponentClass(componentDefinition, prototype);\n\n * `componentDefinition` is list of key/value pairs that describe the component's behavior.\n * `prototype` is an optional prototype that this component extends.\nSee ComponentExample.js for an example componentDefinition that can be sent into this component class factory.",
            "line": " src\\factory.js:1"
        }
    ]
}